
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'nonassocLESSGREATERLESS_EQUALGREATER_EQUALEQUALSNOT_EQUALSleftPLUSMINUSleftTIMESDIVIDErightPOWERrightHASH_ROCKETAND ASSIGN BEGIN BITWISE_AND BREAK CASE CLASS CLASS_VAR COMMA COMMENT CONSTANT DEF DIVIDE DIVIDE_ASSIGN DO DOT DOUBLE_DOT ELSE ELSIF END ENSURE EQUALS FALSE FLOAT FLOOR_DIVIDE FOR GETS GLOBAL_VAR GREATER GREATER_EQUAL HASH_ROCKET IDENTIFIER IF IN INSTANCE_VAR INTEGER LAMBDA LBRACE LBRACKET LESS LESS_EQUAL LPAREN MINUS MINUS_ASSIGN MOD MODULE MOD_ASSIGN NEW NEXT NIL NOT NOT_EQUALS OR PIPE PLUS PLUS_ASSIGN POWER POWER_ASSIGN PROC PUTS QUESTION_MARK RAISE RANGE RBRACE RBRACKET REDO REQUIRE RESCUE RETRY RETURN RPAREN SELF SEMICOLON SETNEW SPACESHIP STRING SUPER TIMES TIMES_ASSIGN TRUE UNTIL WHEN WHILE YIELDprogram : statements END\n               | statementsparams : expression\n              | params COMMA expressionparams : IDENTIFIER\n              | params COMMA IDENTIFIERstatements : statement\n                  | statements statementstatement :  expressionstatement : IDENTIFIER ASSIGN INTEGER\n                 | IDENTIFIER ASSIGN FLOATstatement : GLOBAL_VAR ASSIGN STRING\n                 | GLOBAL_VAR ASSIGN expressionfactor : factor POWER factorfactor : STRINGexpression : LBRACE key_value_pairs RBRACEexpression : LBRACE RBRACEkey_value_pairs : key_value\n                       | key_value_pairs COMMA key_valuekey_value : expression HASH_ROCKET expressionexpression : IDENTIFIER\n                  | GLOBAL_VAR\n                  | INSTANCE_VARstatement : statement statementstatement : IF expression statement END\n                 | IF expression statement ELSE statement END\n                 | IF expression statement ELSIF expression statement END\n                 | IF expression statement ELSIF expression statement ELSE statement ENDexpression : expression GREATER expression\n                  | expression LESS expression\n                  | expression GREATER_EQUAL expression\n                  | expression LESS_EQUAL expression\n                  | expression EQUALS expression\n                  | expression NOT_EQUALS expressionstatement : DEF IDENTIFIER statement ENDstatement : IDENTIFIERstatement : INSTANCE_VAR ASSIGN INTEGER\n                 | INSTANCE_VAR ASSIGN FLOATexpression : SETNEW LPAREN optional_elements RPARENoptional_elements : elements\n                         | emptyempty :statement : IDENTIFIER ASSIGN GETSstatement : DEF IDENTIFIER LPAREN params RPAREN statements ENDstatement : WHILE expression statements ENDexpression : termterm : factor DIVIDE factorterm : factor TIMES factorexpression : expression PLUS factorexpression : expression MINUS factorfactor : INTEGER\n              | FLOAT factor : LPAREN expression RPARENexpression : LBRACKET elements RBRACKETelements : expression\n                | elements COMMA expressionstatement : FOR IDENTIFIER IN range statementrange : INTEGER DOUBLE_DOT INTEGER\n             | FLOAT DOUBLE_DOT FLOATstatement : PUTS statement'
    
_lr_action_items = {'IDENTIFIER':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,19,21,23,24,25,26,27,28,29,30,34,35,36,37,38,39,42,44,46,49,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,76,77,78,82,83,84,85,86,87,88,89,90,94,95,100,102,103,104,105,106,109,110,111,114,115,116,117,118,119,120,],[5,5,5,-9,-21,-51,-52,-22,-15,36,39,-23,36,36,43,5,36,-46,36,5,5,36,36,36,36,36,36,36,5,-21,-22,-23,5,5,5,-17,36,-29,-30,-31,-32,-33,-34,-49,-50,-10,-11,-43,-12,-13,5,5,91,-37,-38,-53,5,-16,36,36,-47,-48,-14,-54,36,-25,5,36,-35,-45,5,-39,5,5,5,113,5,-26,5,5,-58,-59,-27,5,-44,5,-28,]),'GLOBAL_VAR':([0,2,3,4,5,6,7,8,9,10,12,13,14,16,17,19,21,23,24,25,26,27,28,29,30,34,35,36,37,38,39,42,44,46,49,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,76,77,78,82,83,84,85,86,87,88,89,90,94,95,100,102,103,104,105,106,109,110,111,114,115,116,117,118,119,120,],[8,8,8,-9,-21,-51,-52,-22,-15,37,-23,37,37,8,37,-46,37,8,8,37,37,37,37,37,37,37,8,-21,-22,-23,8,8,8,-17,37,-29,-30,-31,-32,-33,-34,-49,-50,-10,-11,-43,-12,-13,8,8,37,-37,-38,-53,8,-16,37,37,-47,-48,-14,-54,37,-25,8,37,-35,-45,8,-39,8,8,8,37,8,-26,8,8,-58,-59,-27,8,-44,8,-28,]),'IF':([0,2,3,4,5,6,7,8,9,12,16,19,23,24,35,36,37,38,39,42,44,46,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,71,72,73,74,76,82,83,84,85,87,88,90,94,95,100,102,103,104,106,109,110,111,114,115,116,117,118,119,120,],[10,10,10,-9,-21,-51,-52,-22,-15,-23,10,-46,10,10,10,-21,-22,-23,10,10,10,-17,-29,-30,-31,-32,-33,-34,-49,-50,-10,-11,-43,-12,-13,10,10,-37,-38,-53,10,-16,-47,-48,-14,-54,-25,10,-35,-45,10,-39,10,10,10,10,-26,10,10,-58,-59,-27,10,-44,10,-28,]),'DEF':([0,2,3,4,5,6,7,8,9,12,16,19,23,24,35,36,37,38,39,42,44,46,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,71,72,73,74,76,82,83,84,85,87,88,90,94,95,100,102,103,104,106,109,110,111,114,115,116,117,118,119,120,],[11,11,11,-9,-21,-51,-52,-22,-15,-23,11,-46,11,11,11,-21,-22,-23,11,11,11,-17,-29,-30,-31,-32,-33,-34,-49,-50,-10,-11,-43,-12,-13,11,11,-37,-38,-53,11,-16,-47,-48,-14,-54,-25,11,-35,-45,11,-39,11,11,11,11,-26,11,11,-58,-59,-27,11,-44,11,-28,]),'INSTANCE_VAR':([0,2,3,4,5,6,7,8,9,10,12,13,14,16,17,19,21,23,24,25,26,27,28,29,30,34,35,36,37,38,39,42,44,46,49,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,76,77,78,82,83,84,85,86,87,88,89,90,94,95,100,102,103,104,105,106,109,110,111,114,115,116,117,118,119,120,],[12,12,12,-9,-21,-51,-52,-22,-15,38,-23,38,38,12,38,-46,38,12,12,38,38,38,38,38,38,38,12,-21,-22,-23,12,12,12,-17,38,-29,-30,-31,-32,-33,-34,-49,-50,-10,-11,-43,-12,-13,12,12,38,-37,-38,-53,12,-16,38,38,-47,-48,-14,-54,38,-25,12,38,-35,-45,12,-39,12,12,12,38,12,-26,12,12,-58,-59,-27,12,-44,12,-28,]),'WHILE':([0,2,3,4,5,6,7,8,9,12,16,19,23,24,35,36,37,38,39,42,44,46,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,71,72,73,74,76,82,83,84,85,87,88,90,94,95,100,102,103,104,106,109,110,111,114,115,116,117,118,119,120,],[14,14,14,-9,-21,-51,-52,-22,-15,-23,14,-46,14,14,14,-21,-22,-23,14,14,14,-17,-29,-30,-31,-32,-33,-34,-49,-50,-10,-11,-43,-12,-13,14,14,-37,-38,-53,14,-16,-47,-48,-14,-54,-25,14,-35,-45,14,-39,14,14,14,14,-26,14,14,-58,-59,-27,14,-44,14,-28,]),'FOR':([0,2,3,4,5,6,7,8,9,12,16,19,23,24,35,36,37,38,39,42,44,46,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,71,72,73,74,76,82,83,84,85,87,88,90,94,95,100,102,103,104,106,109,110,111,114,115,116,117,118,119,120,],[15,15,15,-9,-21,-51,-52,-22,-15,-23,15,-46,15,15,15,-21,-22,-23,15,15,15,-17,-29,-30,-31,-32,-33,-34,-49,-50,-10,-11,-43,-12,-13,15,15,-37,-38,-53,15,-16,-47,-48,-14,-54,-25,15,-35,-45,15,-39,15,15,15,15,-26,15,15,-58,-59,-27,15,-44,15,-28,]),'PUTS':([0,2,3,4,5,6,7,8,9,12,16,19,23,24,35,36,37,38,39,42,44,46,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,71,72,73,74,76,82,83,84,85,87,88,90,94,95,100,102,103,104,106,109,110,111,114,115,116,117,118,119,120,],[16,16,16,-9,-21,-51,-52,-22,-15,-23,16,-46,16,16,16,-21,-22,-23,16,16,16,-17,-29,-30,-31,-32,-33,-34,-49,-50,-10,-11,-43,-12,-13,16,16,-37,-38,-53,16,-16,-47,-48,-14,-54,-25,16,-35,-45,16,-39,16,16,16,16,-26,16,16,-58,-59,-27,16,-44,16,-28,]),'LBRACE':([0,2,3,4,5,6,7,8,9,10,12,13,14,16,17,19,21,23,24,25,26,27,28,29,30,34,35,36,37,38,39,42,44,46,49,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,76,77,78,82,83,84,85,86,87,88,89,90,94,95,100,102,103,104,105,106,109,110,111,114,115,116,117,118,119,120,],[17,17,17,-9,-21,-51,-52,-22,-15,17,-23,17,17,17,17,-46,17,17,17,17,17,17,17,17,17,17,17,-21,-22,-23,17,17,17,-17,17,-29,-30,-31,-32,-33,-34,-49,-50,-10,-11,-43,-12,-13,17,17,17,-37,-38,-53,17,-16,17,17,-47,-48,-14,-54,17,-25,17,17,-35,-45,17,-39,17,17,17,17,17,-26,17,17,-58,-59,-27,17,-44,17,-28,]),'SETNEW':([0,2,3,4,5,6,7,8,9,10,12,13,14,16,17,19,21,23,24,25,26,27,28,29,30,34,35,36,37,38,39,42,44,46,49,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,76,77,78,82,83,84,85,86,87,88,89,90,94,95,100,102,103,104,105,106,109,110,111,114,115,116,117,118,119,120,],[18,18,18,-9,-21,-51,-52,-22,-15,18,-23,18,18,18,18,-46,18,18,18,18,18,18,18,18,18,18,18,-21,-22,-23,18,18,18,-17,18,-29,-30,-31,-32,-33,-34,-49,-50,-10,-11,-43,-12,-13,18,18,18,-37,-38,-53,18,-16,18,18,-47,-48,-14,-54,18,-25,18,18,-35,-45,18,-39,18,18,18,18,18,-26,18,18,-58,-59,-27,18,-44,18,-28,]),'LBRACKET':([0,2,3,4,5,6,7,8,9,10,12,13,14,16,17,19,21,23,24,25,26,27,28,29,30,34,35,36,37,38,39,42,44,46,49,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,76,77,78,82,83,84,85,86,87,88,89,90,94,95,100,102,103,104,105,106,109,110,111,114,115,116,117,118,119,120,],[21,21,21,-9,-21,-51,-52,-22,-15,21,-23,21,21,21,21,-46,21,21,21,21,21,21,21,21,21,21,21,-21,-22,-23,21,21,21,-17,21,-29,-30,-31,-32,-33,-34,-49,-50,-10,-11,-43,-12,-13,21,21,21,-37,-38,-53,21,-16,21,21,-47,-48,-14,-54,21,-25,21,21,-35,-45,21,-39,21,21,21,21,21,-26,21,21,-58,-59,-27,21,-44,21,-28,]),'STRING':([0,2,3,4,5,6,7,8,9,10,12,13,14,16,17,19,21,23,24,25,26,27,28,29,30,31,32,34,35,36,37,38,39,42,44,46,49,50,51,52,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,76,77,78,82,83,84,85,86,87,88,89,90,94,95,100,102,103,104,105,106,109,110,111,114,115,116,117,118,119,120,],[9,9,9,-9,-21,-51,-52,-22,-15,9,-23,9,9,9,9,-46,9,9,9,9,9,9,9,9,9,9,9,66,9,-21,-22,-23,9,9,9,-17,9,9,9,9,-29,-30,-31,-32,-33,-34,-49,-50,-10,-11,-43,-12,-13,9,9,9,-37,-38,-53,9,-16,9,9,-47,-48,-14,-54,9,-25,9,9,-35,-45,9,-39,9,9,9,9,9,-26,9,9,-58,-59,-27,9,-44,9,-28,]),'INTEGER':([0,2,3,4,5,6,7,8,9,10,12,13,14,16,17,19,21,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,42,44,46,49,50,51,52,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,82,83,84,85,86,87,88,89,90,94,95,100,102,103,104,105,106,107,109,110,111,114,115,116,117,118,119,120,],[6,6,6,-9,-21,-51,-52,-22,-15,6,-23,6,6,6,6,-46,6,6,6,6,6,6,6,6,6,6,6,63,6,6,-21,-22,-23,6,71,6,6,-17,6,6,6,6,-29,-30,-31,-32,-33,-34,-49,-50,-10,-11,-43,-12,-13,6,6,6,-37,-38,-53,6,96,-16,6,6,-47,-48,-14,-54,6,-25,6,6,-35,-45,6,-39,6,6,6,6,6,114,-26,6,6,-58,-59,-27,6,-44,6,-28,]),'FLOAT':([0,2,3,4,5,6,7,8,9,10,12,13,14,16,17,19,21,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,42,44,46,49,50,51,52,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,82,83,84,85,86,87,88,89,90,94,95,100,102,103,104,105,106,108,109,110,111,114,115,116,117,118,119,120,],[7,7,7,-9,-21,-51,-52,-22,-15,7,-23,7,7,7,7,-46,7,7,7,7,7,7,7,7,7,7,7,64,7,7,-21,-22,-23,7,72,7,7,-17,7,7,7,7,-29,-30,-31,-32,-33,-34,-49,-50,-10,-11,-43,-12,-13,7,7,7,-37,-38,-53,7,97,-16,7,7,-47,-48,-14,-54,7,-25,7,7,-35,-45,7,-39,7,7,7,7,7,115,-26,7,7,-58,-59,-27,7,-44,7,-28,]),'LPAREN':([0,2,3,4,5,6,7,8,9,10,12,13,14,16,17,18,19,21,23,24,25,26,27,28,29,30,31,32,34,35,36,37,38,39,42,44,46,49,50,51,52,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,76,77,78,82,83,84,85,86,87,88,89,90,94,95,100,102,103,104,105,106,109,110,111,114,115,116,117,118,119,120,],[13,13,13,-9,-21,-51,-52,-22,-15,13,-23,13,13,13,13,49,-46,13,13,13,13,13,13,13,13,13,13,13,13,13,-21,-22,-23,70,13,13,-17,13,13,13,13,-29,-30,-31,-32,-33,-34,-49,-50,-10,-11,-43,-12,-13,13,13,13,-37,-38,-53,13,-16,13,13,-47,-48,-14,-54,13,-25,13,13,-35,-45,13,-39,13,13,13,13,13,-26,13,13,-58,-59,-27,13,-44,13,-28,]),'$end':([1,2,3,4,5,6,7,8,9,12,19,22,23,24,36,37,38,44,46,55,56,57,58,59,60,61,62,63,64,65,66,67,71,72,73,76,82,83,84,85,87,90,94,100,106,109,116,118,120,],[0,-2,-7,-9,-21,-51,-52,-22,-15,-23,-46,-1,-8,-24,-21,-22,-23,-60,-17,-29,-30,-31,-32,-33,-34,-49,-50,-10,-11,-43,-12,-13,-37,-38,-53,-16,-47,-48,-14,-54,-25,-35,-45,-39,-57,-26,-27,-44,-28,]),'END':([2,3,4,5,6,7,8,9,12,19,23,24,36,37,38,44,46,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,71,72,73,74,76,82,83,84,85,87,90,94,100,102,106,109,110,111,116,118,119,120,],[22,-7,-9,-21,-51,-52,-22,-15,-23,-46,-8,-24,-21,-22,-23,-60,-17,-29,-30,-31,-32,-33,-34,-49,-50,-10,-11,-43,-12,-13,87,90,-37,-38,-53,94,-16,-47,-48,-14,-54,-25,-35,-45,-39,109,-57,-26,116,118,-27,-44,120,-28,]),'ELSE':([4,5,6,7,8,9,12,19,24,36,37,38,44,46,55,56,57,58,59,60,61,62,63,64,65,66,67,68,71,72,73,76,82,83,84,85,87,90,94,100,106,109,110,116,118,120,],[-9,-21,-51,-52,-22,-15,-23,-46,-24,-21,-22,-23,-60,-17,-29,-30,-31,-32,-33,-34,-49,-50,-10,-11,-43,-12,-13,88,-37,-38,-53,-16,-47,-48,-14,-54,-25,-35,-45,-39,-57,-26,117,-27,-44,-28,]),'ELSIF':([4,5,6,7,8,9,12,19,24,36,37,38,44,46,55,56,57,58,59,60,61,62,63,64,65,66,67,68,71,72,73,76,82,83,84,85,87,90,94,100,106,109,116,118,120,],[-9,-21,-51,-52,-22,-15,-23,-46,-24,-21,-22,-23,-60,-17,-29,-30,-31,-32,-33,-34,-49,-50,-10,-11,-43,-12,-13,89,-37,-38,-53,-16,-47,-48,-14,-54,-25,-35,-45,-39,-57,-26,-27,-44,-28,]),'GREATER':([4,5,6,7,8,9,12,19,35,36,37,38,41,42,46,48,54,55,56,57,58,59,60,61,62,67,73,76,82,83,84,85,91,93,99,100,101,103,112,113,],[25,-21,-51,-52,-22,-15,-23,-46,25,-21,-22,-23,25,25,-17,25,25,None,None,None,None,None,None,-49,-50,25,-53,-16,-47,-48,-14,-54,-21,25,25,-39,25,25,25,-21,]),'LESS':([4,5,6,7,8,9,12,19,35,36,37,38,41,42,46,48,54,55,56,57,58,59,60,61,62,67,73,76,82,83,84,85,91,93,99,100,101,103,112,113,],[26,-21,-51,-52,-22,-15,-23,-46,26,-21,-22,-23,26,26,-17,26,26,None,None,None,None,None,None,-49,-50,26,-53,-16,-47,-48,-14,-54,-21,26,26,-39,26,26,26,-21,]),'GREATER_EQUAL':([4,5,6,7,8,9,12,19,35,36,37,38,41,42,46,48,54,55,56,57,58,59,60,61,62,67,73,76,82,83,84,85,91,93,99,100,101,103,112,113,],[27,-21,-51,-52,-22,-15,-23,-46,27,-21,-22,-23,27,27,-17,27,27,None,None,None,None,None,None,-49,-50,27,-53,-16,-47,-48,-14,-54,-21,27,27,-39,27,27,27,-21,]),'LESS_EQUAL':([4,5,6,7,8,9,12,19,35,36,37,38,41,42,46,48,54,55,56,57,58,59,60,61,62,67,73,76,82,83,84,85,91,93,99,100,101,103,112,113,],[28,-21,-51,-52,-22,-15,-23,-46,28,-21,-22,-23,28,28,-17,28,28,None,None,None,None,None,None,-49,-50,28,-53,-16,-47,-48,-14,-54,-21,28,28,-39,28,28,28,-21,]),'EQUALS':([4,5,6,7,8,9,12,19,35,36,37,38,41,42,46,48,54,55,56,57,58,59,60,61,62,67,73,76,82,83,84,85,91,93,99,100,101,103,112,113,],[29,-21,-51,-52,-22,-15,-23,-46,29,-21,-22,-23,29,29,-17,29,29,None,None,None,None,None,None,-49,-50,29,-53,-16,-47,-48,-14,-54,-21,29,29,-39,29,29,29,-21,]),'NOT_EQUALS':([4,5,6,7,8,9,12,19,35,36,37,38,41,42,46,48,54,55,56,57,58,59,60,61,62,67,73,76,82,83,84,85,91,93,99,100,101,103,112,113,],[30,-21,-51,-52,-22,-15,-23,-46,30,-21,-22,-23,30,30,-17,30,30,None,None,None,None,None,None,-49,-50,30,-53,-16,-47,-48,-14,-54,-21,30,30,-39,30,30,30,-21,]),'PLUS':([4,5,6,7,8,9,12,19,35,36,37,38,41,42,46,48,54,55,56,57,58,59,60,61,62,67,73,76,82,83,84,85,91,93,99,100,101,103,112,113,],[31,-21,-51,-52,-22,-15,-23,-46,31,-21,-22,-23,31,31,-17,31,31,31,31,31,31,31,31,-49,-50,31,-53,-16,-47,-48,-14,-54,-21,31,31,-39,31,31,31,-21,]),'MINUS':([4,5,6,7,8,9,12,19,35,36,37,38,41,42,46,48,54,55,56,57,58,59,60,61,62,67,73,76,82,83,84,85,91,93,99,100,101,103,112,113,],[32,-21,-51,-52,-22,-15,-23,-46,32,-21,-22,-23,32,32,-17,32,32,32,32,32,32,32,32,-49,-50,32,-53,-16,-47,-48,-14,-54,-21,32,32,-39,32,32,32,-21,]),'ASSIGN':([5,8,12,],[33,34,40,]),'DIVIDE':([6,7,9,20,66,73,84,],[-51,-52,-15,50,-15,-53,-14,]),'TIMES':([6,7,9,20,66,73,84,],[-51,-52,-15,51,-15,-53,-14,]),'POWER':([6,7,9,20,61,62,66,73,82,83,84,],[-51,-52,-15,52,52,52,-15,-53,52,52,52,]),'RPAREN':([6,7,9,19,36,37,38,41,46,49,54,55,56,57,58,59,60,61,62,73,76,79,80,81,82,83,84,85,91,92,93,100,101,112,113,],[-51,-52,-15,-46,-21,-22,-23,73,-17,-42,-55,-29,-30,-31,-32,-33,-34,-49,-50,-53,-16,100,-40,-41,-47,-48,-14,-54,-5,104,73,-39,-56,-4,-6,]),'HASH_ROCKET':([6,7,9,19,36,37,38,46,48,55,56,57,58,59,60,61,62,73,76,82,83,84,85,100,],[-51,-52,-15,-46,-21,-22,-23,-17,78,-29,-30,-31,-32,-33,-34,-49,-50,-53,-16,-47,-48,-14,-54,-39,]),'RBRACKET':([6,7,9,19,36,37,38,46,53,54,55,56,57,58,59,60,61,62,73,76,82,83,84,85,100,101,],[-51,-52,-15,-46,-21,-22,-23,-17,85,-55,-29,-30,-31,-32,-33,-34,-49,-50,-53,-16,-47,-48,-14,-54,-39,-56,]),'COMMA':([6,7,9,19,36,37,38,45,46,47,53,54,55,56,57,58,59,60,61,62,73,76,80,82,83,84,85,91,92,93,98,99,100,101,112,113,],[-51,-52,-15,-46,-21,-22,-23,77,-17,-18,86,-55,-29,-30,-31,-32,-33,-34,-49,-50,-53,-16,86,-47,-48,-14,-54,-5,105,-3,-19,-20,-39,-56,-4,-6,]),'RBRACE':([6,7,9,17,19,36,37,38,45,46,47,55,56,57,58,59,60,61,62,73,76,82,83,84,85,98,99,100,],[-51,-52,-15,46,-46,-21,-22,-23,76,-17,-18,-29,-30,-31,-32,-33,-34,-49,-50,-53,-16,-47,-48,-14,-54,-19,-20,-39,]),'GETS':([33,],[65,]),'IN':([43,],[75,]),'DOUBLE_DOT':([96,97,],[107,108,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'statements':([0,42,104,],[2,74,111,]),'statement':([0,2,3,16,23,24,35,39,42,44,68,69,74,88,95,102,103,104,106,110,111,117,119,],[3,23,24,44,24,24,68,69,3,24,24,24,23,102,106,24,110,3,24,24,23,119,24,]),'expression':([0,2,3,10,13,14,16,17,21,23,24,25,26,27,28,29,30,34,35,39,42,44,49,68,69,70,74,77,78,86,88,89,95,102,103,104,105,106,110,111,117,119,],[4,4,4,35,41,42,4,48,54,4,4,55,56,57,58,59,60,67,4,4,4,4,54,4,4,93,4,48,99,101,4,103,4,4,4,4,112,4,4,4,4,4,]),'term':([0,2,3,10,13,14,16,17,21,23,24,25,26,27,28,29,30,34,35,39,42,44,49,68,69,70,74,77,78,86,88,89,95,102,103,104,105,106,110,111,117,119,],[19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,]),'factor':([0,2,3,10,13,14,16,17,21,23,24,25,26,27,28,29,30,31,32,34,35,39,42,44,49,50,51,52,68,69,70,74,77,78,86,88,89,95,102,103,104,105,106,110,111,117,119,],[20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,61,62,20,20,20,20,20,20,82,83,84,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,]),'key_value_pairs':([17,],[45,]),'key_value':([17,77,],[47,98,]),'elements':([21,49,],[53,80,]),'optional_elements':([49,],[79,]),'empty':([49,],[81,]),'params':([70,],[92,]),'range':([75,],[95,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statements END','program',2,'p_program','AnalizadorSintactico.py',16),
  ('program -> statements','program',1,'p_program','AnalizadorSintactico.py',17),
  ('params -> expression','params',1,'p_params','AnalizadorSintactico.py',22),
  ('params -> params COMMA expression','params',3,'p_params','AnalizadorSintactico.py',23),
  ('params -> IDENTIFIER','params',1,'p_params_declaration','AnalizadorSintactico.py',30),
  ('params -> params COMMA IDENTIFIER','params',3,'p_params_declaration','AnalizadorSintactico.py',31),
  ('statements -> statement','statements',1,'p_statements','AnalizadorSintactico.py',34),
  ('statements -> statements statement','statements',2,'p_statements','AnalizadorSintactico.py',35),
  ('statement -> expression','statement',1,'p_statement','AnalizadorSintactico.py',43),
  ('statement -> IDENTIFIER ASSIGN INTEGER','statement',3,'p_local_var','AnalizadorSintactico.py',47),
  ('statement -> IDENTIFIER ASSIGN FLOAT','statement',3,'p_local_var','AnalizadorSintactico.py',48),
  ('statement -> GLOBAL_VAR ASSIGN STRING','statement',3,'p_global_var','AnalizadorSintactico.py',53),
  ('statement -> GLOBAL_VAR ASSIGN expression','statement',3,'p_global_var','AnalizadorSintactico.py',54),
  ('factor -> factor POWER factor','factor',3,'p_factor_power','AnalizadorSintactico.py',58),
  ('factor -> STRING','factor',1,'p_factor_string','AnalizadorSintactico.py',62),
  ('expression -> LBRACE key_value_pairs RBRACE','expression',3,'p_hash','AnalizadorSintactico.py',66),
  ('expression -> LBRACE RBRACE','expression',2,'p_empty_hash','AnalizadorSintactico.py',71),
  ('key_value_pairs -> key_value','key_value_pairs',1,'p_key_value_pairs','AnalizadorSintactico.py',76),
  ('key_value_pairs -> key_value_pairs COMMA key_value','key_value_pairs',3,'p_key_value_pairs','AnalizadorSintactico.py',77),
  ('key_value -> expression HASH_ROCKET expression','key_value',3,'p_key_value','AnalizadorSintactico.py',84),
  ('expression -> IDENTIFIER','expression',1,'p_expression_var','AnalizadorSintactico.py',89),
  ('expression -> GLOBAL_VAR','expression',1,'p_expression_var','AnalizadorSintactico.py',90),
  ('expression -> INSTANCE_VAR','expression',1,'p_expression_var','AnalizadorSintactico.py',91),
  ('statement -> statement statement','statement',2,'p_statement_block','AnalizadorSintactico.py',95),
  ('statement -> IF expression statement END','statement',4,'p_if_statement','AnalizadorSintactico.py',99),
  ('statement -> IF expression statement ELSE statement END','statement',6,'p_if_statement','AnalizadorSintactico.py',100),
  ('statement -> IF expression statement ELSIF expression statement END','statement',7,'p_if_statement','AnalizadorSintactico.py',101),
  ('statement -> IF expression statement ELSIF expression statement ELSE statement END','statement',9,'p_if_statement','AnalizadorSintactico.py',102),
  ('expression -> expression GREATER expression','expression',3,'p_expression_comparison','AnalizadorSintactico.py',118),
  ('expression -> expression LESS expression','expression',3,'p_expression_comparison','AnalizadorSintactico.py',119),
  ('expression -> expression GREATER_EQUAL expression','expression',3,'p_expression_comparison','AnalizadorSintactico.py',120),
  ('expression -> expression LESS_EQUAL expression','expression',3,'p_expression_comparison','AnalizadorSintactico.py',121),
  ('expression -> expression EQUALS expression','expression',3,'p_expression_comparison','AnalizadorSintactico.py',122),
  ('expression -> expression NOT_EQUALS expression','expression',3,'p_expression_comparison','AnalizadorSintactico.py',123),
  ('statement -> DEF IDENTIFIER statement END','statement',4,'p_method_without_params_declaration','AnalizadorSintactico.py',137),
  ('statement -> IDENTIFIER','statement',1,'p_method_call_without_params','AnalizadorSintactico.py',143),
  ('statement -> INSTANCE_VAR ASSIGN INTEGER','statement',3,'p_instance_var','AnalizadorSintactico.py',158),
  ('statement -> INSTANCE_VAR ASSIGN FLOAT','statement',3,'p_instance_var','AnalizadorSintactico.py',159),
  ('expression -> SETNEW LPAREN optional_elements RPAREN','expression',4,'p_set','AnalizadorSintactico.py',163),
  ('optional_elements -> elements','optional_elements',1,'p_optional_elements','AnalizadorSintactico.py',169),
  ('optional_elements -> empty','optional_elements',1,'p_optional_elements','AnalizadorSintactico.py',170),
  ('empty -> <empty>','empty',0,'p_empty','AnalizadorSintactico.py',174),
  ('statement -> IDENTIFIER ASSIGN GETS','statement',3,'p_gets_statement','AnalizadorSintactico.py',182),
  ('statement -> DEF IDENTIFIER LPAREN params RPAREN statements END','statement',7,'p_method_with_params_declaration','AnalizadorSintactico.py',186),
  ('statement -> WHILE expression statements END','statement',4,'p_while_statement','AnalizadorSintactico.py',190),
  ('expression -> term','expression',1,'p_expression_term','AnalizadorSintactico.py',197),
  ('term -> factor DIVIDE factor','term',3,'p_term_div','AnalizadorSintactico.py',201),
  ('term -> factor TIMES factor','term',3,'p_term_times','AnalizadorSintactico.py',205),
  ('expression -> expression PLUS factor','expression',3,'p_expression_plus','AnalizadorSintactico.py',209),
  ('expression -> expression MINUS factor','expression',3,'p_expression_minus','AnalizadorSintactico.py',213),
  ('factor -> INTEGER','factor',1,'p_factor_num','AnalizadorSintactico.py',218),
  ('factor -> FLOAT','factor',1,'p_factor_num','AnalizadorSintactico.py',219),
  ('factor -> LPAREN expression RPAREN','factor',3,'p_factor_expr','AnalizadorSintactico.py',223),
  ('expression -> LBRACKET elements RBRACKET','expression',3,'p_array','AnalizadorSintactico.py',228),
  ('elements -> expression','elements',1,'p_elements','AnalizadorSintactico.py',233),
  ('elements -> elements COMMA expression','elements',3,'p_elements','AnalizadorSintactico.py',234),
  ('statement -> FOR IDENTIFIER IN range statement','statement',5,'p_for_statement','AnalizadorSintactico.py',242),
  ('range -> INTEGER DOUBLE_DOT INTEGER','range',3,'p_range','AnalizadorSintactico.py',247),
  ('range -> FLOAT DOUBLE_DOT FLOAT','range',3,'p_range','AnalizadorSintactico.py',248),
  ('statement -> PUTS statement','statement',2,'p_puts_statement','AnalizadorSintactico.py',253),
]
