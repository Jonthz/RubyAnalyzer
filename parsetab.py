
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'nonassocLESSGREATERLESS_EQUALGREATER_EQUALEQUALSNOT_EQUALSleftPLUSMINUSleftTIMESDIVIDErightPOWERrightHASH_ROCKETAND ASSIGN BEGIN BITWISE_AND BREAK CASE CLASS CLASS_VAR COMMA COMMENT CONSTANT DEF DIVIDE DIVIDE_ASSIGN DO DOT DOUBLE_DOT ELSE ELSIF END ENSURE EQUALS FALSE FLOAT FLOOR_DIVIDE FOR GETS GLOBAL_VAR GREATER GREATER_EQUAL HASH_ROCKET IDENTIFIER IF IN INSTANCE_VAR INTEGER LAMBDA LBRACE LBRACKET LESS LESS_EQUAL LPAREN MINUS MINUS_ASSIGN MOD MODULE MOD_ASSIGN NEW NEXT NIL NOT NOT_EQUALS OR PIPE PLUS PLUS_ASSIGN POWER POWER_ASSIGN PROC PUTS QUESTION_MARK RAISE RANGE RBRACE RBRACKET REDO REQUIRE RESCUE RETRY RETURN RPAREN SELF SEMICOLON SETNEW SPACESHIP STRING SUPER TIMES TIMES_ASSIGN TRUE UNTIL WHEN WHILE YIELDprogram : statements END\n               | statementsparams : IDENTIFIER\n              | params COMMA IDENTIFIERstatements : statement\n                  | statements statementstatement :  local_var\n                 | expressionlocal_var : IDENTIFIER EQUALS INTEGER\n                 | IDENTIFIER EQUALS FLOATstatement : GLOBAL_VAR ASSIGN STRING\n                 | GLOBAL_VAR ASSIGN expressionfactor : factor POWER factorfactor : STRINGexpression : LBRACE key_value_pairs RBRACEexpression : LBRACE RBRACEkey_value_pairs : key_value\n                       | key_value_pairs COMMA key_valuekey_value : expression HASH_ROCKET expressionexpression : IDENTIFIER\n                  | GLOBAL_VAR\n                  | INSTANCE_VARstatement : statement statementstatement : IF expression statement END\n                 | IF expression statement ELSE statement END\n                 | IF expression statement ELSIF expression statement END\n                 | IF expression statement ELSIF expression statement ELSE statement ENDexpression : expression GREATER expression\n                  | expression LESS expression\n                  | expression GREATER_EQUAL expression\n                  | expression LESS_EQUAL expression\n                  | expression EQUALS expression\n                  | expression NOT_EQUALS expressionstatement : DEF IDENTIFIER statement ENDstatement : IDENTIFIERstatement : INSTANCE_VAR EQUALS INTEGER\n                 | INSTANCE_VAR EQUALS FLOATexpression : SETNEW LPAREN elements RPARENstatement : WHILE expression statement ENDstatement : IDENTIFIER EQUALS GETSexpression : termterm : term DIVIDE factorterm : term TIMES factorexpression : expression PLUS termexpression : expression MINUS termterm : factorfactor : INTEGER\n              | FLOAT factor : LPAREN expression RPARENexpression : LBRACKET elements RBRACKETelements : expression\n                | elements COMMA expressionstatement : DEF IDENTIFIER LPAREN params RPAREN statement ENDstatement : IDENTIFIER LPAREN params RPARENstatement : FOR IDENTIFIER IN range statementrange : INTEGER DOUBLE_DOT INTEGER\n             | FLOAT DOUBLE_DOT FLOATstatement : PUTS expression'
    
_lr_action_items = {'GLOBAL_VAR':([0,2,3,4,5,6,7,8,10,11,12,13,14,15,17,18,20,21,22,24,25,26,27,28,29,30,31,34,35,36,37,38,39,43,46,48,51,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,75,76,77,78,80,81,82,84,85,86,87,88,89,90,91,92,95,97,98,103,105,106,107,109,112,113,114,115,116,117,118,119,120,121,],[6,6,6,-7,-8,-21,-14,37,-20,-22,-47,-48,37,37,37,37,-41,37,-46,6,6,37,37,37,37,37,37,37,6,-20,-21,-22,6,6,-58,-16,37,-28,-29,-30,-31,-32,-33,-44,-45,-11,-12,6,6,37,-40,-9,-10,-36,-37,6,-49,-15,37,37,-42,-43,-50,37,-13,-24,6,37,-34,-54,-39,6,-38,6,6,6,6,-25,6,6,-56,-57,-26,6,-53,6,-27,]),'IF':([0,2,3,4,5,6,7,10,11,12,13,20,22,24,25,35,36,37,38,39,43,46,48,57,58,59,60,61,62,63,64,65,66,67,68,70,71,72,75,76,77,78,80,84,85,86,88,89,90,92,95,97,98,103,105,106,107,109,112,113,114,115,116,117,118,119,120,121,],[8,8,8,-7,-8,-21,-14,-20,-22,-47,-48,-41,-46,8,8,8,-20,-21,-22,8,8,-58,-16,-28,-29,-30,-31,-32,-33,-44,-45,-11,-12,8,8,-40,-9,-10,-36,-37,8,-49,-15,-42,-43,-50,-13,-24,8,-34,-54,-39,8,-38,8,8,8,8,-25,8,8,-56,-57,-26,8,-53,8,-27,]),'DEF':([0,2,3,4,5,6,7,10,11,12,13,20,22,24,25,35,36,37,38,39,43,46,48,57,58,59,60,61,62,63,64,65,66,67,68,70,71,72,75,76,77,78,80,84,85,86,88,89,90,92,95,97,98,103,105,106,107,109,112,113,114,115,116,117,118,119,120,121,],[9,9,9,-7,-8,-21,-14,-20,-22,-47,-48,-41,-46,9,9,9,-20,-21,-22,9,9,-58,-16,-28,-29,-30,-31,-32,-33,-44,-45,-11,-12,9,9,-40,-9,-10,-36,-37,9,-49,-15,-42,-43,-50,-13,-24,9,-34,-54,-39,9,-38,9,9,9,9,-25,9,9,-56,-57,-26,9,-53,9,-27,]),'IDENTIFIER':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,20,21,22,24,25,26,27,28,29,30,31,34,35,36,37,38,39,41,43,46,48,51,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,75,76,77,78,80,81,82,84,85,86,87,88,89,90,91,92,95,96,97,98,103,105,106,107,109,112,113,114,115,116,117,118,119,120,121,],[10,10,10,-7,-8,-21,-14,36,39,-20,-22,-47,-48,36,36,45,36,36,-41,36,-46,10,10,36,36,36,36,36,36,36,10,-20,-21,-22,10,73,10,-58,-16,36,-28,-29,-30,-31,-32,-33,-44,-45,-11,-12,10,10,93,-40,-9,-10,-36,-37,10,-49,-15,36,36,-42,-43,-50,36,-13,-24,10,36,-34,-54,108,-39,10,-38,10,10,10,10,-25,10,10,-56,-57,-26,10,-53,10,-27,]),'INSTANCE_VAR':([0,2,3,4,5,6,7,8,10,11,12,13,14,15,17,18,20,21,22,24,25,26,27,28,29,30,31,34,35,36,37,38,39,43,46,48,51,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,75,76,77,78,80,81,82,84,85,86,87,88,89,90,91,92,95,97,98,103,105,106,107,109,112,113,114,115,116,117,118,119,120,121,],[11,11,11,-7,-8,-21,-14,38,-20,-22,-47,-48,38,38,38,38,-41,38,-46,11,11,38,38,38,38,38,38,38,11,-20,-21,-22,11,11,-58,-16,38,-28,-29,-30,-31,-32,-33,-44,-45,-11,-12,11,11,38,-40,-9,-10,-36,-37,11,-49,-15,38,38,-42,-43,-50,38,-13,-24,11,38,-34,-54,-39,11,-38,11,11,11,11,-25,11,11,-56,-57,-26,11,-53,11,-27,]),'WHILE':([0,2,3,4,5,6,7,10,11,12,13,20,22,24,25,35,36,37,38,39,43,46,48,57,58,59,60,61,62,63,64,65,66,67,68,70,71,72,75,76,77,78,80,84,85,86,88,89,90,92,95,97,98,103,105,106,107,109,112,113,114,115,116,117,118,119,120,121,],[14,14,14,-7,-8,-21,-14,-20,-22,-47,-48,-41,-46,14,14,14,-20,-21,-22,14,14,-58,-16,-28,-29,-30,-31,-32,-33,-44,-45,-11,-12,14,14,-40,-9,-10,-36,-37,14,-49,-15,-42,-43,-50,-13,-24,14,-34,-54,-39,14,-38,14,14,14,14,-25,14,14,-56,-57,-26,14,-53,14,-27,]),'FOR':([0,2,3,4,5,6,7,10,11,12,13,20,22,24,25,35,36,37,38,39,43,46,48,57,58,59,60,61,62,63,64,65,66,67,68,70,71,72,75,76,77,78,80,84,85,86,88,89,90,92,95,97,98,103,105,106,107,109,112,113,114,115,116,117,118,119,120,121,],[16,16,16,-7,-8,-21,-14,-20,-22,-47,-48,-41,-46,16,16,16,-20,-21,-22,16,16,-58,-16,-28,-29,-30,-31,-32,-33,-44,-45,-11,-12,16,16,-40,-9,-10,-36,-37,16,-49,-15,-42,-43,-50,-13,-24,16,-34,-54,-39,16,-38,16,16,16,16,-25,16,16,-56,-57,-26,16,-53,16,-27,]),'PUTS':([0,2,3,4,5,6,7,10,11,12,13,20,22,24,25,35,36,37,38,39,43,46,48,57,58,59,60,61,62,63,64,65,66,67,68,70,71,72,75,76,77,78,80,84,85,86,88,89,90,92,95,97,98,103,105,106,107,109,112,113,114,115,116,117,118,119,120,121,],[17,17,17,-7,-8,-21,-14,-20,-22,-47,-48,-41,-46,17,17,17,-20,-21,-22,17,17,-58,-16,-28,-29,-30,-31,-32,-33,-44,-45,-11,-12,17,17,-40,-9,-10,-36,-37,17,-49,-15,-42,-43,-50,-13,-24,17,-34,-54,-39,17,-38,17,17,17,17,-25,17,17,-56,-57,-26,17,-53,17,-27,]),'LBRACE':([0,2,3,4,5,6,7,8,10,11,12,13,14,15,17,18,20,21,22,24,25,26,27,28,29,30,31,34,35,36,37,38,39,43,46,48,51,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,75,76,77,78,80,81,82,84,85,86,87,88,89,90,91,92,95,97,98,103,105,106,107,109,112,113,114,115,116,117,118,119,120,121,],[18,18,18,-7,-8,-21,-14,18,-20,-22,-47,-48,18,18,18,18,-41,18,-46,18,18,18,18,18,18,18,18,18,18,-20,-21,-22,18,18,-58,-16,18,-28,-29,-30,-31,-32,-33,-44,-45,-11,-12,18,18,18,-40,-9,-10,-36,-37,18,-49,-15,18,18,-42,-43,-50,18,-13,-24,18,18,-34,-54,-39,18,-38,18,18,18,18,-25,18,18,-56,-57,-26,18,-53,18,-27,]),'SETNEW':([0,2,3,4,5,6,7,8,10,11,12,13,14,15,17,18,20,21,22,24,25,26,27,28,29,30,31,34,35,36,37,38,39,43,46,48,51,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,75,76,77,78,80,81,82,84,85,86,87,88,89,90,91,92,95,97,98,103,105,106,107,109,112,113,114,115,116,117,118,119,120,121,],[19,19,19,-7,-8,-21,-14,19,-20,-22,-47,-48,19,19,19,19,-41,19,-46,19,19,19,19,19,19,19,19,19,19,-20,-21,-22,19,19,-58,-16,19,-28,-29,-30,-31,-32,-33,-44,-45,-11,-12,19,19,19,-40,-9,-10,-36,-37,19,-49,-15,19,19,-42,-43,-50,19,-13,-24,19,19,-34,-54,-39,19,-38,19,19,19,19,-25,19,19,-56,-57,-26,19,-53,19,-27,]),'LBRACKET':([0,2,3,4,5,6,7,8,10,11,12,13,14,15,17,18,20,21,22,24,25,26,27,28,29,30,31,34,35,36,37,38,39,43,46,48,51,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,75,76,77,78,80,81,82,84,85,86,87,88,89,90,91,92,95,97,98,103,105,106,107,109,112,113,114,115,116,117,118,119,120,121,],[21,21,21,-7,-8,-21,-14,21,-20,-22,-47,-48,21,21,21,21,-41,21,-46,21,21,21,21,21,21,21,21,21,21,-20,-21,-22,21,21,-58,-16,21,-28,-29,-30,-31,-32,-33,-44,-45,-11,-12,21,21,21,-40,-9,-10,-36,-37,21,-49,-15,21,21,-42,-43,-50,21,-13,-24,21,21,-34,-54,-39,21,-38,21,21,21,21,-25,21,21,-56,-57,-26,21,-53,21,-27,]),'STRING':([0,2,3,4,5,6,7,8,10,11,12,13,14,15,17,18,20,21,22,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,43,46,48,51,52,53,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,75,76,77,78,80,81,82,84,85,86,87,88,89,90,91,92,95,97,98,103,105,106,107,109,112,113,114,115,116,117,118,119,120,121,],[7,7,7,-7,-8,-21,-14,7,-20,-22,-47,-48,7,7,7,7,-41,7,-46,7,7,7,7,7,7,7,7,7,7,65,7,-20,-21,-22,7,7,-58,-16,7,7,7,7,-28,-29,-30,-31,-32,-33,-44,-45,-11,-12,7,7,7,-40,-9,-10,-36,-37,7,-49,-15,7,7,-42,-43,-50,7,-13,-24,7,7,-34,-54,-39,7,-38,7,7,7,7,-25,7,7,-56,-57,-26,7,-53,7,-27,]),'INTEGER':([0,2,3,4,5,6,7,8,10,11,12,13,14,15,17,18,20,21,22,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,42,43,46,48,51,52,53,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,75,76,77,78,79,80,81,82,84,85,86,87,88,89,90,91,92,95,97,98,103,105,106,107,109,110,112,113,114,115,116,117,118,119,120,121,],[12,12,12,-7,-8,-21,-14,12,-20,-22,-47,-48,12,12,12,12,-41,12,-46,12,12,12,12,12,12,12,12,12,12,12,12,-20,-21,-22,12,71,75,12,-58,-16,12,12,12,12,-28,-29,-30,-31,-32,-33,-44,-45,-11,-12,12,12,12,-40,-9,-10,-36,-37,12,-49,99,-15,12,12,-42,-43,-50,12,-13,-24,12,12,-34,-54,-39,12,-38,12,12,12,12,115,-25,12,12,-56,-57,-26,12,-53,12,-27,]),'FLOAT':([0,2,3,4,5,6,7,8,10,11,12,13,14,15,17,18,20,21,22,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,42,43,46,48,51,52,53,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,75,76,77,78,79,80,81,82,84,85,86,87,88,89,90,91,92,95,97,98,103,105,106,107,109,111,112,113,114,115,116,117,118,119,120,121,],[13,13,13,-7,-8,-21,-14,13,-20,-22,-47,-48,13,13,13,13,-41,13,-46,13,13,13,13,13,13,13,13,13,13,13,13,-20,-21,-22,13,72,76,13,-58,-16,13,13,13,13,-28,-29,-30,-31,-32,-33,-44,-45,-11,-12,13,13,13,-40,-9,-10,-36,-37,13,-49,100,-15,13,13,-42,-43,-50,13,-13,-24,13,13,-34,-54,-39,13,-38,13,13,13,13,116,-25,13,13,-56,-57,-26,13,-53,13,-27,]),'LPAREN':([0,2,3,4,5,6,7,8,10,11,12,13,14,15,17,18,19,20,21,22,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,43,46,48,51,52,53,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,75,76,77,78,80,81,82,84,85,86,87,88,89,90,91,92,95,97,98,103,105,106,107,109,112,113,114,115,116,117,118,119,120,121,],[15,15,15,-7,-8,-21,-14,15,41,-22,-47,-48,15,15,15,15,51,-41,15,-46,15,15,15,15,15,15,15,15,15,15,15,15,-20,-21,-22,69,15,-58,-16,15,15,15,15,-28,-29,-30,-31,-32,-33,-44,-45,-11,-12,15,15,15,-40,-9,-10,-36,-37,15,-49,-15,15,15,-42,-43,-50,15,-13,-24,15,15,-34,-54,-39,15,-38,15,15,15,15,-25,15,15,-56,-57,-26,15,-53,15,-27,]),'$end':([1,2,3,4,5,6,7,10,11,12,13,20,22,23,24,25,36,37,38,46,48,57,58,59,60,61,62,63,64,65,66,70,71,72,75,76,78,80,84,85,86,88,89,92,95,97,103,109,112,117,119,121,],[0,-2,-5,-7,-8,-21,-14,-20,-22,-47,-48,-41,-46,-1,-6,-23,-20,-21,-22,-58,-16,-28,-29,-30,-31,-32,-33,-44,-45,-11,-12,-40,-9,-10,-36,-37,-49,-15,-42,-43,-50,-13,-24,-34,-54,-39,-38,-55,-25,-26,-53,-27,]),'END':([2,3,4,5,6,7,10,11,12,13,20,22,24,25,36,37,38,46,48,57,58,59,60,61,62,63,64,65,66,67,68,70,71,72,75,76,77,78,80,84,85,86,88,89,92,95,97,103,105,109,112,113,114,117,119,120,121,],[23,-5,-7,-8,-21,-14,-20,-22,-47,-48,-41,-46,-6,-23,-20,-21,-22,-58,-16,-28,-29,-30,-31,-32,-33,-44,-45,-11,-12,89,92,-40,-9,-10,-36,-37,97,-49,-15,-42,-43,-50,-13,-24,-34,-54,-39,-38,112,-55,-25,117,119,-26,-53,121,-27,]),'ELSE':([4,5,6,7,10,11,12,13,20,22,25,36,37,38,46,48,57,58,59,60,61,62,63,64,65,66,67,70,71,72,75,76,78,80,84,85,86,88,89,92,95,97,103,109,112,113,117,119,121,],[-7,-8,-21,-14,-20,-22,-47,-48,-41,-46,-23,-20,-21,-22,-58,-16,-28,-29,-30,-31,-32,-33,-44,-45,-11,-12,90,-40,-9,-10,-36,-37,-49,-15,-42,-43,-50,-13,-24,-34,-54,-39,-38,-55,-25,118,-26,-53,-27,]),'ELSIF':([4,5,6,7,10,11,12,13,20,22,25,36,37,38,46,48,57,58,59,60,61,62,63,64,65,66,67,70,71,72,75,76,78,80,84,85,86,88,89,92,95,97,103,109,112,117,119,121,],[-7,-8,-21,-14,-20,-22,-47,-48,-41,-46,-23,-20,-21,-22,-58,-16,-28,-29,-30,-31,-32,-33,-44,-45,-11,-12,91,-40,-9,-10,-36,-37,-49,-15,-42,-43,-50,-13,-24,-34,-54,-39,-38,-55,-25,-26,-53,-27,]),'GREATER':([5,6,7,10,11,12,13,20,22,35,36,37,38,43,44,46,48,50,55,57,58,59,60,61,62,63,64,65,66,78,80,84,85,86,88,93,102,103,104,106,],[26,-21,-14,-20,-22,-47,-48,-41,-46,26,-20,-21,-22,26,26,26,-16,26,26,None,None,None,None,None,None,-44,-45,-14,26,-49,-15,-42,-43,-50,-13,-20,26,-38,26,26,]),'LESS':([5,6,7,10,11,12,13,20,22,35,36,37,38,43,44,46,48,50,55,57,58,59,60,61,62,63,64,65,66,78,80,84,85,86,88,93,102,103,104,106,],[27,-21,-14,-20,-22,-47,-48,-41,-46,27,-20,-21,-22,27,27,27,-16,27,27,None,None,None,None,None,None,-44,-45,-14,27,-49,-15,-42,-43,-50,-13,-20,27,-38,27,27,]),'GREATER_EQUAL':([5,6,7,10,11,12,13,20,22,35,36,37,38,43,44,46,48,50,55,57,58,59,60,61,62,63,64,65,66,78,80,84,85,86,88,93,102,103,104,106,],[28,-21,-14,-20,-22,-47,-48,-41,-46,28,-20,-21,-22,28,28,28,-16,28,28,None,None,None,None,None,None,-44,-45,-14,28,-49,-15,-42,-43,-50,-13,-20,28,-38,28,28,]),'LESS_EQUAL':([5,6,7,10,11,12,13,20,22,35,36,37,38,43,44,46,48,50,55,57,58,59,60,61,62,63,64,65,66,78,80,84,85,86,88,93,102,103,104,106,],[29,-21,-14,-20,-22,-47,-48,-41,-46,29,-20,-21,-22,29,29,29,-16,29,29,None,None,None,None,None,None,-44,-45,-14,29,-49,-15,-42,-43,-50,-13,-20,29,-38,29,29,]),'EQUALS':([5,6,7,10,11,12,13,20,22,35,36,37,38,43,44,46,48,50,55,57,58,59,60,61,62,63,64,65,66,78,80,84,85,86,88,93,102,103,104,106,],[30,-21,-14,40,42,-47,-48,-41,-46,30,-20,-21,-22,30,30,30,-16,30,30,None,None,None,None,None,None,-44,-45,-14,30,-49,-15,-42,-43,-50,-13,-20,30,-38,30,30,]),'NOT_EQUALS':([5,6,7,10,11,12,13,20,22,35,36,37,38,43,44,46,48,50,55,57,58,59,60,61,62,63,64,65,66,78,80,84,85,86,88,93,102,103,104,106,],[31,-21,-14,-20,-22,-47,-48,-41,-46,31,-20,-21,-22,31,31,31,-16,31,31,None,None,None,None,None,None,-44,-45,-14,31,-49,-15,-42,-43,-50,-13,-20,31,-38,31,31,]),'PLUS':([5,6,7,10,11,12,13,20,22,35,36,37,38,43,44,46,48,50,55,57,58,59,60,61,62,63,64,65,66,78,80,84,85,86,88,93,102,103,104,106,],[32,-21,-14,-20,-22,-47,-48,-41,-46,32,-20,-21,-22,32,32,32,-16,32,32,32,32,32,32,32,32,-44,-45,-14,32,-49,-15,-42,-43,-50,-13,-20,32,-38,32,32,]),'MINUS':([5,6,7,10,11,12,13,20,22,35,36,37,38,43,44,46,48,50,55,57,58,59,60,61,62,63,64,65,66,78,80,84,85,86,88,93,102,103,104,106,],[33,-21,-14,-20,-22,-47,-48,-41,-46,33,-20,-21,-22,33,33,33,-16,33,33,33,33,33,33,33,33,-44,-45,-14,33,-49,-15,-42,-43,-50,-13,-20,33,-38,33,33,]),'ASSIGN':([6,],[34,]),'POWER':([7,12,13,22,65,78,84,85,88,],[-14,-47,-48,56,-14,-49,56,56,56,]),'DIVIDE':([7,12,13,20,22,63,64,65,78,84,85,88,],[-14,-47,-48,52,-46,52,52,-14,-49,-42,-43,-13,]),'TIMES':([7,12,13,20,22,63,64,65,78,84,85,88,],[-14,-47,-48,53,-46,53,53,-14,-49,-42,-43,-13,]),'RPAREN':([7,12,13,20,22,36,37,38,44,48,55,57,58,59,60,61,62,63,64,73,74,78,80,83,84,85,86,88,93,94,103,104,108,],[-14,-47,-48,-41,-46,-20,-21,-22,78,-16,-51,-28,-29,-30,-31,-32,-33,-44,-45,-3,95,-49,-15,103,-42,-43,-50,-13,-3,107,-38,-52,-4,]),'HASH_ROCKET':([7,12,13,20,22,36,37,38,48,50,57,58,59,60,61,62,63,64,78,80,84,85,86,88,103,],[-14,-47,-48,-41,-46,-20,-21,-22,-16,82,-28,-29,-30,-31,-32,-33,-44,-45,-49,-15,-42,-43,-50,-13,-38,]),'RBRACKET':([7,12,13,20,22,36,37,38,48,54,55,57,58,59,60,61,62,63,64,78,80,84,85,86,88,103,104,],[-14,-47,-48,-41,-46,-20,-21,-22,-16,86,-51,-28,-29,-30,-31,-32,-33,-44,-45,-49,-15,-42,-43,-50,-13,-38,-52,]),'COMMA':([7,12,13,20,22,36,37,38,47,48,49,54,55,57,58,59,60,61,62,63,64,73,74,78,80,83,84,85,86,88,93,94,101,102,103,104,108,],[-14,-47,-48,-41,-46,-20,-21,-22,81,-16,-17,87,-51,-28,-29,-30,-31,-32,-33,-44,-45,-3,96,-49,-15,87,-42,-43,-50,-13,-3,96,-18,-19,-38,-52,-4,]),'RBRACE':([7,12,13,18,20,22,36,37,38,47,48,49,57,58,59,60,61,62,63,64,78,80,84,85,86,88,101,102,103,],[-14,-47,-48,48,-41,-46,-20,-21,-22,80,-16,-17,-28,-29,-30,-31,-32,-33,-44,-45,-49,-15,-42,-43,-50,-13,-18,-19,-38,]),'GETS':([40,],[70,]),'IN':([45,],[79,]),'DOUBLE_DOT':([99,100,],[110,111,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'statements':([0,],[2,]),'statement':([0,2,3,24,25,35,39,43,67,68,77,90,98,105,106,107,109,113,114,118,120,],[3,24,25,25,25,67,68,77,25,25,25,105,109,25,113,114,25,25,25,120,25,]),'local_var':([0,2,3,24,25,35,39,43,67,68,77,90,98,105,106,107,109,113,114,118,120,],[4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,]),'expression':([0,2,3,8,14,15,17,18,21,24,25,26,27,28,29,30,31,34,35,39,43,51,67,68,69,77,81,82,87,90,91,98,105,106,107,109,113,114,118,120,],[5,5,5,35,43,44,46,50,55,5,5,57,58,59,60,61,62,66,5,5,5,55,5,5,44,5,50,102,104,5,106,5,5,5,5,5,5,5,5,5,]),'term':([0,2,3,8,14,15,17,18,21,24,25,26,27,28,29,30,31,32,33,34,35,39,43,51,67,68,69,77,81,82,87,90,91,98,105,106,107,109,113,114,118,120,],[20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,63,64,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,]),'factor':([0,2,3,8,14,15,17,18,21,24,25,26,27,28,29,30,31,32,33,34,35,39,43,51,52,53,56,67,68,69,77,81,82,87,90,91,98,105,106,107,109,113,114,118,120,],[22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,84,85,88,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,]),'key_value_pairs':([18,],[47,]),'key_value':([18,81,],[49,101,]),'elements':([21,51,],[54,83,]),'params':([41,69,],[74,94,]),'range':([79,],[98,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statements END','program',2,'p_program','AnalizadorSintactico.py',16),
  ('program -> statements','program',1,'p_program','AnalizadorSintactico.py',17),
  ('params -> IDENTIFIER','params',1,'p_params','AnalizadorSintactico.py',22),
  ('params -> params COMMA IDENTIFIER','params',3,'p_params','AnalizadorSintactico.py',23),
  ('statements -> statement','statements',1,'p_statements','AnalizadorSintactico.py',30),
  ('statements -> statements statement','statements',2,'p_statements','AnalizadorSintactico.py',31),
  ('statement -> local_var','statement',1,'p_statement','AnalizadorSintactico.py',39),
  ('statement -> expression','statement',1,'p_statement','AnalizadorSintactico.py',40),
  ('local_var -> IDENTIFIER EQUALS INTEGER','local_var',3,'p_local_var','AnalizadorSintactico.py',45),
  ('local_var -> IDENTIFIER EQUALS FLOAT','local_var',3,'p_local_var','AnalizadorSintactico.py',46),
  ('statement -> GLOBAL_VAR ASSIGN STRING','statement',3,'p_global_var','AnalizadorSintactico.py',51),
  ('statement -> GLOBAL_VAR ASSIGN expression','statement',3,'p_global_var','AnalizadorSintactico.py',52),
  ('factor -> factor POWER factor','factor',3,'p_factor_power','AnalizadorSintactico.py',56),
  ('factor -> STRING','factor',1,'p_factor_string','AnalizadorSintactico.py',60),
  ('expression -> LBRACE key_value_pairs RBRACE','expression',3,'p_hash','AnalizadorSintactico.py',64),
  ('expression -> LBRACE RBRACE','expression',2,'p_empty_hash','AnalizadorSintactico.py',69),
  ('key_value_pairs -> key_value','key_value_pairs',1,'p_key_value_pairs','AnalizadorSintactico.py',74),
  ('key_value_pairs -> key_value_pairs COMMA key_value','key_value_pairs',3,'p_key_value_pairs','AnalizadorSintactico.py',75),
  ('key_value -> expression HASH_ROCKET expression','key_value',3,'p_key_value','AnalizadorSintactico.py',82),
  ('expression -> IDENTIFIER','expression',1,'p_expression_var','AnalizadorSintactico.py',87),
  ('expression -> GLOBAL_VAR','expression',1,'p_expression_var','AnalizadorSintactico.py',88),
  ('expression -> INSTANCE_VAR','expression',1,'p_expression_var','AnalizadorSintactico.py',89),
  ('statement -> statement statement','statement',2,'p_statement_block','AnalizadorSintactico.py',93),
  ('statement -> IF expression statement END','statement',4,'p_if_statement','AnalizadorSintactico.py',97),
  ('statement -> IF expression statement ELSE statement END','statement',6,'p_if_statement','AnalizadorSintactico.py',98),
  ('statement -> IF expression statement ELSIF expression statement END','statement',7,'p_if_statement','AnalizadorSintactico.py',99),
  ('statement -> IF expression statement ELSIF expression statement ELSE statement END','statement',9,'p_if_statement','AnalizadorSintactico.py',100),
  ('expression -> expression GREATER expression','expression',3,'p_expression_comparison','AnalizadorSintactico.py',116),
  ('expression -> expression LESS expression','expression',3,'p_expression_comparison','AnalizadorSintactico.py',117),
  ('expression -> expression GREATER_EQUAL expression','expression',3,'p_expression_comparison','AnalizadorSintactico.py',118),
  ('expression -> expression LESS_EQUAL expression','expression',3,'p_expression_comparison','AnalizadorSintactico.py',119),
  ('expression -> expression EQUALS expression','expression',3,'p_expression_comparison','AnalizadorSintactico.py',120),
  ('expression -> expression NOT_EQUALS expression','expression',3,'p_expression_comparison','AnalizadorSintactico.py',121),
  ('statement -> DEF IDENTIFIER statement END','statement',4,'p_method_without_params_declaration','AnalizadorSintactico.py',135),
  ('statement -> IDENTIFIER','statement',1,'p_method_call_without_params','AnalizadorSintactico.py',141),
  ('statement -> INSTANCE_VAR EQUALS INTEGER','statement',3,'p_instance_var','AnalizadorSintactico.py',156),
  ('statement -> INSTANCE_VAR EQUALS FLOAT','statement',3,'p_instance_var','AnalizadorSintactico.py',157),
  ('expression -> SETNEW LPAREN elements RPAREN','expression',4,'p_set','AnalizadorSintactico.py',161),
  ('statement -> WHILE expression statement END','statement',4,'p_while_statement','AnalizadorSintactico.py',166),
  ('statement -> IDENTIFIER EQUALS GETS','statement',3,'p_gets_statement','AnalizadorSintactico.py',170),
  ('expression -> term','expression',1,'p_expression_term','AnalizadorSintactico.py',176),
  ('term -> term DIVIDE factor','term',3,'p_term_div','AnalizadorSintactico.py',180),
  ('term -> term TIMES factor','term',3,'p_term_times','AnalizadorSintactico.py',184),
  ('expression -> expression PLUS term','expression',3,'p_expression_plus','AnalizadorSintactico.py',188),
  ('expression -> expression MINUS term','expression',3,'p_expression_minus','AnalizadorSintactico.py',192),
  ('term -> factor','term',1,'p_term_factor','AnalizadorSintactico.py',196),
  ('factor -> INTEGER','factor',1,'p_factor_num','AnalizadorSintactico.py',200),
  ('factor -> FLOAT','factor',1,'p_factor_num','AnalizadorSintactico.py',201),
  ('factor -> LPAREN expression RPAREN','factor',3,'p_factor_expr','AnalizadorSintactico.py',205),
  ('expression -> LBRACKET elements RBRACKET','expression',3,'p_array','AnalizadorSintactico.py',210),
  ('elements -> expression','elements',1,'p_elements','AnalizadorSintactico.py',215),
  ('elements -> elements COMMA expression','elements',3,'p_elements','AnalizadorSintactico.py',216),
  ('statement -> DEF IDENTIFIER LPAREN params RPAREN statement END','statement',7,'p_method_with_return_declaration','AnalizadorSintactico.py',224),
  ('statement -> IDENTIFIER LPAREN params RPAREN','statement',4,'p_method_call_with_return','AnalizadorSintactico.py',229),
  ('statement -> FOR IDENTIFIER IN range statement','statement',5,'p_for_statement','AnalizadorSintactico.py',234),
  ('range -> INTEGER DOUBLE_DOT INTEGER','range',3,'p_range','AnalizadorSintactico.py',239),
  ('range -> FLOAT DOUBLE_DOT FLOAT','range',3,'p_range','AnalizadorSintactico.py',240),
  ('statement -> PUTS expression','statement',2,'p_puts_statement','AnalizadorSintactico.py',245),
]
