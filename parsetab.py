
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'nonassocLESSGREATERLESS_EQUALGREATER_EQUALEQUALSNOT_EQUALSleftPLUSMINUSleftTIMESDIVIDErightPOWERrightHASH_ROCKETAND ASSIGN BEGIN BITWISE_AND BREAK CASE CLASS CLASS_VAR COMMA COMMENT CONSTANT DEF DIVIDE DIVIDE_ASSIGN DO DOT DOUBLE_DOT ELSE ELSIF END ENSURE EQUALS FALSE FLOAT FLOOR_DIVIDE FOR GETS GLOBAL_VAR GREATER GREATER_EQUAL HASH_ROCKET IDENTIFIER IF IN INSTANCE_VAR INTEGER LAMBDA LBRACE LBRACKET LESS LESS_EQUAL LPAREN MINUS MINUS_ASSIGN MOD MODULE MOD_ASSIGN NEW NEXT NIL NOT NOT_EQUALS OR PIPE PLUS PLUS_ASSIGN POWER POWER_ASSIGN PROC PUTS QUESTION_MARK RAISE RANGE RBRACE RBRACKET REDO REQUIRE RESCUE RETRY RETURN RPAREN SELF SEMICOLON SETNEW SPACESHIP STRING SUPER TIMES TIMES_ASSIGN TRUE UNTIL WHEN WHILE YIELDprogram : statements END\n               | statementsparams : IDENTIFIER\n              | params COMMA IDENTIFIERstatements : statement\n                  | statements statementstatement :  expressionstatement : IDENTIFIER ASSIGN expressionstatement : GLOBAL_VAR ASSIGN STRING\n                 | GLOBAL_VAR ASSIGN expressionfactor : factor POWER factorfactor : STRINGexpression : LBRACE key_value_pairs RBRACEexpression : LBRACE RBRACEkey_value_pairs : key_value\n                       | key_value_pairs COMMA key_valuekey_value : expression HASH_ROCKET expressionexpression : IDENTIFIER\n                  | GLOBAL_VAR\n                  | INSTANCE_VARstatement : statement statementstatement : IF expression statement END\n                 | IF expression statement ELSE statement END\n                 | IF expression statement ELSIF expression statement END\n                 | IF expression statement ELSIF expression statement ELSE statement ENDexpression : expression GREATER expression\n                  | expression LESS expression\n                  | expression GREATER_EQUAL expression\n                  | expression LESS_EQUAL expression\n                  | expression EQUALS expression\n                  | expression NOT_EQUALS expressionstatement : DEF IDENTIFIER statement ENDstatement : IDENTIFIERstatement : CLASS IDENTIFIER statement END\n                 | CLASS IDENTIFIER ENDexpression : IDENTIFIER DOT NEW\n                  | IDENTIFIER DOT NEW LPAREN RPARENstatement : INSTANCE_VAR ASSIGN expressionstatement : SETNEW LPAREN optional_elements RPARENoptional_elements : elements\n                         | emptyempty :statement : WHILE expression statement ENDstatement : IDENTIFIER ASSIGN GETSstatement : DEF IDENTIFIER LPAREN params RPAREN statement ENDstatement : IDENTIFIER LPAREN params RPARENexpression : termterm : factor DIVIDE factorterm : factor TIMES factorexpression : factor PLUS factorexpression : factor MINUS factorfactor : INTEGER\n              | FLOAT factor : LPAREN expression RPARENexpression : LBRACKET elements RBRACKETelements : expression\n                | elements COMMA expressionstatement : FOR IDENTIFIER IN range statementrange : INTEGER DOUBLE_DOT INTEGER\n             | FLOAT DOUBLE_DOT FLOATstatement : PUTS statementmethod : DEF IDENTIFIER LPAREN params RPAREN return_statement ENDreturn_statement : RETURN statement\n                        | RETURN expression'
    
_lr_action_items = {'IDENTIFIER':([0,2,3,4,5,6,7,8,9,10,11,13,14,15,16,17,18,20,21,22,24,25,26,27,28,29,30,31,32,33,35,36,37,38,39,40,41,42,43,45,47,49,59,60,61,62,63,64,65,66,69,70,71,72,73,74,75,76,77,81,82,84,85,86,87,88,89,90,91,92,93,94,95,97,98,99,100,103,104,105,106,113,114,115,116,117,120,121,122,123,124,125,126,127,128,129,],[5,5,5,-7,-18,-19,-12,37,40,41,-20,37,37,46,5,37,-47,37,-52,-53,5,5,37,37,37,37,37,37,37,67,37,5,-18,-19,-20,5,5,37,37,5,5,-14,-26,-27,-28,-29,-30,-31,-8,-44,-36,-9,-10,5,5,101,5,-35,-38,-54,5,-13,37,37,-50,-51,-48,-49,-11,-55,37,-46,112,-22,5,37,-32,-34,-39,-43,5,-37,5,5,5,5,-23,5,5,-59,-60,-24,5,-45,5,-25,]),'GLOBAL_VAR':([0,2,3,4,5,6,7,8,11,13,14,16,17,18,20,21,22,24,25,26,27,28,29,30,31,32,35,36,37,38,39,40,41,42,43,45,47,49,59,60,61,62,63,64,65,66,69,70,71,72,73,74,75,76,77,81,82,84,85,86,87,88,89,90,91,92,93,94,97,98,99,100,103,104,105,106,113,114,115,116,117,120,121,122,123,124,125,126,127,128,129,],[6,6,6,-7,-18,-19,-12,38,-20,38,38,6,38,-47,38,-52,-53,6,6,38,38,38,38,38,38,38,38,6,-18,-19,-20,6,6,38,38,6,6,-14,-26,-27,-28,-29,-30,-31,-8,-44,-36,-9,-10,6,6,38,6,-35,-38,-54,6,-13,38,38,-50,-51,-48,-49,-11,-55,38,-46,-22,6,38,-32,-34,-39,-43,6,-37,6,6,6,6,-23,6,6,-59,-60,-24,6,-45,6,-25,]),'IF':([0,2,3,4,5,6,7,11,16,18,21,22,24,25,36,37,38,39,40,41,45,47,49,59,60,61,62,63,64,65,66,69,70,71,72,73,75,76,77,81,82,84,87,88,89,90,91,92,94,97,98,100,103,104,105,106,113,114,115,116,117,120,121,122,123,124,125,126,127,128,129,],[8,8,8,-7,-18,-19,-12,-20,8,-47,-52,-53,8,8,8,-18,-19,-20,8,8,8,8,-14,-26,-27,-28,-29,-30,-31,-8,-44,-36,-9,-10,8,8,8,-35,-38,-54,8,-13,-50,-51,-48,-49,-11,-55,-46,-22,8,-32,-34,-39,-43,8,-37,8,8,8,8,-23,8,8,-59,-60,-24,8,-45,8,-25,]),'DEF':([0,2,3,4,5,6,7,11,16,18,21,22,24,25,36,37,38,39,40,41,45,47,49,59,60,61,62,63,64,65,66,69,70,71,72,73,75,76,77,81,82,84,87,88,89,90,91,92,94,97,98,100,103,104,105,106,113,114,115,116,117,120,121,122,123,124,125,126,127,128,129,],[9,9,9,-7,-18,-19,-12,-20,9,-47,-52,-53,9,9,9,-18,-19,-20,9,9,9,9,-14,-26,-27,-28,-29,-30,-31,-8,-44,-36,-9,-10,9,9,9,-35,-38,-54,9,-13,-50,-51,-48,-49,-11,-55,-46,-22,9,-32,-34,-39,-43,9,-37,9,9,9,9,-23,9,9,-59,-60,-24,9,-45,9,-25,]),'CLASS':([0,2,3,4,5,6,7,11,16,18,21,22,24,25,36,37,38,39,40,41,45,47,49,59,60,61,62,63,64,65,66,69,70,71,72,73,75,76,77,81,82,84,87,88,89,90,91,92,94,97,98,100,103,104,105,106,113,114,115,116,117,120,121,122,123,124,125,126,127,128,129,],[10,10,10,-7,-18,-19,-12,-20,10,-47,-52,-53,10,10,10,-18,-19,-20,10,10,10,10,-14,-26,-27,-28,-29,-30,-31,-8,-44,-36,-9,-10,10,10,10,-35,-38,-54,10,-13,-50,-51,-48,-49,-11,-55,-46,-22,10,-32,-34,-39,-43,10,-37,10,10,10,10,-23,10,10,-59,-60,-24,10,-45,10,-25,]),'INSTANCE_VAR':([0,2,3,4,5,6,7,8,11,13,14,16,17,18,20,21,22,24,25,26,27,28,29,30,31,32,35,36,37,38,39,40,41,42,43,45,47,49,59,60,61,62,63,64,65,66,69,70,71,72,73,74,75,76,77,81,82,84,85,86,87,88,89,90,91,92,93,94,97,98,99,100,103,104,105,106,113,114,115,116,117,120,121,122,123,124,125,126,127,128,129,],[11,11,11,-7,-18,-19,-12,39,-20,39,39,11,39,-47,39,-52,-53,11,11,39,39,39,39,39,39,39,39,11,-18,-19,-20,11,11,39,39,11,11,-14,-26,-27,-28,-29,-30,-31,-8,-44,-36,-9,-10,11,11,39,11,-35,-38,-54,11,-13,39,39,-50,-51,-48,-49,-11,-55,39,-46,-22,11,39,-32,-34,-39,-43,11,-37,11,11,11,11,-23,11,11,-59,-60,-24,11,-45,11,-25,]),'SETNEW':([0,2,3,4,5,6,7,11,16,18,21,22,24,25,36,37,38,39,40,41,45,47,49,59,60,61,62,63,64,65,66,69,70,71,72,73,75,76,77,81,82,84,87,88,89,90,91,92,94,97,98,100,103,104,105,106,113,114,115,116,117,120,121,122,123,124,125,126,127,128,129,],[12,12,12,-7,-18,-19,-12,-20,12,-47,-52,-53,12,12,12,-18,-19,-20,12,12,12,12,-14,-26,-27,-28,-29,-30,-31,-8,-44,-36,-9,-10,12,12,12,-35,-38,-54,12,-13,-50,-51,-48,-49,-11,-55,-46,-22,12,-32,-34,-39,-43,12,-37,12,12,12,12,-23,12,12,-59,-60,-24,12,-45,12,-25,]),'WHILE':([0,2,3,4,5,6,7,11,16,18,21,22,24,25,36,37,38,39,40,41,45,47,49,59,60,61,62,63,64,65,66,69,70,71,72,73,75,76,77,81,82,84,87,88,89,90,91,92,94,97,98,100,103,104,105,106,113,114,115,116,117,120,121,122,123,124,125,126,127,128,129,],[14,14,14,-7,-18,-19,-12,-20,14,-47,-52,-53,14,14,14,-18,-19,-20,14,14,14,14,-14,-26,-27,-28,-29,-30,-31,-8,-44,-36,-9,-10,14,14,14,-35,-38,-54,14,-13,-50,-51,-48,-49,-11,-55,-46,-22,14,-32,-34,-39,-43,14,-37,14,14,14,14,-23,14,14,-59,-60,-24,14,-45,14,-25,]),'FOR':([0,2,3,4,5,6,7,11,16,18,21,22,24,25,36,37,38,39,40,41,45,47,49,59,60,61,62,63,64,65,66,69,70,71,72,73,75,76,77,81,82,84,87,88,89,90,91,92,94,97,98,100,103,104,105,106,113,114,115,116,117,120,121,122,123,124,125,126,127,128,129,],[15,15,15,-7,-18,-19,-12,-20,15,-47,-52,-53,15,15,15,-18,-19,-20,15,15,15,15,-14,-26,-27,-28,-29,-30,-31,-8,-44,-36,-9,-10,15,15,15,-35,-38,-54,15,-13,-50,-51,-48,-49,-11,-55,-46,-22,15,-32,-34,-39,-43,15,-37,15,15,15,15,-23,15,15,-59,-60,-24,15,-45,15,-25,]),'PUTS':([0,2,3,4,5,6,7,11,16,18,21,22,24,25,36,37,38,39,40,41,45,47,49,59,60,61,62,63,64,65,66,69,70,71,72,73,75,76,77,81,82,84,87,88,89,90,91,92,94,97,98,100,103,104,105,106,113,114,115,116,117,120,121,122,123,124,125,126,127,128,129,],[16,16,16,-7,-18,-19,-12,-20,16,-47,-52,-53,16,16,16,-18,-19,-20,16,16,16,16,-14,-26,-27,-28,-29,-30,-31,-8,-44,-36,-9,-10,16,16,16,-35,-38,-54,16,-13,-50,-51,-48,-49,-11,-55,-46,-22,16,-32,-34,-39,-43,16,-37,16,16,16,16,-23,16,16,-59,-60,-24,16,-45,16,-25,]),'LBRACE':([0,2,3,4,5,6,7,8,11,13,14,16,17,18,20,21,22,24,25,26,27,28,29,30,31,32,35,36,37,38,39,40,41,42,43,45,47,49,59,60,61,62,63,64,65,66,69,70,71,72,73,74,75,76,77,81,82,84,85,86,87,88,89,90,91,92,93,94,97,98,99,100,103,104,105,106,113,114,115,116,117,120,121,122,123,124,125,126,127,128,129,],[17,17,17,-7,-18,-19,-12,17,-20,17,17,17,17,-47,17,-52,-53,17,17,17,17,17,17,17,17,17,17,17,-18,-19,-20,17,17,17,17,17,17,-14,-26,-27,-28,-29,-30,-31,-8,-44,-36,-9,-10,17,17,17,17,-35,-38,-54,17,-13,17,17,-50,-51,-48,-49,-11,-55,17,-46,-22,17,17,-32,-34,-39,-43,17,-37,17,17,17,17,-23,17,17,-59,-60,-24,17,-45,17,-25,]),'LBRACKET':([0,2,3,4,5,6,7,8,11,13,14,16,17,18,20,21,22,24,25,26,27,28,29,30,31,32,35,36,37,38,39,40,41,42,43,45,47,49,59,60,61,62,63,64,65,66,69,70,71,72,73,74,75,76,77,81,82,84,85,86,87,88,89,90,91,92,93,94,97,98,99,100,103,104,105,106,113,114,115,116,117,120,121,122,123,124,125,126,127,128,129,],[20,20,20,-7,-18,-19,-12,20,-20,20,20,20,20,-47,20,-52,-53,20,20,20,20,20,20,20,20,20,20,20,-18,-19,-20,20,20,20,20,20,20,-14,-26,-27,-28,-29,-30,-31,-8,-44,-36,-9,-10,20,20,20,20,-35,-38,-54,20,-13,20,20,-50,-51,-48,-49,-11,-55,20,-46,-22,20,20,-32,-34,-39,-43,20,-37,20,20,20,20,-23,20,20,-59,-60,-24,20,-45,20,-25,]),'STRING':([0,2,3,4,5,6,7,8,11,13,14,16,17,18,20,21,22,24,25,26,27,28,29,30,31,32,35,36,37,38,39,40,41,42,43,45,47,49,52,53,54,55,56,59,60,61,62,63,64,65,66,69,70,71,72,73,74,75,76,77,81,82,84,85,86,87,88,89,90,91,92,93,94,97,98,99,100,103,104,105,106,113,114,115,116,117,120,121,122,123,124,125,126,127,128,129,],[7,7,7,-7,-18,-19,-12,7,-20,7,7,7,7,-47,7,-52,-53,7,7,7,7,7,7,7,7,7,70,7,-18,-19,-20,7,7,7,7,7,7,-14,7,7,7,7,7,-26,-27,-28,-29,-30,-31,-8,-44,-36,-9,-10,7,7,7,7,-35,-38,-54,7,-13,7,7,-50,-51,-48,-49,-11,-55,7,-46,-22,7,7,-32,-34,-39,-43,7,-37,7,7,7,7,-23,7,7,-59,-60,-24,7,-45,7,-25,]),'INTEGER':([0,2,3,4,5,6,7,8,11,13,14,16,17,18,20,21,22,24,25,26,27,28,29,30,31,32,35,36,37,38,39,40,41,42,43,45,47,49,52,53,54,55,56,59,60,61,62,63,64,65,66,69,70,71,72,73,74,75,76,77,81,82,83,84,85,86,87,88,89,90,91,92,93,94,97,98,99,100,103,104,105,106,113,114,115,116,117,118,120,121,122,123,124,125,126,127,128,129,],[21,21,21,-7,-18,-19,-12,21,-20,21,21,21,21,-47,21,-52,-53,21,21,21,21,21,21,21,21,21,21,21,-18,-19,-20,21,21,21,21,21,21,-14,21,21,21,21,21,-26,-27,-28,-29,-30,-31,-8,-44,-36,-9,-10,21,21,21,21,-35,-38,-54,21,107,-13,21,21,-50,-51,-48,-49,-11,-55,21,-46,-22,21,21,-32,-34,-39,-43,21,-37,21,21,21,21,123,-23,21,21,-59,-60,-24,21,-45,21,-25,]),'FLOAT':([0,2,3,4,5,6,7,8,11,13,14,16,17,18,20,21,22,24,25,26,27,28,29,30,31,32,35,36,37,38,39,40,41,42,43,45,47,49,52,53,54,55,56,59,60,61,62,63,64,65,66,69,70,71,72,73,74,75,76,77,81,82,83,84,85,86,87,88,89,90,91,92,93,94,97,98,99,100,103,104,105,106,113,114,115,116,117,119,120,121,122,123,124,125,126,127,128,129,],[22,22,22,-7,-18,-19,-12,22,-20,22,22,22,22,-47,22,-52,-53,22,22,22,22,22,22,22,22,22,22,22,-18,-19,-20,22,22,22,22,22,22,-14,22,22,22,22,22,-26,-27,-28,-29,-30,-31,-8,-44,-36,-9,-10,22,22,22,22,-35,-38,-54,22,108,-13,22,22,-50,-51,-48,-49,-11,-55,22,-46,-22,22,22,-32,-34,-39,-43,22,-37,22,22,22,22,124,-23,22,22,-59,-60,-24,22,-45,22,-25,]),'LPAREN':([0,2,3,4,5,6,7,8,11,12,13,14,16,17,18,20,21,22,24,25,26,27,28,29,30,31,32,35,36,37,38,39,40,41,42,43,45,47,49,52,53,54,55,56,59,60,61,62,63,64,65,66,69,70,71,72,73,74,75,76,77,81,82,84,85,86,87,88,89,90,91,92,93,94,97,98,99,100,103,104,105,106,113,114,115,116,117,120,121,122,123,124,125,126,127,128,129,],[13,13,13,-7,33,-19,-12,13,-20,43,13,13,13,13,-47,13,-52,-53,13,13,13,13,13,13,13,13,13,13,13,-18,-19,-20,74,13,13,13,13,13,-14,13,13,13,13,13,-26,-27,-28,-29,-30,-31,-8,-44,96,-9,-10,13,13,13,13,-35,-38,-54,13,-13,13,13,-50,-51,-48,-49,-11,-55,13,-46,-22,13,13,-32,-34,-39,-43,13,-37,13,13,13,13,-23,13,13,-59,-60,-24,13,-45,13,-25,]),'$end':([1,2,3,4,5,6,7,11,18,21,22,23,24,25,37,38,39,47,49,59,60,61,62,63,64,65,66,69,70,71,76,77,81,84,87,88,89,90,91,92,94,97,100,103,104,105,113,117,120,125,127,129,],[0,-2,-5,-7,-18,-19,-12,-20,-47,-52,-53,-1,-6,-21,-18,-19,-20,-61,-14,-26,-27,-28,-29,-30,-31,-8,-44,-36,-9,-10,-35,-38,-54,-13,-50,-51,-48,-49,-11,-55,-46,-22,-32,-34,-39,-43,-37,-58,-23,-24,-45,-25,]),'END':([2,3,4,5,6,7,11,18,21,22,24,25,37,38,39,41,47,49,59,60,61,62,63,64,65,66,69,70,71,72,73,75,76,77,81,82,84,87,88,89,90,91,92,94,97,100,103,104,105,113,114,117,120,121,122,125,127,128,129,],[23,-5,-7,-18,-19,-12,-20,-47,-52,-53,-6,-21,-18,-19,-20,76,-61,-14,-26,-27,-28,-29,-30,-31,-8,-44,-36,-9,-10,97,100,103,-35,-38,-54,105,-13,-50,-51,-48,-49,-11,-55,-46,-22,-32,-34,-39,-43,-37,120,-58,-23,125,127,-24,-45,129,-25,]),'ELSE':([4,5,6,7,11,18,21,22,25,37,38,39,47,49,59,60,61,62,63,64,65,66,69,70,71,72,76,77,81,84,87,88,89,90,91,92,94,97,100,103,104,105,113,117,120,121,125,127,129,],[-7,-18,-19,-12,-20,-47,-52,-53,-21,-18,-19,-20,-61,-14,-26,-27,-28,-29,-30,-31,-8,-44,-36,-9,-10,98,-35,-38,-54,-13,-50,-51,-48,-49,-11,-55,-46,-22,-32,-34,-39,-43,-37,-58,-23,126,-24,-45,-25,]),'ELSIF':([4,5,6,7,11,18,21,22,25,37,38,39,47,49,59,60,61,62,63,64,65,66,69,70,71,72,76,77,81,84,87,88,89,90,91,92,94,97,100,103,104,105,113,117,120,125,127,129,],[-7,-18,-19,-12,-20,-47,-52,-53,-21,-18,-19,-20,-61,-14,-26,-27,-28,-29,-30,-31,-8,-44,-36,-9,-10,99,-35,-38,-54,-13,-50,-51,-48,-49,-11,-55,-46,-22,-32,-34,-39,-43,-37,-58,-23,-24,-45,-25,]),'GREATER':([4,5,6,7,11,18,21,22,36,37,38,39,44,45,49,51,58,59,60,61,62,63,64,65,69,71,77,81,84,87,88,89,90,91,92,101,110,111,113,115,],[26,-18,-19,-12,-20,-47,-52,-53,26,-18,-19,-20,26,26,-14,26,26,None,None,None,None,None,None,26,-36,26,26,-54,-13,-50,-51,-48,-49,-11,-55,-18,26,26,-37,26,]),'LESS':([4,5,6,7,11,18,21,22,36,37,38,39,44,45,49,51,58,59,60,61,62,63,64,65,69,71,77,81,84,87,88,89,90,91,92,101,110,111,113,115,],[27,-18,-19,-12,-20,-47,-52,-53,27,-18,-19,-20,27,27,-14,27,27,None,None,None,None,None,None,27,-36,27,27,-54,-13,-50,-51,-48,-49,-11,-55,-18,27,27,-37,27,]),'GREATER_EQUAL':([4,5,6,7,11,18,21,22,36,37,38,39,44,45,49,51,58,59,60,61,62,63,64,65,69,71,77,81,84,87,88,89,90,91,92,101,110,111,113,115,],[28,-18,-19,-12,-20,-47,-52,-53,28,-18,-19,-20,28,28,-14,28,28,None,None,None,None,None,None,28,-36,28,28,-54,-13,-50,-51,-48,-49,-11,-55,-18,28,28,-37,28,]),'LESS_EQUAL':([4,5,6,7,11,18,21,22,36,37,38,39,44,45,49,51,58,59,60,61,62,63,64,65,69,71,77,81,84,87,88,89,90,91,92,101,110,111,113,115,],[29,-18,-19,-12,-20,-47,-52,-53,29,-18,-19,-20,29,29,-14,29,29,None,None,None,None,None,None,29,-36,29,29,-54,-13,-50,-51,-48,-49,-11,-55,-18,29,29,-37,29,]),'EQUALS':([4,5,6,7,11,18,21,22,36,37,38,39,44,45,49,51,58,59,60,61,62,63,64,65,69,71,77,81,84,87,88,89,90,91,92,101,110,111,113,115,],[30,-18,-19,-12,-20,-47,-52,-53,30,-18,-19,-20,30,30,-14,30,30,None,None,None,None,None,None,30,-36,30,30,-54,-13,-50,-51,-48,-49,-11,-55,-18,30,30,-37,30,]),'NOT_EQUALS':([4,5,6,7,11,18,21,22,36,37,38,39,44,45,49,51,58,59,60,61,62,63,64,65,69,71,77,81,84,87,88,89,90,91,92,101,110,111,113,115,],[31,-18,-19,-12,-20,-47,-52,-53,31,-18,-19,-20,31,31,-14,31,31,None,None,None,None,None,None,31,-36,31,31,-54,-13,-50,-51,-48,-49,-11,-55,-18,31,31,-37,31,]),'ASSIGN':([5,6,11,],[32,35,42,]),'DOT':([5,37,101,],[34,34,34,]),'PLUS':([7,19,21,22,70,81,91,],[-12,52,-52,-53,-12,-54,-11,]),'MINUS':([7,19,21,22,70,81,91,],[-12,53,-52,-53,-12,-54,-11,]),'DIVIDE':([7,19,21,22,70,81,91,],[-12,54,-52,-53,-12,-54,-11,]),'TIMES':([7,19,21,22,70,81,91,],[-12,55,-52,-53,-12,-54,-11,]),'POWER':([7,19,21,22,70,81,87,88,89,90,91,],[-12,56,-52,-53,-12,-54,56,56,56,56,56,]),'RPAREN':([7,18,21,22,37,38,39,43,44,49,58,59,60,61,62,63,64,67,68,69,78,79,80,81,84,87,88,89,90,91,92,96,101,102,111,112,113,],[-12,-47,-52,-53,-18,-19,-20,-42,81,-14,-56,-26,-27,-28,-29,-30,-31,-3,94,-36,104,-40,-41,-54,-13,-50,-51,-48,-49,-11,-55,113,-3,116,-57,-4,-37,]),'HASH_ROCKET':([7,18,21,22,37,38,39,49,51,59,60,61,62,63,64,69,81,84,87,88,89,90,91,92,113,],[-12,-47,-52,-53,-18,-19,-20,-14,86,-26,-27,-28,-29,-30,-31,-36,-54,-13,-50,-51,-48,-49,-11,-55,-37,]),'RBRACKET':([7,18,21,22,37,38,39,49,57,58,59,60,61,62,63,64,69,81,84,87,88,89,90,91,92,111,113,],[-12,-47,-52,-53,-18,-19,-20,-14,92,-56,-26,-27,-28,-29,-30,-31,-36,-54,-13,-50,-51,-48,-49,-11,-55,-57,-37,]),'COMMA':([7,18,21,22,37,38,39,48,49,50,57,58,59,60,61,62,63,64,67,68,69,79,81,84,87,88,89,90,91,92,101,102,109,110,111,112,113,],[-12,-47,-52,-53,-18,-19,-20,85,-14,-15,93,-56,-26,-27,-28,-29,-30,-31,-3,95,-36,93,-54,-13,-50,-51,-48,-49,-11,-55,-3,95,-16,-17,-57,-4,-37,]),'RBRACE':([7,17,18,21,22,37,38,39,48,49,50,59,60,61,62,63,64,69,81,84,87,88,89,90,91,92,109,110,113,],[-12,49,-47,-52,-53,-18,-19,-20,84,-14,-15,-26,-27,-28,-29,-30,-31,-36,-54,-13,-50,-51,-48,-49,-11,-55,-16,-17,-37,]),'GETS':([32,],[66,]),'NEW':([34,],[69,]),'IN':([46,],[83,]),'DOUBLE_DOT':([107,108,],[118,119,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'statements':([0,],[2,]),'statement':([0,2,3,16,24,25,36,40,41,45,47,72,73,75,82,98,106,114,115,116,117,121,122,126,128,],[3,24,25,47,25,25,72,73,75,82,25,25,25,25,25,114,117,25,121,122,25,25,25,128,25,]),'expression':([0,2,3,8,13,14,16,17,20,24,25,26,27,28,29,30,31,32,35,36,40,41,42,43,45,47,72,73,74,75,82,85,86,93,98,99,106,114,115,116,117,121,122,126,128,],[4,4,4,36,44,45,4,51,58,4,4,59,60,61,62,63,64,65,71,4,4,4,77,58,4,4,4,4,44,4,4,51,110,111,4,115,4,4,4,4,4,4,4,4,4,]),'term':([0,2,3,8,13,14,16,17,20,24,25,26,27,28,29,30,31,32,35,36,40,41,42,43,45,47,72,73,74,75,82,85,86,93,98,99,106,114,115,116,117,121,122,126,128,],[18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,]),'factor':([0,2,3,8,13,14,16,17,20,24,25,26,27,28,29,30,31,32,35,36,40,41,42,43,45,47,52,53,54,55,56,72,73,74,75,82,85,86,93,98,99,106,114,115,116,117,121,122,126,128,],[19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,87,88,89,90,91,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,]),'key_value_pairs':([17,],[48,]),'key_value':([17,85,],[50,109,]),'elements':([20,43,],[57,79,]),'params':([33,74,],[68,102,]),'optional_elements':([43,],[78,]),'empty':([43,],[80,]),'range':([83,],[106,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statements END','program',2,'p_program','AnalizadorSintactico.py',16),
  ('program -> statements','program',1,'p_program','AnalizadorSintactico.py',17),
  ('params -> IDENTIFIER','params',1,'p_params','AnalizadorSintactico.py',22),
  ('params -> params COMMA IDENTIFIER','params',3,'p_params','AnalizadorSintactico.py',23),
  ('statements -> statement','statements',1,'p_statements','AnalizadorSintactico.py',30),
  ('statements -> statements statement','statements',2,'p_statements','AnalizadorSintactico.py',31),
  ('statement -> expression','statement',1,'p_statement','AnalizadorSintactico.py',39),
  ('statement -> IDENTIFIER ASSIGN expression','statement',3,'p_local_var','AnalizadorSintactico.py',43),
  ('statement -> GLOBAL_VAR ASSIGN STRING','statement',3,'p_global_var','AnalizadorSintactico.py',53),
  ('statement -> GLOBAL_VAR ASSIGN expression','statement',3,'p_global_var','AnalizadorSintactico.py',54),
  ('factor -> factor POWER factor','factor',3,'p_factor_power','AnalizadorSintactico.py',58),
  ('factor -> STRING','factor',1,'p_factor_string','AnalizadorSintactico.py',62),
  ('expression -> LBRACE key_value_pairs RBRACE','expression',3,'p_hash','AnalizadorSintactico.py',66),
  ('expression -> LBRACE RBRACE','expression',2,'p_empty_hash','AnalizadorSintactico.py',71),
  ('key_value_pairs -> key_value','key_value_pairs',1,'p_key_value_pairs','AnalizadorSintactico.py',76),
  ('key_value_pairs -> key_value_pairs COMMA key_value','key_value_pairs',3,'p_key_value_pairs','AnalizadorSintactico.py',77),
  ('key_value -> expression HASH_ROCKET expression','key_value',3,'p_key_value','AnalizadorSintactico.py',84),
  ('expression -> IDENTIFIER','expression',1,'p_expression_var','AnalizadorSintactico.py',89),
  ('expression -> GLOBAL_VAR','expression',1,'p_expression_var','AnalizadorSintactico.py',90),
  ('expression -> INSTANCE_VAR','expression',1,'p_expression_var','AnalizadorSintactico.py',91),
  ('statement -> statement statement','statement',2,'p_statement_block','AnalizadorSintactico.py',95),
  ('statement -> IF expression statement END','statement',4,'p_if_statement','AnalizadorSintactico.py',99),
  ('statement -> IF expression statement ELSE statement END','statement',6,'p_if_statement','AnalizadorSintactico.py',100),
  ('statement -> IF expression statement ELSIF expression statement END','statement',7,'p_if_statement','AnalizadorSintactico.py',101),
  ('statement -> IF expression statement ELSIF expression statement ELSE statement END','statement',9,'p_if_statement','AnalizadorSintactico.py',102),
  ('expression -> expression GREATER expression','expression',3,'p_expression_comparison','AnalizadorSintactico.py',118),
  ('expression -> expression LESS expression','expression',3,'p_expression_comparison','AnalizadorSintactico.py',119),
  ('expression -> expression GREATER_EQUAL expression','expression',3,'p_expression_comparison','AnalizadorSintactico.py',120),
  ('expression -> expression LESS_EQUAL expression','expression',3,'p_expression_comparison','AnalizadorSintactico.py',121),
  ('expression -> expression EQUALS expression','expression',3,'p_expression_comparison','AnalizadorSintactico.py',122),
  ('expression -> expression NOT_EQUALS expression','expression',3,'p_expression_comparison','AnalizadorSintactico.py',123),
  ('statement -> DEF IDENTIFIER statement END','statement',4,'p_method_without_params_declaration','AnalizadorSintactico.py',137),
  ('statement -> IDENTIFIER','statement',1,'p_method_call_without_params','AnalizadorSintactico.py',143),
  ('statement -> CLASS IDENTIFIER statement END','statement',4,'p_class_declaration','AnalizadorSintactico.py',153),
  ('statement -> CLASS IDENTIFIER END','statement',3,'p_class_declaration','AnalizadorSintactico.py',154),
  ('expression -> IDENTIFIER DOT NEW','expression',3,'p_object_instantiation','AnalizadorSintactico.py',164),
  ('expression -> IDENTIFIER DOT NEW LPAREN RPAREN','expression',5,'p_object_instantiation','AnalizadorSintactico.py',165),
  ('statement -> INSTANCE_VAR ASSIGN expression','statement',3,'p_instance_var','AnalizadorSintactico.py',175),
  ('statement -> SETNEW LPAREN optional_elements RPAREN','statement',4,'p_set','AnalizadorSintactico.py',179),
  ('optional_elements -> elements','optional_elements',1,'p_optional_elements','AnalizadorSintactico.py',184),
  ('optional_elements -> empty','optional_elements',1,'p_optional_elements','AnalizadorSintactico.py',185),
  ('empty -> <empty>','empty',0,'p_empty','AnalizadorSintactico.py',189),
  ('statement -> WHILE expression statement END','statement',4,'p_while_statement','AnalizadorSintactico.py',193),
  ('statement -> IDENTIFIER ASSIGN GETS','statement',3,'p_gets_statement','AnalizadorSintactico.py',197),
  ('statement -> DEF IDENTIFIER LPAREN params RPAREN statement END','statement',7,'p_method_with_params_declaration','AnalizadorSintactico.py',201),
  ('statement -> IDENTIFIER LPAREN params RPAREN','statement',4,'p_method_call_with_params','AnalizadorSintactico.py',205),
  ('expression -> term','expression',1,'p_expression_term','AnalizadorSintactico.py',211),
  ('term -> factor DIVIDE factor','term',3,'p_term_div','AnalizadorSintactico.py',215),
  ('term -> factor TIMES factor','term',3,'p_term_times','AnalizadorSintactico.py',219),
  ('expression -> factor PLUS factor','expression',3,'p_expression_plus','AnalizadorSintactico.py',223),
  ('expression -> factor MINUS factor','expression',3,'p_expression_minus','AnalizadorSintactico.py',227),
  ('factor -> INTEGER','factor',1,'p_factor_num','AnalizadorSintactico.py',232),
  ('factor -> FLOAT','factor',1,'p_factor_num','AnalizadorSintactico.py',233),
  ('factor -> LPAREN expression RPAREN','factor',3,'p_factor_expr','AnalizadorSintactico.py',237),
  ('expression -> LBRACKET elements RBRACKET','expression',3,'p_array','AnalizadorSintactico.py',242),
  ('elements -> expression','elements',1,'p_elements','AnalizadorSintactico.py',247),
  ('elements -> elements COMMA expression','elements',3,'p_elements','AnalizadorSintactico.py',248),
  ('statement -> FOR IDENTIFIER IN range statement','statement',5,'p_for_statement','AnalizadorSintactico.py',256),
  ('range -> INTEGER DOUBLE_DOT INTEGER','range',3,'p_range','AnalizadorSintactico.py',261),
  ('range -> FLOAT DOUBLE_DOT FLOAT','range',3,'p_range','AnalizadorSintactico.py',262),
  ('statement -> PUTS statement','statement',2,'p_puts_statement','AnalizadorSintactico.py',267),
  ('method -> DEF IDENTIFIER LPAREN params RPAREN return_statement END','method',7,'p_method_with_return','AnalizadorSintactico.py',271),
  ('return_statement -> RETURN statement','return_statement',2,'p_return_statement','AnalizadorSintactico.py',277),
  ('return_statement -> RETURN expression','return_statement',2,'p_return_statement','AnalizadorSintactico.py',278),
]
