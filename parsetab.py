
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'nonassocLESSGREATERLESS_EQUALGREATER_EQUALEQUALSNOT_EQUALSleftPLUSMINUSleftTIMESDIVIDErightPOWERnonassocHASH_ROCKETAND ASSIGN BEGIN BITWISE_AND BREAK CASE CLASS CLASS_VAR COMMA COMMENT CONSTANT DEF DIVIDE DIVIDE_ASSIGN DO DOT DOUBLE_DOT ELSE ELSIF END ENSURE EQUALS FALSE FLOAT FLOOR_DIVIDE FOR GETS GLOBAL_VAR GREATER GREATER_EQUAL HASH_ROCKET IDENTIFIER IF IN INSTANCE_VAR INTEGER LAMBDA LBRACE LBRACKET LESS LESS_EQUAL LPAREN MINUS MINUS_ASSIGN MOD MODULE MOD_ASSIGN NEW NEXT NIL NOT NOT_EQUALS OR PIPE PLUS PLUS_ASSIGN POWER POWER_ASSIGN PROC PUTS QUESTION_MARK RAISE RANGE RBRACE RBRACKET REDO REQUIRE RESCUE RETRY RETURN RPAREN SELF SEMICOLON SETNEW SPACESHIP STRING SUPER THEN TIMES TIMES_ASSIGN TRUE UNTIL WHEN WHILE YIELDprogram : statements END\n               | statementsparams : IDENTIFIER\n              | params COMMA IDENTIFIERstatements : statement\n                  | statements statementstatement :  expressionstatement : IDENTIFIER ASSIGN STRING\n                | IDENTIFIER ASSIGN  expressionstatement : GLOBAL_VAR ASSIGN STRING\n                 | GLOBAL_VAR ASSIGN expressionfactor : factor POWER factorfactor : STRINGexpression : LBRACE key_value_pairs RBRACEexpression : LBRACE RBRACEkey_value_pairs : key_value\n                       | key_value_pairs COMMA key_valuekey_value : STRING HASH_ROCKET expression\n                 | STRING HASH_ROCKET STRING\n                 | STRING HASH_ROCKET INTEGER\n                 | STRING HASH_ROCKET FLOAT\n                 | expression HASH_ROCKET expressionexpression : IDENTIFIER\n                  | GLOBAL_VAR\n                  | INSTANCE_VARstatement : statement statementstatement : IF expression THEN statement END\n                 | IF expression statement END\n                 | IF expression THEN statement ELSE statement END\n                 | IF expression statement ELSE statement END\n                 | IF expression THEN statement ELSIF expression THEN statement END\n                 | IF expression statement ELSIF expression statement END\n                 | IF expression THEN statement ELSIF expression THEN statement ELSE statement END\n                 | IF expression statement ELSIF expression statement ELSE statement ENDexpression : expression GREATER expression\n                  | expression LESS expression\n                  | expression GREATER_EQUAL expression\n                  | expression LESS_EQUAL expression\n                  | expression EQUALS expression\n                  | expression NOT_EQUALS expressionstatement : DEF IDENTIFIER statement ENDstatement : IDENTIFIERstatement : CLASS_VAR ASSIGN expression\n                 | CLASS_VAR ASSIGN STRINGstatement : CONSTANT ASSIGN expression\n                 | CONSTANT ASSIGN STRINGfactor : TRUE\n              | FALSEfactor : NILstatement : INSTANCE_VAR ASSIGN expression\n                | INSTANCE_VAR ASSIGN STRINGstatement : SETNEW LPAREN optional_elements RPARENoptional_elements : elements\n                         | emptyempty :statement : WHILE expression statement ENDstatement : IDENTIFIER ASSIGN GETSstatement : DEF IDENTIFIER LPAREN params RPAREN statement ENDstatement : IDENTIFIER LPAREN params RPARENexpression : termterm : factor DIVIDE factorterm : factor TIMES factorexpression : factor PLUS factorexpression : factor MINUS factorfactor : INTEGER\n              | FLOAT factor : LPAREN expression RPARENexpression : LBRACKET elements RBRACKETelements : expression\n                | elements COMMA expressionstatement : FOR IDENTIFIER IN range statementrange : INTEGER DOUBLE_DOT INTEGER\n             | FLOAT DOUBLE_DOT FLOATstatement : PUTS statement\n                | PUTS STRING\n                | PUTS factor'
    
_lr_action_items = {'IDENTIFIER':([0,2,3,4,5,6,7,8,9,12,14,15,16,17,19,20,21,22,23,24,25,26,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,49,51,52,53,60,66,67,68,69,70,71,72,73,74,77,78,79,80,81,82,83,84,85,86,87,88,92,93,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,115,116,117,128,129,130,131,132,133,134,137,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,],[5,5,5,-7,-23,-13,-24,40,43,-25,40,40,50,5,40,-60,40,-47,-48,-49,-65,-66,5,5,40,40,40,40,40,40,40,75,40,5,-23,-24,-25,5,40,40,40,40,5,5,-13,-76,-15,-35,-36,-37,-38,-39,-40,-8,-9,-57,-10,-11,5,5,5,113,-43,-44,-45,-46,-50,-51,-67,5,-63,-64,-61,-62,-12,-14,40,40,40,-68,40,-59,127,5,-28,5,40,-41,-52,-56,5,-27,5,40,5,5,5,5,5,-30,5,5,-72,-73,-29,5,-32,5,-58,5,5,-31,5,-34,5,-33,]),'GLOBAL_VAR':([0,2,3,4,5,6,7,8,12,14,15,17,19,20,21,22,23,24,25,26,28,29,30,31,32,33,34,35,36,38,39,40,41,42,43,44,45,46,47,49,51,52,53,60,66,67,68,69,70,71,72,73,74,77,78,79,80,81,82,83,84,85,86,87,88,92,93,95,96,97,98,99,100,101,102,103,104,105,106,108,109,110,111,112,115,116,117,128,129,130,131,132,133,134,137,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,],[7,7,7,-7,-23,-13,-24,41,-25,41,41,7,41,-60,41,-47,-48,-49,-65,-66,7,7,41,41,41,41,41,41,41,41,7,-23,-24,-25,7,41,41,41,41,7,7,-13,-76,-15,-35,-36,-37,-38,-39,-40,-8,-9,-57,-10,-11,7,7,7,41,-43,-44,-45,-46,-50,-51,-67,7,-63,-64,-61,-62,-12,-14,41,41,41,-68,41,-59,7,-28,7,41,-41,-52,-56,7,-27,7,41,7,7,7,7,7,-30,7,7,-72,-73,-29,7,-32,7,-58,7,7,-31,7,-34,7,-33,]),'IF':([0,2,3,4,5,6,7,12,17,20,22,23,24,25,26,28,29,39,40,41,42,43,49,51,52,53,60,66,67,68,69,70,71,72,73,74,77,78,79,80,81,83,84,85,86,87,88,92,93,95,96,97,98,99,100,104,106,108,109,110,112,115,116,117,128,129,131,132,133,134,137,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,],[8,8,8,-7,-23,-13,-24,-25,8,-60,-47,-48,-49,-65,-66,8,8,8,-23,-24,-25,8,8,8,-13,-76,-15,-35,-36,-37,-38,-39,-40,-8,-9,-57,-10,-11,8,8,8,-43,-44,-45,-46,-50,-51,-67,8,-63,-64,-61,-62,-12,-14,-68,-59,8,-28,8,-41,-52,-56,8,-27,8,8,8,8,8,8,-30,8,8,-72,-73,-29,8,-32,8,-58,8,8,-31,8,-34,8,-33,]),'DEF':([0,2,3,4,5,6,7,12,17,20,22,23,24,25,26,28,29,39,40,41,42,43,49,51,52,53,60,66,67,68,69,70,71,72,73,74,77,78,79,80,81,83,84,85,86,87,88,92,93,95,96,97,98,99,100,104,106,108,109,110,112,115,116,117,128,129,131,132,133,134,137,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,],[9,9,9,-7,-23,-13,-24,-25,9,-60,-47,-48,-49,-65,-66,9,9,9,-23,-24,-25,9,9,9,-13,-76,-15,-35,-36,-37,-38,-39,-40,-8,-9,-57,-10,-11,9,9,9,-43,-44,-45,-46,-50,-51,-67,9,-63,-64,-61,-62,-12,-14,-68,-59,9,-28,9,-41,-52,-56,9,-27,9,9,9,9,9,9,-30,9,9,-72,-73,-29,9,-32,9,-58,9,9,-31,9,-34,9,-33,]),'CLASS_VAR':([0,2,3,4,5,6,7,12,17,20,22,23,24,25,26,28,29,39,40,41,42,43,49,51,52,53,60,66,67,68,69,70,71,72,73,74,77,78,79,80,81,83,84,85,86,87,88,92,93,95,96,97,98,99,100,104,106,108,109,110,112,115,116,117,128,129,131,132,133,134,137,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,],[10,10,10,-7,-23,-13,-24,-25,10,-60,-47,-48,-49,-65,-66,10,10,10,-23,-24,-25,10,10,10,-13,-76,-15,-35,-36,-37,-38,-39,-40,-8,-9,-57,-10,-11,10,10,10,-43,-44,-45,-46,-50,-51,-67,10,-63,-64,-61,-62,-12,-14,-68,-59,10,-28,10,-41,-52,-56,10,-27,10,10,10,10,10,10,-30,10,10,-72,-73,-29,10,-32,10,-58,10,10,-31,10,-34,10,-33,]),'CONSTANT':([0,2,3,4,5,6,7,12,17,20,22,23,24,25,26,28,29,39,40,41,42,43,49,51,52,53,60,66,67,68,69,70,71,72,73,74,77,78,79,80,81,83,84,85,86,87,88,92,93,95,96,97,98,99,100,104,106,108,109,110,112,115,116,117,128,129,131,132,133,134,137,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,],[11,11,11,-7,-23,-13,-24,-25,11,-60,-47,-48,-49,-65,-66,11,11,11,-23,-24,-25,11,11,11,-13,-76,-15,-35,-36,-37,-38,-39,-40,-8,-9,-57,-10,-11,11,11,11,-43,-44,-45,-46,-50,-51,-67,11,-63,-64,-61,-62,-12,-14,-68,-59,11,-28,11,-41,-52,-56,11,-27,11,11,11,11,11,11,-30,11,11,-72,-73,-29,11,-32,11,-58,11,11,-31,11,-34,11,-33,]),'INSTANCE_VAR':([0,2,3,4,5,6,7,8,12,14,15,17,19,20,21,22,23,24,25,26,28,29,30,31,32,33,34,35,36,38,39,40,41,42,43,44,45,46,47,49,51,52,53,60,66,67,68,69,70,71,72,73,74,77,78,79,80,81,82,83,84,85,86,87,88,92,93,95,96,97,98,99,100,101,102,103,104,105,106,108,109,110,111,112,115,116,117,128,129,130,131,132,133,134,137,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,],[12,12,12,-7,-23,-13,-24,42,-25,42,42,12,42,-60,42,-47,-48,-49,-65,-66,12,12,42,42,42,42,42,42,42,42,12,-23,-24,-25,12,42,42,42,42,12,12,-13,-76,-15,-35,-36,-37,-38,-39,-40,-8,-9,-57,-10,-11,12,12,12,42,-43,-44,-45,-46,-50,-51,-67,12,-63,-64,-61,-62,-12,-14,42,42,42,-68,42,-59,12,-28,12,42,-41,-52,-56,12,-27,12,42,12,12,12,12,12,-30,12,12,-72,-73,-29,12,-32,12,-58,12,12,-31,12,-34,12,-33,]),'SETNEW':([0,2,3,4,5,6,7,12,17,20,22,23,24,25,26,28,29,39,40,41,42,43,49,51,52,53,60,66,67,68,69,70,71,72,73,74,77,78,79,80,81,83,84,85,86,87,88,92,93,95,96,97,98,99,100,104,106,108,109,110,112,115,116,117,128,129,131,132,133,134,137,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,],[13,13,13,-7,-23,-13,-24,-25,13,-60,-47,-48,-49,-65,-66,13,13,13,-23,-24,-25,13,13,13,-13,-76,-15,-35,-36,-37,-38,-39,-40,-8,-9,-57,-10,-11,13,13,13,-43,-44,-45,-46,-50,-51,-67,13,-63,-64,-61,-62,-12,-14,-68,-59,13,-28,13,-41,-52,-56,13,-27,13,13,13,13,13,13,-30,13,13,-72,-73,-29,13,-32,13,-58,13,13,-31,13,-34,13,-33,]),'WHILE':([0,2,3,4,5,6,7,12,17,20,22,23,24,25,26,28,29,39,40,41,42,43,49,51,52,53,60,66,67,68,69,70,71,72,73,74,77,78,79,80,81,83,84,85,86,87,88,92,93,95,96,97,98,99,100,104,106,108,109,110,112,115,116,117,128,129,131,132,133,134,137,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,],[15,15,15,-7,-23,-13,-24,-25,15,-60,-47,-48,-49,-65,-66,15,15,15,-23,-24,-25,15,15,15,-13,-76,-15,-35,-36,-37,-38,-39,-40,-8,-9,-57,-10,-11,15,15,15,-43,-44,-45,-46,-50,-51,-67,15,-63,-64,-61,-62,-12,-14,-68,-59,15,-28,15,-41,-52,-56,15,-27,15,15,15,15,15,15,-30,15,15,-72,-73,-29,15,-32,15,-58,15,15,-31,15,-34,15,-33,]),'FOR':([0,2,3,4,5,6,7,12,17,20,22,23,24,25,26,28,29,39,40,41,42,43,49,51,52,53,60,66,67,68,69,70,71,72,73,74,77,78,79,80,81,83,84,85,86,87,88,92,93,95,96,97,98,99,100,104,106,108,109,110,112,115,116,117,128,129,131,132,133,134,137,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,],[16,16,16,-7,-23,-13,-24,-25,16,-60,-47,-48,-49,-65,-66,16,16,16,-23,-24,-25,16,16,16,-13,-76,-15,-35,-36,-37,-38,-39,-40,-8,-9,-57,-10,-11,16,16,16,-43,-44,-45,-46,-50,-51,-67,16,-63,-64,-61,-62,-12,-14,-68,-59,16,-28,16,-41,-52,-56,16,-27,16,16,16,16,16,16,-30,16,16,-72,-73,-29,16,-32,16,-58,16,16,-31,16,-34,16,-33,]),'PUTS':([0,2,3,4,5,6,7,12,17,20,22,23,24,25,26,28,29,39,40,41,42,43,49,51,52,53,60,66,67,68,69,70,71,72,73,74,77,78,79,80,81,83,84,85,86,87,88,92,93,95,96,97,98,99,100,104,106,108,109,110,112,115,116,117,128,129,131,132,133,134,137,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,],[17,17,17,-7,-23,-13,-24,-25,17,-60,-47,-48,-49,-65,-66,17,17,17,-23,-24,-25,17,17,17,-13,-76,-15,-35,-36,-37,-38,-39,-40,-8,-9,-57,-10,-11,17,17,17,-43,-44,-45,-46,-50,-51,-67,17,-63,-64,-61,-62,-12,-14,-68,-59,17,-28,17,-41,-52,-56,17,-27,17,17,17,17,17,17,-30,17,17,-72,-73,-29,17,-32,17,-58,17,17,-31,17,-34,17,-33,]),'LBRACE':([0,2,3,4,5,6,7,8,12,14,15,17,19,20,21,22,23,24,25,26,28,29,30,31,32,33,34,35,36,38,39,40,41,42,43,44,45,46,47,49,51,52,53,60,66,67,68,69,70,71,72,73,74,77,78,79,80,81,82,83,84,85,86,87,88,92,93,95,96,97,98,99,100,101,102,103,104,105,106,108,109,110,111,112,115,116,117,128,129,130,131,132,133,134,137,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,],[19,19,19,-7,-23,-13,-24,19,-25,19,19,19,19,-60,19,-47,-48,-49,-65,-66,19,19,19,19,19,19,19,19,19,19,19,-23,-24,-25,19,19,19,19,19,19,19,-13,-76,-15,-35,-36,-37,-38,-39,-40,-8,-9,-57,-10,-11,19,19,19,19,-43,-44,-45,-46,-50,-51,-67,19,-63,-64,-61,-62,-12,-14,19,19,19,-68,19,-59,19,-28,19,19,-41,-52,-56,19,-27,19,19,19,19,19,19,19,-30,19,19,-72,-73,-29,19,-32,19,-58,19,19,-31,19,-34,19,-33,]),'LBRACKET':([0,2,3,4,5,6,7,8,12,14,15,17,19,20,21,22,23,24,25,26,28,29,30,31,32,33,34,35,36,38,39,40,41,42,43,44,45,46,47,49,51,52,53,60,66,67,68,69,70,71,72,73,74,77,78,79,80,81,82,83,84,85,86,87,88,92,93,95,96,97,98,99,100,101,102,103,104,105,106,108,109,110,111,112,115,116,117,128,129,130,131,132,133,134,137,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,],[21,21,21,-7,-23,-13,-24,21,-25,21,21,21,21,-60,21,-47,-48,-49,-65,-66,21,21,21,21,21,21,21,21,21,21,21,-23,-24,-25,21,21,21,21,21,21,21,-13,-76,-15,-35,-36,-37,-38,-39,-40,-8,-9,-57,-10,-11,21,21,21,21,-43,-44,-45,-46,-50,-51,-67,21,-63,-64,-61,-62,-12,-14,21,21,21,-68,21,-59,21,-28,21,21,-41,-52,-56,21,-27,21,21,21,21,21,21,21,-30,21,21,-72,-73,-29,21,-32,21,-58,21,21,-31,21,-34,21,-33,]),'STRING':([0,2,3,4,5,6,7,8,12,14,15,17,19,20,21,22,23,24,25,26,28,29,30,31,32,33,34,35,36,38,39,40,41,42,43,44,45,46,47,49,51,52,53,54,55,56,57,58,60,66,67,68,69,70,71,72,73,74,77,78,79,80,81,82,83,84,85,86,87,88,92,93,95,96,97,98,99,100,101,102,103,104,105,106,108,109,110,111,112,115,116,117,128,129,130,131,132,133,134,137,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,],[6,6,6,-7,-23,-13,-24,6,-25,6,6,52,62,-60,6,-47,-48,-49,-65,-66,6,6,6,6,6,6,6,6,72,77,6,-23,-24,-25,6,84,86,88,6,6,6,-13,-76,6,6,6,6,6,-15,-35,-36,-37,-38,-39,-40,-8,-9,-57,-10,-11,6,6,6,6,-43,-44,-45,-46,-50,-51,-67,6,-63,-64,-61,-62,-12,-14,62,121,6,-68,6,-59,6,-28,6,6,-41,-52,-56,6,-27,6,6,6,6,6,6,6,-30,6,6,-72,-73,-29,6,-32,6,-58,6,6,-31,6,-34,6,-33,]),'TRUE':([0,2,3,4,5,6,7,8,12,14,15,17,19,20,21,22,23,24,25,26,28,29,30,31,32,33,34,35,36,38,39,40,41,42,43,44,45,46,47,49,51,52,53,54,55,56,57,58,60,66,67,68,69,70,71,72,73,74,77,78,79,80,81,82,83,84,85,86,87,88,92,93,95,96,97,98,99,100,101,102,103,104,105,106,108,109,110,111,112,115,116,117,128,129,130,131,132,133,134,137,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,],[22,22,22,-7,-23,-13,-24,22,-25,22,22,22,22,-60,22,-47,-48,-49,-65,-66,22,22,22,22,22,22,22,22,22,22,22,-23,-24,-25,22,22,22,22,22,22,22,-13,-76,22,22,22,22,22,-15,-35,-36,-37,-38,-39,-40,-8,-9,-57,-10,-11,22,22,22,22,-43,-44,-45,-46,-50,-51,-67,22,-63,-64,-61,-62,-12,-14,22,22,22,-68,22,-59,22,-28,22,22,-41,-52,-56,22,-27,22,22,22,22,22,22,22,-30,22,22,-72,-73,-29,22,-32,22,-58,22,22,-31,22,-34,22,-33,]),'FALSE':([0,2,3,4,5,6,7,8,12,14,15,17,19,20,21,22,23,24,25,26,28,29,30,31,32,33,34,35,36,38,39,40,41,42,43,44,45,46,47,49,51,52,53,54,55,56,57,58,60,66,67,68,69,70,71,72,73,74,77,78,79,80,81,82,83,84,85,86,87,88,92,93,95,96,97,98,99,100,101,102,103,104,105,106,108,109,110,111,112,115,116,117,128,129,130,131,132,133,134,137,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,],[23,23,23,-7,-23,-13,-24,23,-25,23,23,23,23,-60,23,-47,-48,-49,-65,-66,23,23,23,23,23,23,23,23,23,23,23,-23,-24,-25,23,23,23,23,23,23,23,-13,-76,23,23,23,23,23,-15,-35,-36,-37,-38,-39,-40,-8,-9,-57,-10,-11,23,23,23,23,-43,-44,-45,-46,-50,-51,-67,23,-63,-64,-61,-62,-12,-14,23,23,23,-68,23,-59,23,-28,23,23,-41,-52,-56,23,-27,23,23,23,23,23,23,23,-30,23,23,-72,-73,-29,23,-32,23,-58,23,23,-31,23,-34,23,-33,]),'NIL':([0,2,3,4,5,6,7,8,12,14,15,17,19,20,21,22,23,24,25,26,28,29,30,31,32,33,34,35,36,38,39,40,41,42,43,44,45,46,47,49,51,52,53,54,55,56,57,58,60,66,67,68,69,70,71,72,73,74,77,78,79,80,81,82,83,84,85,86,87,88,92,93,95,96,97,98,99,100,101,102,103,104,105,106,108,109,110,111,112,115,116,117,128,129,130,131,132,133,134,137,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,],[24,24,24,-7,-23,-13,-24,24,-25,24,24,24,24,-60,24,-47,-48,-49,-65,-66,24,24,24,24,24,24,24,24,24,24,24,-23,-24,-25,24,24,24,24,24,24,24,-13,-76,24,24,24,24,24,-15,-35,-36,-37,-38,-39,-40,-8,-9,-57,-10,-11,24,24,24,24,-43,-44,-45,-46,-50,-51,-67,24,-63,-64,-61,-62,-12,-14,24,24,24,-68,24,-59,24,-28,24,24,-41,-52,-56,24,-27,24,24,24,24,24,24,24,-30,24,24,-72,-73,-29,24,-32,24,-58,24,24,-31,24,-34,24,-33,]),'INTEGER':([0,2,3,4,5,6,7,8,12,14,15,17,19,20,21,22,23,24,25,26,28,29,30,31,32,33,34,35,36,38,39,40,41,42,43,44,45,46,47,49,51,52,53,54,55,56,57,58,60,66,67,68,69,70,71,72,73,74,77,78,79,80,81,82,83,84,85,86,87,88,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,108,109,110,111,112,115,116,117,128,129,130,131,132,133,134,135,137,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,],[25,25,25,-7,-23,-13,-24,25,-25,25,25,25,25,-60,25,-47,-48,-49,-65,-66,25,25,25,25,25,25,25,25,25,25,25,-23,-24,-25,25,25,25,25,25,25,25,-13,-76,25,25,25,25,25,-15,-35,-36,-37,-38,-39,-40,-8,-9,-57,-10,-11,25,25,25,25,-43,-44,-45,-46,-50,-51,-67,25,118,-63,-64,-61,-62,-12,-14,25,123,25,-68,25,-59,25,-28,25,25,-41,-52,-56,25,-27,25,25,25,25,25,25,142,25,-30,25,25,-72,-73,-29,25,-32,25,-58,25,25,-31,25,-34,25,-33,]),'FLOAT':([0,2,3,4,5,6,7,8,12,14,15,17,19,20,21,22,23,24,25,26,28,29,30,31,32,33,34,35,36,38,39,40,41,42,43,44,45,46,47,49,51,52,53,54,55,56,57,58,60,66,67,68,69,70,71,72,73,74,77,78,79,80,81,82,83,84,85,86,87,88,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,108,109,110,111,112,115,116,117,128,129,130,131,132,133,134,136,137,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,],[26,26,26,-7,-23,-13,-24,26,-25,26,26,26,26,-60,26,-47,-48,-49,-65,-66,26,26,26,26,26,26,26,26,26,26,26,-23,-24,-25,26,26,26,26,26,26,26,-13,-76,26,26,26,26,26,-15,-35,-36,-37,-38,-39,-40,-8,-9,-57,-10,-11,26,26,26,26,-43,-44,-45,-46,-50,-51,-67,26,119,-63,-64,-61,-62,-12,-14,26,124,26,-68,26,-59,26,-28,26,26,-41,-52,-56,26,-27,26,26,26,26,26,26,143,26,-30,26,26,-72,-73,-29,26,-32,26,-58,26,26,-31,26,-34,26,-33,]),'LPAREN':([0,2,3,4,5,6,7,8,12,13,14,15,17,19,20,21,22,23,24,25,26,28,29,30,31,32,33,34,35,36,38,39,40,41,42,43,44,45,46,47,49,51,52,53,54,55,56,57,58,60,66,67,68,69,70,71,72,73,74,77,78,79,80,81,82,83,84,85,86,87,88,92,93,95,96,97,98,99,100,101,102,103,104,105,106,108,109,110,111,112,115,116,117,128,129,130,131,132,133,134,137,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,],[14,14,14,-7,37,-13,-24,14,-25,47,14,14,14,14,-60,14,-47,-48,-49,-65,-66,14,14,14,14,14,14,14,14,14,14,14,-23,-24,-25,82,14,14,14,14,14,14,-13,-76,14,14,14,14,14,-15,-35,-36,-37,-38,-39,-40,-8,-9,-57,-10,-11,14,14,14,14,-43,-44,-45,-46,-50,-51,-67,14,-63,-64,-61,-62,-12,-14,14,14,14,-68,14,-59,14,-28,14,14,-41,-52,-56,14,-27,14,14,14,14,14,14,14,-30,14,14,-72,-73,-29,14,-32,14,-58,14,14,-31,14,-34,14,-33,]),'$end':([1,2,3,4,5,6,7,12,20,22,23,24,25,26,27,28,29,40,41,42,51,52,53,60,66,67,68,69,70,71,72,73,74,77,78,83,84,85,86,87,88,92,95,96,97,98,99,100,104,106,109,112,115,116,128,134,139,144,146,148,151,153,155,],[0,-2,-5,-7,-23,-13,-24,-25,-60,-47,-48,-49,-65,-66,-1,-6,-26,-23,-24,-25,-74,-13,-76,-15,-35,-36,-37,-38,-39,-40,-8,-9,-57,-10,-11,-43,-44,-45,-46,-50,-51,-67,-63,-64,-61,-62,-12,-14,-68,-59,-28,-41,-52,-56,-27,-71,-30,-29,-32,-58,-31,-34,-33,]),'END':([2,3,4,5,6,7,12,20,22,23,24,25,26,28,29,40,41,42,51,52,53,60,66,67,68,69,70,71,72,73,74,77,78,80,81,83,84,85,86,87,88,92,93,95,96,97,98,99,100,104,106,108,109,112,115,116,128,131,134,137,139,140,141,144,146,148,149,150,151,153,154,155,],[27,-5,-7,-23,-13,-24,-25,-60,-47,-48,-49,-65,-66,-6,-26,-23,-24,-25,-74,-13,-76,-15,-35,-36,-37,-38,-39,-40,-8,-9,-57,-10,-11,109,112,-43,-44,-45,-46,-50,-51,-67,116,-63,-64,-61,-62,-12,-14,-68,-59,128,-28,-41,-52,-56,-27,139,-71,144,-30,146,148,-29,-32,-58,151,153,-31,-34,155,-33,]),'ELSE':([4,5,6,7,12,20,22,23,24,25,26,29,40,41,42,51,52,53,60,66,67,68,69,70,71,72,73,74,77,78,80,83,84,85,86,87,88,92,95,96,97,98,99,100,104,106,108,109,112,115,116,128,134,139,140,144,146,148,149,151,153,155,],[-7,-23,-13,-24,-25,-60,-47,-48,-49,-65,-66,-26,-23,-24,-25,-74,-13,-76,-15,-35,-36,-37,-38,-39,-40,-8,-9,-57,-10,-11,110,-43,-44,-45,-46,-50,-51,-67,-63,-64,-61,-62,-12,-14,-68,-59,129,-28,-41,-52,-56,-27,-71,-30,147,-29,-32,-58,152,-31,-34,-33,]),'ELSIF':([4,5,6,7,12,20,22,23,24,25,26,29,40,41,42,51,52,53,60,66,67,68,69,70,71,72,73,74,77,78,80,83,84,85,86,87,88,92,95,96,97,98,99,100,104,106,108,109,112,115,116,128,134,139,144,146,148,151,153,155,],[-7,-23,-13,-24,-25,-60,-47,-48,-49,-65,-66,-26,-23,-24,-25,-74,-13,-76,-15,-35,-36,-37,-38,-39,-40,-8,-9,-57,-10,-11,111,-43,-44,-45,-46,-50,-51,-67,-63,-64,-61,-62,-12,-14,-68,-59,130,-28,-41,-52,-56,-27,-71,-30,-29,-32,-58,-31,-34,-33,]),'GREATER':([4,5,6,7,12,20,22,23,24,25,26,39,40,41,42,48,49,60,63,65,66,67,68,69,70,71,73,78,83,85,87,92,95,96,97,98,99,100,104,113,122,125,126,132,138,],[30,-23,-13,-24,-25,-60,-47,-48,-49,-65,-66,30,-23,-24,-25,30,30,-15,30,30,None,None,None,None,None,None,30,30,30,30,30,-67,-63,-64,-61,-62,-12,-14,-68,-23,30,30,30,30,30,]),'LESS':([4,5,6,7,12,20,22,23,24,25,26,39,40,41,42,48,49,60,63,65,66,67,68,69,70,71,73,78,83,85,87,92,95,96,97,98,99,100,104,113,122,125,126,132,138,],[31,-23,-13,-24,-25,-60,-47,-48,-49,-65,-66,31,-23,-24,-25,31,31,-15,31,31,None,None,None,None,None,None,31,31,31,31,31,-67,-63,-64,-61,-62,-12,-14,-68,-23,31,31,31,31,31,]),'GREATER_EQUAL':([4,5,6,7,12,20,22,23,24,25,26,39,40,41,42,48,49,60,63,65,66,67,68,69,70,71,73,78,83,85,87,92,95,96,97,98,99,100,104,113,122,125,126,132,138,],[32,-23,-13,-24,-25,-60,-47,-48,-49,-65,-66,32,-23,-24,-25,32,32,-15,32,32,None,None,None,None,None,None,32,32,32,32,32,-67,-63,-64,-61,-62,-12,-14,-68,-23,32,32,32,32,32,]),'LESS_EQUAL':([4,5,6,7,12,20,22,23,24,25,26,39,40,41,42,48,49,60,63,65,66,67,68,69,70,71,73,78,83,85,87,92,95,96,97,98,99,100,104,113,122,125,126,132,138,],[33,-23,-13,-24,-25,-60,-47,-48,-49,-65,-66,33,-23,-24,-25,33,33,-15,33,33,None,None,None,None,None,None,33,33,33,33,33,-67,-63,-64,-61,-62,-12,-14,-68,-23,33,33,33,33,33,]),'EQUALS':([4,5,6,7,12,20,22,23,24,25,26,39,40,41,42,48,49,60,63,65,66,67,68,69,70,71,73,78,83,85,87,92,95,96,97,98,99,100,104,113,122,125,126,132,138,],[34,-23,-13,-24,-25,-60,-47,-48,-49,-65,-66,34,-23,-24,-25,34,34,-15,34,34,None,None,None,None,None,None,34,34,34,34,34,-67,-63,-64,-61,-62,-12,-14,-68,-23,34,34,34,34,34,]),'NOT_EQUALS':([4,5,6,7,12,20,22,23,24,25,26,39,40,41,42,48,49,60,63,65,66,67,68,69,70,71,73,78,83,85,87,92,95,96,97,98,99,100,104,113,122,125,126,132,138,],[35,-23,-13,-24,-25,-60,-47,-48,-49,-65,-66,35,-23,-24,-25,35,35,-15,35,35,None,None,None,None,None,None,35,35,35,35,35,-67,-63,-64,-61,-62,-12,-14,-68,-23,35,35,35,35,35,]),'ASSIGN':([5,7,10,11,12,],[36,38,44,45,46,]),'PLUS':([6,18,22,23,24,25,26,52,53,62,72,77,84,86,88,92,99,121,123,124,],[-13,54,-47,-48,-49,-65,-66,-13,54,-13,-13,-13,-13,-13,-13,-67,-12,-13,-65,-66,]),'MINUS':([6,18,22,23,24,25,26,52,53,62,72,77,84,86,88,92,99,121,123,124,],[-13,55,-47,-48,-49,-65,-66,-13,55,-13,-13,-13,-13,-13,-13,-67,-12,-13,-65,-66,]),'DIVIDE':([6,18,22,23,24,25,26,52,53,62,72,77,84,86,88,92,99,121,123,124,],[-13,56,-47,-48,-49,-65,-66,-13,56,-13,-13,-13,-13,-13,-13,-67,-12,-13,-65,-66,]),'TIMES':([6,18,22,23,24,25,26,52,53,62,72,77,84,86,88,92,99,121,123,124,],[-13,57,-47,-48,-49,-65,-66,-13,57,-13,-13,-13,-13,-13,-13,-67,-12,-13,-65,-66,]),'POWER':([6,18,22,23,24,25,26,52,53,62,72,77,84,86,88,92,95,96,97,98,99,121,123,124,],[-13,58,-47,-48,-49,-65,-66,-13,58,-13,-13,-13,-13,-13,-13,-67,58,58,58,58,58,-13,-65,-66,]),'THEN':([6,20,22,23,24,25,26,39,40,41,42,60,66,67,68,69,70,71,92,95,96,97,98,99,100,104,138,],[-13,-60,-47,-48,-49,-65,-66,79,-23,-24,-25,-15,-35,-36,-37,-38,-39,-40,-67,-63,-64,-61,-62,-12,-14,-68,145,]),'RPAREN':([6,20,22,23,24,25,26,40,41,42,47,48,60,65,66,67,68,69,70,71,75,76,89,90,91,92,95,96,97,98,99,100,104,113,114,126,127,],[-13,-60,-47,-48,-49,-65,-66,-23,-24,-25,-55,92,-15,-69,-35,-36,-37,-38,-39,-40,-3,106,115,-53,-54,-67,-63,-64,-61,-62,-12,-14,-68,-3,133,-70,-4,]),'HASH_ROCKET':([6,20,22,23,24,25,26,40,41,42,60,62,63,66,67,68,69,70,71,92,95,96,97,98,99,100,104,],[-13,-60,-47,-48,-49,-65,-66,-23,-24,-25,-15,102,103,-35,-36,-37,-38,-39,-40,-67,-63,-64,-61,-62,-12,-14,-68,]),'RBRACKET':([6,20,22,23,24,25,26,40,41,42,60,64,65,66,67,68,69,70,71,92,95,96,97,98,99,100,104,126,],[-13,-60,-47,-48,-49,-65,-66,-23,-24,-25,-15,104,-69,-35,-36,-37,-38,-39,-40,-67,-63,-64,-61,-62,-12,-14,-68,-70,]),'COMMA':([6,20,22,23,24,25,26,40,41,42,59,60,61,64,65,66,67,68,69,70,71,75,76,90,92,95,96,97,98,99,100,104,113,114,120,121,122,123,124,125,126,127,],[-13,-60,-47,-48,-49,-65,-66,-23,-24,-25,101,-15,-16,105,-69,-35,-36,-37,-38,-39,-40,-3,107,105,-67,-63,-64,-61,-62,-12,-14,-68,-3,107,-17,-19,-18,-20,-21,-22,-70,-4,]),'RBRACE':([6,19,20,22,23,24,25,26,40,41,42,59,60,61,66,67,68,69,70,71,92,95,96,97,98,99,100,104,120,121,122,123,124,125,],[-13,60,-60,-47,-48,-49,-65,-66,-23,-24,-25,100,-15,-16,-35,-36,-37,-38,-39,-40,-67,-63,-64,-61,-62,-12,-14,-68,-17,-19,-18,-20,-21,-22,]),'GETS':([36,],[74,]),'IN':([50,],[94,]),'DOUBLE_DOT':([118,119,],[135,136,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'statements':([0,],[2,]),'statement':([0,2,3,17,28,29,39,43,49,51,79,80,81,93,108,110,117,129,131,132,133,134,137,140,141,145,147,149,150,152,154,],[3,28,29,51,29,29,80,81,93,29,108,29,29,29,29,131,134,137,29,140,141,29,29,29,29,149,150,29,29,154,29,]),'expression':([0,2,3,8,14,15,17,19,21,28,29,30,31,32,33,34,35,36,38,39,43,44,45,46,47,49,51,79,80,81,82,93,101,102,103,105,108,110,111,117,129,130,131,132,133,134,137,140,141,145,147,149,150,152,154,],[4,4,4,39,48,49,4,63,65,4,4,66,67,68,69,70,71,73,78,4,4,83,85,87,65,4,4,4,4,4,48,4,63,122,125,126,4,4,132,4,4,138,4,4,4,4,4,4,4,4,4,4,4,4,4,]),'factor':([0,2,3,8,14,15,17,19,21,28,29,30,31,32,33,34,35,36,38,39,43,44,45,46,47,49,51,54,55,56,57,58,79,80,81,82,93,101,102,103,105,108,110,111,117,129,130,131,132,133,134,137,140,141,145,147,149,150,152,154,],[18,18,18,18,18,18,53,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,95,96,97,98,99,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,]),'term':([0,2,3,8,14,15,17,19,21,28,29,30,31,32,33,34,35,36,38,39,43,44,45,46,47,49,51,79,80,81,82,93,101,102,103,105,108,110,111,117,129,130,131,132,133,134,137,140,141,145,147,149,150,152,154,],[20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,]),'key_value_pairs':([19,],[59,]),'key_value':([19,101,],[61,120,]),'elements':([21,47,],[64,90,]),'params':([37,82,],[76,114,]),'optional_elements':([47,],[89,]),'empty':([47,],[91,]),'range':([94,],[117,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statements END','program',2,'p_program','AnalizadorSintactico.py',16),
  ('program -> statements','program',1,'p_program','AnalizadorSintactico.py',17),
  ('params -> IDENTIFIER','params',1,'p_params','AnalizadorSintactico.py',22),
  ('params -> params COMMA IDENTIFIER','params',3,'p_params','AnalizadorSintactico.py',23),
  ('statements -> statement','statements',1,'p_statements','AnalizadorSintactico.py',30),
  ('statements -> statements statement','statements',2,'p_statements','AnalizadorSintactico.py',31),
  ('statement -> expression','statement',1,'p_statement','AnalizadorSintactico.py',39),
  ('statement -> IDENTIFIER ASSIGN STRING','statement',3,'p_local_var','AnalizadorSintactico.py',43),
  ('statement -> IDENTIFIER ASSIGN expression','statement',3,'p_local_var','AnalizadorSintactico.py',44),
  ('statement -> GLOBAL_VAR ASSIGN STRING','statement',3,'p_global_var','AnalizadorSintactico.py',49),
  ('statement -> GLOBAL_VAR ASSIGN expression','statement',3,'p_global_var','AnalizadorSintactico.py',50),
  ('factor -> factor POWER factor','factor',3,'p_factor_power','AnalizadorSintactico.py',54),
  ('factor -> STRING','factor',1,'p_factor_string','AnalizadorSintactico.py',58),
  ('expression -> LBRACE key_value_pairs RBRACE','expression',3,'p_hash','AnalizadorSintactico.py',62),
  ('expression -> LBRACE RBRACE','expression',2,'p_empty_hash','AnalizadorSintactico.py',67),
  ('key_value_pairs -> key_value','key_value_pairs',1,'p_key_value_pairs','AnalizadorSintactico.py',72),
  ('key_value_pairs -> key_value_pairs COMMA key_value','key_value_pairs',3,'p_key_value_pairs','AnalizadorSintactico.py',73),
  ('key_value -> STRING HASH_ROCKET expression','key_value',3,'p_key_value','AnalizadorSintactico.py',80),
  ('key_value -> STRING HASH_ROCKET STRING','key_value',3,'p_key_value','AnalizadorSintactico.py',81),
  ('key_value -> STRING HASH_ROCKET INTEGER','key_value',3,'p_key_value','AnalizadorSintactico.py',82),
  ('key_value -> STRING HASH_ROCKET FLOAT','key_value',3,'p_key_value','AnalizadorSintactico.py',83),
  ('key_value -> expression HASH_ROCKET expression','key_value',3,'p_key_value','AnalizadorSintactico.py',84),
  ('expression -> IDENTIFIER','expression',1,'p_expression_var','AnalizadorSintactico.py',89),
  ('expression -> GLOBAL_VAR','expression',1,'p_expression_var','AnalizadorSintactico.py',90),
  ('expression -> INSTANCE_VAR','expression',1,'p_expression_var','AnalizadorSintactico.py',91),
  ('statement -> statement statement','statement',2,'p_statement_block','AnalizadorSintactico.py',95),
  ('statement -> IF expression THEN statement END','statement',5,'p_if_statement','AnalizadorSintactico.py',99),
  ('statement -> IF expression statement END','statement',4,'p_if_statement','AnalizadorSintactico.py',100),
  ('statement -> IF expression THEN statement ELSE statement END','statement',7,'p_if_statement','AnalizadorSintactico.py',101),
  ('statement -> IF expression statement ELSE statement END','statement',6,'p_if_statement','AnalizadorSintactico.py',102),
  ('statement -> IF expression THEN statement ELSIF expression THEN statement END','statement',9,'p_if_statement','AnalizadorSintactico.py',103),
  ('statement -> IF expression statement ELSIF expression statement END','statement',7,'p_if_statement','AnalizadorSintactico.py',104),
  ('statement -> IF expression THEN statement ELSIF expression THEN statement ELSE statement END','statement',11,'p_if_statement','AnalizadorSintactico.py',105),
  ('statement -> IF expression statement ELSIF expression statement ELSE statement END','statement',9,'p_if_statement','AnalizadorSintactico.py',106),
  ('expression -> expression GREATER expression','expression',3,'p_expression_comparison','AnalizadorSintactico.py',126),
  ('expression -> expression LESS expression','expression',3,'p_expression_comparison','AnalizadorSintactico.py',127),
  ('expression -> expression GREATER_EQUAL expression','expression',3,'p_expression_comparison','AnalizadorSintactico.py',128),
  ('expression -> expression LESS_EQUAL expression','expression',3,'p_expression_comparison','AnalizadorSintactico.py',129),
  ('expression -> expression EQUALS expression','expression',3,'p_expression_comparison','AnalizadorSintactico.py',130),
  ('expression -> expression NOT_EQUALS expression','expression',3,'p_expression_comparison','AnalizadorSintactico.py',131),
  ('statement -> DEF IDENTIFIER statement END','statement',4,'p_method_without_params_declaration','AnalizadorSintactico.py',145),
  ('statement -> IDENTIFIER','statement',1,'p_method_call_without_params','AnalizadorSintactico.py',151),
  ('statement -> CLASS_VAR ASSIGN expression','statement',3,'p_class_var','AnalizadorSintactico.py',161),
  ('statement -> CLASS_VAR ASSIGN STRING','statement',3,'p_class_var','AnalizadorSintactico.py',162),
  ('statement -> CONSTANT ASSIGN expression','statement',3,'p_constant_var','AnalizadorSintactico.py',168),
  ('statement -> CONSTANT ASSIGN STRING','statement',3,'p_constant_var','AnalizadorSintactico.py',169),
  ('factor -> TRUE','factor',1,'p_factor_boolean','AnalizadorSintactico.py',175),
  ('factor -> FALSE','factor',1,'p_factor_boolean','AnalizadorSintactico.py',176),
  ('factor -> NIL','factor',1,'p_factor_nil','AnalizadorSintactico.py',182),
  ('statement -> INSTANCE_VAR ASSIGN expression','statement',3,'p_instance_var','AnalizadorSintactico.py',190),
  ('statement -> INSTANCE_VAR ASSIGN STRING','statement',3,'p_instance_var','AnalizadorSintactico.py',191),
  ('statement -> SETNEW LPAREN optional_elements RPAREN','statement',4,'p_set','AnalizadorSintactico.py',195),
  ('optional_elements -> elements','optional_elements',1,'p_optional_elements','AnalizadorSintactico.py',200),
  ('optional_elements -> empty','optional_elements',1,'p_optional_elements','AnalizadorSintactico.py',201),
  ('empty -> <empty>','empty',0,'p_empty','AnalizadorSintactico.py',205),
  ('statement -> WHILE expression statement END','statement',4,'p_while_statement','AnalizadorSintactico.py',209),
  ('statement -> IDENTIFIER ASSIGN GETS','statement',3,'p_gets_statement','AnalizadorSintactico.py',213),
  ('statement -> DEF IDENTIFIER LPAREN params RPAREN statement END','statement',7,'p_method_with_params_declaration','AnalizadorSintactico.py',217),
  ('statement -> IDENTIFIER LPAREN params RPAREN','statement',4,'p_method_call_with_params','AnalizadorSintactico.py',221),
  ('expression -> term','expression',1,'p_expression_term','AnalizadorSintactico.py',227),
  ('term -> factor DIVIDE factor','term',3,'p_term_div','AnalizadorSintactico.py',231),
  ('term -> factor TIMES factor','term',3,'p_term_times','AnalizadorSintactico.py',235),
  ('expression -> factor PLUS factor','expression',3,'p_expression_plus','AnalizadorSintactico.py',239),
  ('expression -> factor MINUS factor','expression',3,'p_expression_minus','AnalizadorSintactico.py',243),
  ('factor -> INTEGER','factor',1,'p_factor_num','AnalizadorSintactico.py',248),
  ('factor -> FLOAT','factor',1,'p_factor_num','AnalizadorSintactico.py',249),
  ('factor -> LPAREN expression RPAREN','factor',3,'p_factor_expr','AnalizadorSintactico.py',253),
  ('expression -> LBRACKET elements RBRACKET','expression',3,'p_array','AnalizadorSintactico.py',258),
  ('elements -> expression','elements',1,'p_elements','AnalizadorSintactico.py',263),
  ('elements -> elements COMMA expression','elements',3,'p_elements','AnalizadorSintactico.py',264),
  ('statement -> FOR IDENTIFIER IN range statement','statement',5,'p_for_statement','AnalizadorSintactico.py',272),
  ('range -> INTEGER DOUBLE_DOT INTEGER','range',3,'p_range','AnalizadorSintactico.py',277),
  ('range -> FLOAT DOUBLE_DOT FLOAT','range',3,'p_range','AnalizadorSintactico.py',278),
  ('statement -> PUTS statement','statement',2,'p_puts_statement','AnalizadorSintactico.py',283),
  ('statement -> PUTS STRING','statement',2,'p_puts_statement','AnalizadorSintactico.py',284),
  ('statement -> PUTS factor','statement',2,'p_puts_statement','AnalizadorSintactico.py',285),
]
