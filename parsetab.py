
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftPLUSMINUSleftTIMESDIVIDErightPOWERAND ASSIGN BEGIN BITWISE_AND BREAK CASE CLASS CLASS_VAR COMMA COMMENT CONSTANT DEF DIVIDE DIVIDE_ASSIGN DO DOT DOUBLE_DOT ELSE ELSIF END ENSURE EQUALS FALSE FLOAT FLOOR_DIVIDE FOR GETS GLOBAL_VAR GREATER GREATER_EQUAL IDENTIFIER IF IN INSTANCE_VAR INTEGER LAMBDA LBRACE LBRACKET LESS LESS_EQUAL LPAREN MINUS MINUS_ASSIGN MOD MODULE MOD_ASSIGN NEXT NIL NOT NOT_EQUALS OR PIPE PLUS PLUS_ASSIGN POWER POWER_ASSIGN PROC PUTS QUESTION_MARK RAISE RANGE RBRACE RBRACKET REDO REQUIRE RESCUE RETRY RETURN RPAREN SELF SEMICOLON SETNEW SPACESHIP STRING SUPER TIMES TIMES_ASSIGN TRUE UNTIL WHEN WHILE YIELDprogram : statements END\n               | statementsparams : IDENTIFIER\n              | params COMMA IDENTIFIERstatements : statement\n                  | statements statementstatement :  expressionstatement : IDENTIFIER ASSIGN INTEGER\n                 | IDENTIFIER ASSIGN FLOATstatement : INSTANCE_VAR ASSIGN INTEGER\n                 | INSTANCE_VAR ASSIGN FLOATexpression : SETNEW LPAREN elements RPARENstatement : WHILE expression statement ENDstatement : IDENTIFIER ASSIGN GETSexpression : termterm : factor DIVIDE factorterm : factor TIMES factorexpression : expression PLUS factorexpression : expression MINUS factorfactor : INTEGER\n              | FLOAT factor : LPAREN expression RPARENexpression : LBRACKET elements RBRACKETelements : expression\n                | elements COMMA expressionstatement : DEF IDENTIFIER LPAREN params RPAREN statement ENDstatement : IDENTIFIER LPAREN params RPARENstatement : FOR IDENTIFIER IN range statementrange : INTEGER DOUBLE_DOT INTEGER\n             | FLOAT DOUBLE_DOT FLOATstatement : PUTS statement'
    
_lr_action_items = {'IDENTIFIER':([0,2,3,4,6,7,10,12,13,15,19,23,25,29,35,36,37,38,39,42,43,45,46,49,50,51,53,54,55,57,60,63,64,68,69,70,],[5,5,-5,-7,-20,-21,26,28,5,-15,-6,40,5,-31,-18,-19,-8,-9,-14,-10,-11,40,-22,-16,-17,-23,-27,62,-13,5,-12,5,-28,-29,-30,-26,]),'INSTANCE_VAR':([0,2,3,4,6,7,13,15,19,25,29,35,36,37,38,39,42,43,46,49,50,51,53,55,57,60,63,64,68,69,70,],[8,8,-5,-7,-20,-21,8,-15,-6,8,-31,-18,-19,-8,-9,-14,-10,-11,-22,-16,-17,-23,-27,-13,8,-12,8,-28,-29,-30,-26,]),'WHILE':([0,2,3,4,6,7,13,15,19,25,29,35,36,37,38,39,42,43,46,49,50,51,53,55,57,60,63,64,68,69,70,],[9,9,-5,-7,-20,-21,9,-15,-6,9,-31,-18,-19,-8,-9,-14,-10,-11,-22,-16,-17,-23,-27,-13,9,-12,9,-28,-29,-30,-26,]),'DEF':([0,2,3,4,6,7,13,15,19,25,29,35,36,37,38,39,42,43,46,49,50,51,53,55,57,60,63,64,68,69,70,],[10,10,-5,-7,-20,-21,10,-15,-6,10,-31,-18,-19,-8,-9,-14,-10,-11,-22,-16,-17,-23,-27,-13,10,-12,10,-28,-29,-30,-26,]),'FOR':([0,2,3,4,6,7,13,15,19,25,29,35,36,37,38,39,42,43,46,49,50,51,53,55,57,60,63,64,68,69,70,],[12,12,-5,-7,-20,-21,12,-15,-6,12,-31,-18,-19,-8,-9,-14,-10,-11,-22,-16,-17,-23,-27,-13,12,-12,12,-28,-29,-30,-26,]),'PUTS':([0,2,3,4,6,7,13,15,19,25,29,35,36,37,38,39,42,43,46,49,50,51,53,55,57,60,63,64,68,69,70,],[13,13,-5,-7,-20,-21,13,-15,-6,13,-31,-18,-19,-8,-9,-14,-10,-11,-22,-16,-17,-23,-27,-13,13,-12,13,-28,-29,-30,-26,]),'SETNEW':([0,2,3,4,6,7,9,11,13,15,17,19,25,29,30,35,36,37,38,39,42,43,46,49,50,51,52,53,55,57,60,63,64,68,69,70,],[14,14,-5,-7,-20,-21,14,14,14,-15,14,-6,14,-31,14,-18,-19,-8,-9,-14,-10,-11,-22,-16,-17,-23,14,-27,-13,14,-12,14,-28,-29,-30,-26,]),'LBRACKET':([0,2,3,4,6,7,9,11,13,15,17,19,25,29,30,35,36,37,38,39,42,43,46,49,50,51,52,53,55,57,60,63,64,68,69,70,],[17,17,-5,-7,-20,-21,17,17,17,-15,17,-6,17,-31,17,-18,-19,-8,-9,-14,-10,-11,-22,-16,-17,-23,17,-27,-13,17,-12,17,-28,-29,-30,-26,]),'INTEGER':([0,2,3,4,6,7,9,11,13,15,17,19,20,21,22,24,25,29,30,31,32,35,36,37,38,39,42,43,46,47,49,50,51,52,53,55,57,60,63,64,65,68,69,70,],[6,6,-5,-7,-20,-21,6,6,6,-15,6,-6,6,6,37,42,6,-31,6,6,6,-18,-19,-8,-9,-14,-10,-11,-22,58,-16,-17,-23,6,-27,-13,6,-12,6,-28,68,-29,-30,-26,]),'FLOAT':([0,2,3,4,6,7,9,11,13,15,17,19,20,21,22,24,25,29,30,31,32,35,36,37,38,39,42,43,46,47,49,50,51,52,53,55,57,60,63,64,66,68,69,70,],[7,7,-5,-7,-20,-21,7,7,7,-15,7,-6,7,7,38,43,7,-31,7,7,7,-18,-19,-8,-9,-14,-10,-11,-22,59,-16,-17,-23,7,-27,-13,7,-12,7,-28,69,-29,-30,-26,]),'LPAREN':([0,2,3,4,5,6,7,9,11,13,14,15,17,19,20,21,25,26,29,30,31,32,35,36,37,38,39,42,43,46,49,50,51,52,53,55,57,60,63,64,68,69,70,],[11,11,-5,-7,23,-20,-21,11,11,11,30,-15,11,-6,11,11,11,45,-31,11,11,11,-18,-19,-8,-9,-14,-10,-11,-22,-16,-17,-23,11,-27,-13,11,-12,11,-28,-29,-30,-26,]),'$end':([1,2,3,4,6,7,15,18,19,29,35,36,37,38,39,42,43,46,49,50,51,53,55,60,64,70,],[0,-2,-5,-7,-20,-21,-15,-1,-6,-31,-18,-19,-8,-9,-14,-10,-11,-22,-16,-17,-23,-27,-13,-12,-28,-26,]),'END':([2,3,4,6,7,15,19,29,35,36,37,38,39,42,43,44,46,49,50,51,53,55,60,64,67,70,],[18,-5,-7,-20,-21,-15,-6,-31,-18,-19,-8,-9,-14,-10,-11,55,-22,-16,-17,-23,-27,-13,-12,-28,70,-26,]),'PLUS':([4,6,7,15,25,27,34,35,36,46,49,50,51,60,61,],[20,-20,-21,-15,20,20,20,-18,-19,-22,-16,-17,-23,-12,20,]),'MINUS':([4,6,7,15,25,27,34,35,36,46,49,50,51,60,61,],[21,-20,-21,-15,21,21,21,-18,-19,-22,-16,-17,-23,-12,21,]),'ASSIGN':([5,8,],[22,24,]),'DIVIDE':([6,7,16,46,],[-20,-21,31,-22,]),'TIMES':([6,7,16,46,],[-20,-21,32,-22,]),'RPAREN':([6,7,15,27,34,35,36,40,41,46,48,49,50,51,56,60,61,62,],[-20,-21,-15,46,-24,-18,-19,-3,53,-22,60,-16,-17,-23,63,-12,-25,-4,]),'RBRACKET':([6,7,15,33,34,35,36,46,49,50,51,60,61,],[-20,-21,-15,51,-24,-18,-19,-22,-16,-17,-23,-12,-25,]),'COMMA':([6,7,15,33,34,35,36,40,41,46,48,49,50,51,56,60,61,62,],[-20,-21,-15,52,-24,-18,-19,-3,54,-22,52,-16,-17,-23,54,-12,-25,-4,]),'GETS':([22,],[39,]),'IN':([28,],[47,]),'DOUBLE_DOT':([58,59,],[65,66,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'statements':([0,],[2,]),'statement':([0,2,13,25,57,63,],[3,19,29,44,64,67,]),'expression':([0,2,9,11,13,17,25,30,52,57,63,],[4,4,25,27,4,34,4,34,61,4,4,]),'term':([0,2,9,11,13,17,25,30,52,57,63,],[15,15,15,15,15,15,15,15,15,15,15,]),'factor':([0,2,9,11,13,17,20,21,25,30,31,32,52,57,63,],[16,16,16,16,16,16,35,36,16,16,49,50,16,16,16,]),'elements':([17,30,],[33,48,]),'params':([23,45,],[41,56,]),'range':([47,],[57,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statements END','program',2,'p_program','AnalizadorSintactico.py',14),
  ('program -> statements','program',1,'p_program','AnalizadorSintactico.py',15),
  ('params -> IDENTIFIER','params',1,'p_params','AnalizadorSintactico.py',20),
  ('params -> params COMMA IDENTIFIER','params',3,'p_params','AnalizadorSintactico.py',21),
  ('statements -> statement','statements',1,'p_statements','AnalizadorSintactico.py',28),
  ('statements -> statements statement','statements',2,'p_statements','AnalizadorSintactico.py',29),
  ('statement -> expression','statement',1,'p_statement','AnalizadorSintactico.py',37),
  ('statement -> IDENTIFIER ASSIGN INTEGER','statement',3,'p_local_var','AnalizadorSintactico.py',41),
  ('statement -> IDENTIFIER ASSIGN FLOAT','statement',3,'p_local_var','AnalizadorSintactico.py',42),
  ('statement -> INSTANCE_VAR ASSIGN INTEGER','statement',3,'p_instance_var','AnalizadorSintactico.py',48),
  ('statement -> INSTANCE_VAR ASSIGN FLOAT','statement',3,'p_instance_var','AnalizadorSintactico.py',49),
  ('expression -> SETNEW LPAREN elements RPAREN','expression',4,'p_set','AnalizadorSintactico.py',53),
  ('statement -> WHILE expression statement END','statement',4,'p_while_statement','AnalizadorSintactico.py',58),
  ('statement -> IDENTIFIER ASSIGN GETS','statement',3,'p_gets_statement','AnalizadorSintactico.py',62),
  ('expression -> term','expression',1,'p_expression_term','AnalizadorSintactico.py',68),
  ('term -> factor DIVIDE factor','term',3,'p_term_div','AnalizadorSintactico.py',72),
  ('term -> factor TIMES factor','term',3,'p_term_times','AnalizadorSintactico.py',76),
  ('expression -> expression PLUS factor','expression',3,'p_expression_plus','AnalizadorSintactico.py',80),
  ('expression -> expression MINUS factor','expression',3,'p_expression_minus','AnalizadorSintactico.py',84),
  ('factor -> INTEGER','factor',1,'p_factor_num','AnalizadorSintactico.py',89),
  ('factor -> FLOAT','factor',1,'p_factor_num','AnalizadorSintactico.py',90),
  ('factor -> LPAREN expression RPAREN','factor',3,'p_factor_expr','AnalizadorSintactico.py',94),
  ('expression -> LBRACKET elements RBRACKET','expression',3,'p_array','AnalizadorSintactico.py',99),
  ('elements -> expression','elements',1,'p_elements','AnalizadorSintactico.py',104),
  ('elements -> elements COMMA expression','elements',3,'p_elements','AnalizadorSintactico.py',105),
  ('statement -> DEF IDENTIFIER LPAREN params RPAREN statement END','statement',7,'p_method_with_return_declaration','AnalizadorSintactico.py',113),
  ('statement -> IDENTIFIER LPAREN params RPAREN','statement',4,'p_method_call_with_return','AnalizadorSintactico.py',118),
  ('statement -> FOR IDENTIFIER IN range statement','statement',5,'p_for_statement','AnalizadorSintactico.py',123),
  ('range -> INTEGER DOUBLE_DOT INTEGER','range',3,'p_range','AnalizadorSintactico.py',128),
  ('range -> FLOAT DOUBLE_DOT FLOAT','range',3,'p_range','AnalizadorSintactico.py',129),
  ('statement -> PUTS statement','statement',2,'p_puts_statement','AnalizadorSintactico.py',134),
]
