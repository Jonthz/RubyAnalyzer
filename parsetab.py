
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftPLUSMINUSleftTIMESDIVIDErightPOWERAND ASSIGN BEGIN BITWISE_AND BREAK CASE CLASS CLASS_VAR COMMA COMMENT CONSTANT DEF DIVIDE DIVIDE_ASSIGN DO DOT DOUBLE_DOT ELSE ELSIF END ENSURE EQUALS FALSE FLOAT FLOOR_DIVIDE FOR GETS GLOBAL_VAR GREATER GREATER_EQUAL IDENTIFIER IF IN INSTANCE_VAR INTEGER LAMBDA LBRACE LBRACKET LESS LESS_EQUAL LPAREN MINUS MINUS_ASSIGN MOD MODULE MOD_ASSIGN NEXT NIL NOT NOT_EQUALS OR PIPE PLUS PLUS_ASSIGN POWER POWER_ASSIGN PROC PUTS QUESTION_MARK RAISE RANGE RBRACE RBRACKET REDO REQUIRE RESCUE RETRY RETURN RPAREN SELF SEMICOLON SETNEW SPACESHIP STRING SUPER TIMES TIMES_ASSIGN TRUE UNTIL WHEN WHILE YIELDprogram : statements END\n               | statementsparams : IDENTIFIER\n              | params COMMA IDENTIFIERstatements : statement\n                  | statements statementstatement :  expressionstatement : IDENTIFIER ASSIGN expressionstatement : INSTANCE_VAR ASSIGN expressionstatement : SETNEW LPAREN optional_elements RPARENoptional_elements : elements\n                         | emptyempty :statement : WHILE expression statement ENDstatement : IDENTIFIER ASSIGN GETSstatement : DEF IDENTIFIER LPAREN params RPAREN statement ENDstatement : IDENTIFIER LPAREN params RPARENexpression : termterm : factor DIVIDE factorterm : factor TIMES factorexpression : factor PLUS factorexpression : factor MINUS factorfactor : INTEGER\n              | FLOAT factor : LPAREN expression RPARENexpression : LBRACKET elements RBRACKETelements : expression\n                | elements COMMA expressionstatement : FOR IDENTIFIER IN range statementrange : INTEGER DOUBLE_DOT INTEGER\n             | FLOAT DOUBLE_DOT FLOATstatement : PUTS statement'
    
_lr_action_items = {'IDENTIFIER':([0,2,3,4,10,11,12,13,16,17,19,21,25,28,35,36,39,43,45,47,48,49,50,51,53,54,55,56,58,63,64,68,69,70,],[5,5,-5,-7,26,27,5,-18,-23,-24,-6,37,5,-32,-8,-15,-9,-25,37,-21,-22,-19,-20,-26,-17,62,-10,-14,5,5,-29,-30,-31,-16,]),'INSTANCE_VAR':([0,2,3,4,12,13,16,17,19,25,28,35,36,39,43,47,48,49,50,51,53,55,56,58,63,64,68,69,70,],[6,6,-5,-7,6,-18,-23,-24,-6,6,-32,-8,-15,-9,-25,-21,-22,-19,-20,-26,-17,-10,-14,6,6,-29,-30,-31,-16,]),'SETNEW':([0,2,3,4,12,13,16,17,19,25,28,35,36,39,43,47,48,49,50,51,53,55,56,58,63,64,68,69,70,],[7,7,-5,-7,7,-18,-23,-24,-6,7,-32,-8,-15,-9,-25,-21,-22,-19,-20,-26,-17,-10,-14,7,7,-29,-30,-31,-16,]),'WHILE':([0,2,3,4,12,13,16,17,19,25,28,35,36,39,43,47,48,49,50,51,53,55,56,58,63,64,68,69,70,],[9,9,-5,-7,9,-18,-23,-24,-6,9,-32,-8,-15,-9,-25,-21,-22,-19,-20,-26,-17,-10,-14,9,9,-29,-30,-31,-16,]),'DEF':([0,2,3,4,12,13,16,17,19,25,28,35,36,39,43,47,48,49,50,51,53,55,56,58,63,64,68,69,70,],[10,10,-5,-7,10,-18,-23,-24,-6,10,-32,-8,-15,-9,-25,-21,-22,-19,-20,-26,-17,-10,-14,10,10,-29,-30,-31,-16,]),'FOR':([0,2,3,4,12,13,16,17,19,25,28,35,36,39,43,47,48,49,50,51,53,55,56,58,63,64,68,69,70,],[11,11,-5,-7,11,-18,-23,-24,-6,11,-32,-8,-15,-9,-25,-21,-22,-19,-20,-26,-17,-10,-14,11,11,-29,-30,-31,-16,]),'PUTS':([0,2,3,4,12,13,16,17,19,25,28,35,36,39,43,47,48,49,50,51,53,55,56,58,63,64,68,69,70,],[12,12,-5,-7,12,-18,-23,-24,-6,12,-32,-8,-15,-9,-25,-21,-22,-19,-20,-26,-17,-10,-14,12,12,-29,-30,-31,-16,]),'LBRACKET':([0,2,3,4,8,9,12,13,15,16,17,19,20,22,23,25,28,35,36,39,43,47,48,49,50,51,52,53,55,56,58,63,64,68,69,70,],[15,15,-5,-7,15,15,15,-18,15,-23,-24,-6,15,15,15,15,-32,-8,-15,-9,-25,-21,-22,-19,-20,-26,15,-17,-10,-14,15,15,-29,-30,-31,-16,]),'INTEGER':([0,2,3,4,8,9,12,13,15,16,17,19,20,22,23,25,28,29,30,31,32,35,36,39,43,46,47,48,49,50,51,52,53,55,56,58,63,64,65,68,69,70,],[16,16,-5,-7,16,16,16,-18,16,-23,-24,-6,16,16,16,16,-32,16,16,16,16,-8,-15,-9,-25,59,-21,-22,-19,-20,-26,16,-17,-10,-14,16,16,-29,68,-30,-31,-16,]),'FLOAT':([0,2,3,4,8,9,12,13,15,16,17,19,20,22,23,25,28,29,30,31,32,35,36,39,43,46,47,48,49,50,51,52,53,55,56,58,63,64,66,68,69,70,],[17,17,-5,-7,17,17,17,-18,17,-23,-24,-6,17,17,17,17,-32,17,17,17,17,-8,-15,-9,-25,60,-21,-22,-19,-20,-26,17,-17,-10,-14,17,17,-29,69,-30,-31,-16,]),'LPAREN':([0,2,3,4,5,7,8,9,12,13,15,16,17,19,20,22,23,25,26,28,29,30,31,32,35,36,39,43,47,48,49,50,51,52,53,55,56,58,63,64,68,69,70,],[8,8,-5,-7,21,23,8,8,8,-18,8,-23,-24,-6,8,8,8,8,45,-32,8,8,8,8,-8,-15,-9,-25,-21,-22,-19,-20,-26,8,-17,-10,-14,8,8,-29,-30,-31,-16,]),'$end':([1,2,3,4,13,16,17,18,19,28,35,36,39,43,47,48,49,50,51,53,55,56,64,70,],[0,-2,-5,-7,-18,-23,-24,-1,-6,-32,-8,-15,-9,-25,-21,-22,-19,-20,-26,-17,-10,-14,-29,-16,]),'END':([2,3,4,13,16,17,19,28,35,36,39,43,44,47,48,49,50,51,53,55,56,64,67,70,],[18,-5,-7,-18,-23,-24,-6,-32,-8,-15,-9,-25,56,-21,-22,-19,-20,-26,-17,-10,-14,-29,70,-16,]),'ASSIGN':([5,6,],[20,22,]),'RPAREN':([13,16,17,23,24,34,37,38,40,41,42,43,47,48,49,50,51,57,61,62,],[-18,-23,-24,-13,43,-27,-3,53,55,-11,-12,-25,-21,-22,-19,-20,-26,63,-28,-4,]),'RBRACKET':([13,16,17,33,34,43,47,48,49,50,51,61,],[-18,-23,-24,51,-27,-25,-21,-22,-19,-20,-26,-28,]),'COMMA':([13,16,17,33,34,37,38,41,43,47,48,49,50,51,57,61,62,],[-18,-23,-24,52,-27,-3,54,52,-25,-21,-22,-19,-20,-26,54,-28,-4,]),'PLUS':([14,16,17,43,],[29,-23,-24,-25,]),'MINUS':([14,16,17,43,],[30,-23,-24,-25,]),'DIVIDE':([14,16,17,43,],[31,-23,-24,-25,]),'TIMES':([14,16,17,43,],[32,-23,-24,-25,]),'GETS':([20,],[36,]),'IN':([27,],[46,]),'DOUBLE_DOT':([59,60,],[65,66,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

<<<<<<< HEAD
_lr_goto_items = {'program':([0,],[1,]),'statements':([0,],[2,]),'statement':([0,2,12,25,58,63,],[3,19,28,44,64,67,]),'expression':([0,2,8,9,12,15,20,22,23,25,52,58,63,],[4,4,24,25,4,34,35,39,34,4,61,4,4,]),'term':([0,2,8,9,12,15,20,22,23,25,52,58,63,],[13,13,13,13,13,13,13,13,13,13,13,13,13,]),'factor':([0,2,8,9,12,15,20,22,23,25,29,30,31,32,52,58,63,],[14,14,14,14,14,14,14,14,14,14,47,48,49,50,14,14,14,]),'elements':([15,23,],[33,41,]),'params':([21,45,],[38,57,]),'optional_elements':([23,],[40,]),'empty':([23,],[42,]),'range':([46,],[58,]),}
=======
_lr_goto_items = {'program':([0,],[1,]),'statements':([0,],[2,]),'statement':([0,2,3,24,25,35,39,43,67,68,77,90,98,105,106,107,109,113,114,118,120,],[3,24,25,25,25,67,68,77,25,25,25,105,109,25,113,114,25,25,25,120,25,]),'local_var':([0,2,3,24,25,35,39,43,67,68,77,90,98,105,106,107,109,113,114,118,120,],[4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,]),'expression':([0,2,3,8,14,15,17,18,21,24,25,26,27,28,29,30,31,34,35,39,43,51,67,68,69,77,81,82,87,90,91,98,105,106,107,109,113,114,118,120,],[5,5,5,35,43,44,46,50,55,5,5,57,58,59,60,61,62,66,5,5,5,55,5,5,44,5,50,102,104,5,106,5,5,5,5,5,5,5,5,5,]),'term':([0,2,3,8,14,15,17,18,21,24,25,26,27,28,29,30,31,32,33,34,35,39,43,51,67,68,69,77,81,82,87,90,91,98,105,106,107,109,113,114,118,120,],[20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,63,64,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,]),'factor':([0,2,3,8,14,15,17,18,21,24,25,26,27,28,29,30,31,32,33,34,35,39,43,51,52,53,56,67,68,69,77,81,82,87,90,91,98,105,106,107,109,113,114,118,120,],[22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,84,85,88,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,]),'key_value_pairs':([18,],[47,]),'key_value':([18,81,],[49,101,]),'elements':([21,51,],[54,83,]),'params':([41,69,],[74,94,]),'range':([79,],[98,]),}
>>>>>>> c992c513a290307da9662b5f9ad72bf5716edc3b

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
<<<<<<< HEAD
  ('program -> statements END','program',2,'p_program','AnalizadorSintactico.py',14),
  ('program -> statements','program',1,'p_program','AnalizadorSintactico.py',15),
  ('params -> IDENTIFIER','params',1,'p_params','AnalizadorSintactico.py',20),
  ('params -> params COMMA IDENTIFIER','params',3,'p_params','AnalizadorSintactico.py',21),
  ('statements -> statement','statements',1,'p_statements','AnalizadorSintactico.py',28),
  ('statements -> statements statement','statements',2,'p_statements','AnalizadorSintactico.py',29),
  ('statement -> expression','statement',1,'p_statement','AnalizadorSintactico.py',37),
  ('statement -> IDENTIFIER ASSIGN expression','statement',3,'p_local_var','AnalizadorSintactico.py',41),
  ('statement -> INSTANCE_VAR ASSIGN expression','statement',3,'p_instance_var','AnalizadorSintactico.py',47),
  ('statement -> SETNEW LPAREN optional_elements RPAREN','statement',4,'p_set','AnalizadorSintactico.py',51),
  ('optional_elements -> elements','optional_elements',1,'p_optional_elements','AnalizadorSintactico.py',56),
  ('optional_elements -> empty','optional_elements',1,'p_optional_elements','AnalizadorSintactico.py',57),
  ('empty -> <empty>','empty',0,'p_empty','AnalizadorSintactico.py',61),
  ('statement -> WHILE expression statement END','statement',4,'p_while_statement','AnalizadorSintactico.py',66),
  ('statement -> IDENTIFIER ASSIGN GETS','statement',3,'p_gets_statement','AnalizadorSintactico.py',70),
  ('statement -> DEF IDENTIFIER LPAREN params RPAREN statement END','statement',7,'p_method_with_params_declaration','AnalizadorSintactico.py',74),
  ('statement -> IDENTIFIER LPAREN params RPAREN','statement',4,'p_method_call_with_params','AnalizadorSintactico.py',78),
  ('expression -> term','expression',1,'p_expression_term','AnalizadorSintactico.py',84),
  ('term -> factor DIVIDE factor','term',3,'p_term_div','AnalizadorSintactico.py',88),
  ('term -> factor TIMES factor','term',3,'p_term_times','AnalizadorSintactico.py',92),
  ('expression -> factor PLUS factor','expression',3,'p_expression_plus','AnalizadorSintactico.py',96),
  ('expression -> factor MINUS factor','expression',3,'p_expression_minus','AnalizadorSintactico.py',100),
  ('factor -> INTEGER','factor',1,'p_factor_num','AnalizadorSintactico.py',105),
  ('factor -> FLOAT','factor',1,'p_factor_num','AnalizadorSintactico.py',106),
  ('factor -> LPAREN expression RPAREN','factor',3,'p_factor_expr','AnalizadorSintactico.py',110),
  ('expression -> LBRACKET elements RBRACKET','expression',3,'p_array','AnalizadorSintactico.py',115),
  ('elements -> expression','elements',1,'p_elements','AnalizadorSintactico.py',120),
  ('elements -> elements COMMA expression','elements',3,'p_elements','AnalizadorSintactico.py',121),
  ('statement -> FOR IDENTIFIER IN range statement','statement',5,'p_for_statement','AnalizadorSintactico.py',129),
  ('range -> INTEGER DOUBLE_DOT INTEGER','range',3,'p_range','AnalizadorSintactico.py',134),
  ('range -> FLOAT DOUBLE_DOT FLOAT','range',3,'p_range','AnalizadorSintactico.py',135),
  ('statement -> PUTS statement','statement',2,'p_puts_statement','AnalizadorSintactico.py',140),
=======
  ('program -> statements END','program',2,'p_program','AnalizadorSintactico.py',16),
  ('program -> statements','program',1,'p_program','AnalizadorSintactico.py',17),
  ('params -> IDENTIFIER','params',1,'p_params','AnalizadorSintactico.py',22),
  ('params -> params COMMA IDENTIFIER','params',3,'p_params','AnalizadorSintactico.py',23),
  ('statements -> statement','statements',1,'p_statements','AnalizadorSintactico.py',30),
  ('statements -> statements statement','statements',2,'p_statements','AnalizadorSintactico.py',31),
  ('statement -> local_var','statement',1,'p_statement','AnalizadorSintactico.py',39),
  ('statement -> expression','statement',1,'p_statement','AnalizadorSintactico.py',40),
  ('local_var -> IDENTIFIER EQUALS INTEGER','local_var',3,'p_local_var','AnalizadorSintactico.py',45),
  ('local_var -> IDENTIFIER EQUALS FLOAT','local_var',3,'p_local_var','AnalizadorSintactico.py',46),
  ('statement -> GLOBAL_VAR ASSIGN STRING','statement',3,'p_global_var','AnalizadorSintactico.py',51),
  ('statement -> GLOBAL_VAR ASSIGN expression','statement',3,'p_global_var','AnalizadorSintactico.py',52),
  ('factor -> factor POWER factor','factor',3,'p_factor_power','AnalizadorSintactico.py',56),
  ('factor -> STRING','factor',1,'p_factor_string','AnalizadorSintactico.py',60),
  ('expression -> LBRACE key_value_pairs RBRACE','expression',3,'p_hash','AnalizadorSintactico.py',64),
  ('expression -> LBRACE RBRACE','expression',2,'p_empty_hash','AnalizadorSintactico.py',69),
  ('key_value_pairs -> key_value','key_value_pairs',1,'p_key_value_pairs','AnalizadorSintactico.py',74),
  ('key_value_pairs -> key_value_pairs COMMA key_value','key_value_pairs',3,'p_key_value_pairs','AnalizadorSintactico.py',75),
  ('key_value -> expression HASH_ROCKET expression','key_value',3,'p_key_value','AnalizadorSintactico.py',82),
  ('expression -> IDENTIFIER','expression',1,'p_expression_var','AnalizadorSintactico.py',87),
  ('expression -> GLOBAL_VAR','expression',1,'p_expression_var','AnalizadorSintactico.py',88),
  ('expression -> INSTANCE_VAR','expression',1,'p_expression_var','AnalizadorSintactico.py',89),
  ('statement -> statement statement','statement',2,'p_statement_block','AnalizadorSintactico.py',93),
  ('statement -> IF expression statement END','statement',4,'p_if_statement','AnalizadorSintactico.py',97),
  ('statement -> IF expression statement ELSE statement END','statement',6,'p_if_statement','AnalizadorSintactico.py',98),
  ('statement -> IF expression statement ELSIF expression statement END','statement',7,'p_if_statement','AnalizadorSintactico.py',99),
  ('statement -> IF expression statement ELSIF expression statement ELSE statement END','statement',9,'p_if_statement','AnalizadorSintactico.py',100),
  ('expression -> expression GREATER expression','expression',3,'p_expression_comparison','AnalizadorSintactico.py',116),
  ('expression -> expression LESS expression','expression',3,'p_expression_comparison','AnalizadorSintactico.py',117),
  ('expression -> expression GREATER_EQUAL expression','expression',3,'p_expression_comparison','AnalizadorSintactico.py',118),
  ('expression -> expression LESS_EQUAL expression','expression',3,'p_expression_comparison','AnalizadorSintactico.py',119),
  ('expression -> expression EQUALS expression','expression',3,'p_expression_comparison','AnalizadorSintactico.py',120),
  ('expression -> expression NOT_EQUALS expression','expression',3,'p_expression_comparison','AnalizadorSintactico.py',121),
  ('statement -> DEF IDENTIFIER statement END','statement',4,'p_method_without_params_declaration','AnalizadorSintactico.py',135),
  ('statement -> IDENTIFIER','statement',1,'p_method_call_without_params','AnalizadorSintactico.py',141),
  ('statement -> INSTANCE_VAR EQUALS INTEGER','statement',3,'p_instance_var','AnalizadorSintactico.py',156),
  ('statement -> INSTANCE_VAR EQUALS FLOAT','statement',3,'p_instance_var','AnalizadorSintactico.py',157),
  ('expression -> SETNEW LPAREN elements RPAREN','expression',4,'p_set','AnalizadorSintactico.py',161),
  ('statement -> WHILE expression statement END','statement',4,'p_while_statement','AnalizadorSintactico.py',166),
  ('statement -> IDENTIFIER EQUALS GETS','statement',3,'p_gets_statement','AnalizadorSintactico.py',170),
  ('expression -> term','expression',1,'p_expression_term','AnalizadorSintactico.py',176),
  ('term -> term DIVIDE factor','term',3,'p_term_div','AnalizadorSintactico.py',180),
  ('term -> term TIMES factor','term',3,'p_term_times','AnalizadorSintactico.py',184),
  ('expression -> expression PLUS term','expression',3,'p_expression_plus','AnalizadorSintactico.py',188),
  ('expression -> expression MINUS term','expression',3,'p_expression_minus','AnalizadorSintactico.py',192),
  ('term -> factor','term',1,'p_term_factor','AnalizadorSintactico.py',196),
  ('factor -> INTEGER','factor',1,'p_factor_num','AnalizadorSintactico.py',200),
  ('factor -> FLOAT','factor',1,'p_factor_num','AnalizadorSintactico.py',201),
  ('factor -> LPAREN expression RPAREN','factor',3,'p_factor_expr','AnalizadorSintactico.py',205),
  ('expression -> LBRACKET elements RBRACKET','expression',3,'p_array','AnalizadorSintactico.py',210),
  ('elements -> expression','elements',1,'p_elements','AnalizadorSintactico.py',215),
  ('elements -> elements COMMA expression','elements',3,'p_elements','AnalizadorSintactico.py',216),
  ('statement -> DEF IDENTIFIER LPAREN params RPAREN statement END','statement',7,'p_method_with_return_declaration','AnalizadorSintactico.py',224),
  ('statement -> IDENTIFIER LPAREN params RPAREN','statement',4,'p_method_call_with_return','AnalizadorSintactico.py',229),
  ('statement -> FOR IDENTIFIER IN range statement','statement',5,'p_for_statement','AnalizadorSintactico.py',234),
  ('range -> INTEGER DOUBLE_DOT INTEGER','range',3,'p_range','AnalizadorSintactico.py',239),
  ('range -> FLOAT DOUBLE_DOT FLOAT','range',3,'p_range','AnalizadorSintactico.py',240),
  ('statement -> PUTS expression','statement',2,'p_puts_statement','AnalizadorSintactico.py',245),
>>>>>>> c992c513a290307da9662b5f9ad72bf5716edc3b
]
