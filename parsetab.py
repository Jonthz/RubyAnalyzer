
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'nonassocLESSGREATERLESS_EQUALGREATER_EQUALEQUALSNOT_EQUALSleftPLUSMINUSleftTIMESDIVIDErightPOWERrightHASH_ROCKETAND ASSIGN BEGIN BITWISE_AND BREAK CASE CLASS CLASS_VAR COMMA COMMENT CONSTANT DEF DIVIDE DIVIDE_ASSIGN DO DOT DOUBLE_DOT ELSE ELSIF END ENSURE EQUALS FALSE FLOAT FLOOR_DIVIDE FOR GETS GLOBAL_VAR GREATER GREATER_EQUAL HASH_ROCKET IDENTIFIER IF IN INSTANCE_VAR INTEGER LAMBDA LBRACE LBRACKET LESS LESS_EQUAL LPAREN MINUS MINUS_ASSIGN MOD MODULE MOD_ASSIGN NEW NEXT NIL NOT NOT_EQUALS OR PIPE PLUS PLUS_ASSIGN POWER POWER_ASSIGN PROC PUTS QUESTION_MARK RAISE RANGE RBRACE RBRACKET REDO REQUIRE RESCUE RETRY RETURN RPAREN SELF SEMICOLON SETNEW SPACESHIP STRING SUPER TIMES TIMES_ASSIGN TRUE UNTIL WHEN WHILE YIELDprogram : statements END\n               | statementsparams : IDENTIFIER\n              | params COMMA IDENTIFIERstatements : statement\n                  | statements statementstatement :  expressionstatement : IDENTIFIER ASSIGN STRING\n                | IDENTIFIER ASSIGN  expressionstatement : GLOBAL_VAR ASSIGN STRING\n                 | GLOBAL_VAR ASSIGN expressionfactor : factor POWER factorfactor : STRINGexpression : LBRACE key_value_pairs RBRACEexpression : LBRACE RBRACEkey_value_pairs : key_value\n                       | key_value_pairs COMMA key_valuekey_value : expression HASH_ROCKET expressionexpression : IDENTIFIER\n                  | GLOBAL_VAR\n                  | INSTANCE_VARstatement : statement statementstatement : IF expression statement END\n                 | IF expression statement ELSE statement END\n                 | IF expression statement ELSIF expression statement END\n                 | IF expression statement ELSIF expression statement ELSE statement ENDexpression : expression GREATER expression\n                  | expression LESS expression\n                  | expression GREATER_EQUAL expression\n                  | expression LESS_EQUAL expression\n                  | expression EQUALS expression\n                  | expression NOT_EQUALS expressionstatement : DEF IDENTIFIER statement ENDstatement : IDENTIFIERstatement : CLASS IDENTIFIER statement END\n                 | CLASS IDENTIFIER ENDexpression : IDENTIFIER DOT NEW\n                  | IDENTIFIER DOT NEW LPAREN RPARENstatement : INSTANCE_VAR ASSIGN expression\n                | INSTANCE_VAR ASSIGN STRINGstatement : SETNEW LPAREN optional_elements RPARENoptional_elements : elements\n                         | emptyempty :statement : WHILE expression statement ENDstatement : IDENTIFIER ASSIGN GETSstatement : DEF IDENTIFIER LPAREN params RPAREN statement ENDstatement : IDENTIFIER LPAREN params RPARENexpression : termterm : factor DIVIDE factorterm : factor TIMES factorexpression : factor PLUS factorexpression : factor MINUS factorfactor : INTEGER\n              | FLOAT factor : LPAREN expression RPARENexpression : LBRACKET elements RBRACKETelements : expression\n                | elements COMMA expressionstatement : FOR IDENTIFIER IN range statementrange : INTEGER DOUBLE_DOT INTEGER\n             | FLOAT DOUBLE_DOT FLOATstatement : PUTS statement\n                | PUTS STRING\n                | PUTS factormethod : DEF IDENTIFIER LPAREN params RPAREN return_statement ENDreturn_statement : RETURN statement\n                        | RETURN expression'
    
_lr_action_items = {'IDENTIFIER':([0,2,3,4,5,6,7,8,9,10,11,13,14,15,16,18,19,20,21,22,24,25,26,27,28,29,30,31,32,33,35,36,37,38,39,40,41,42,43,45,47,48,49,56,61,62,63,64,65,66,67,68,69,72,73,74,75,76,77,78,79,80,81,85,86,88,89,90,91,92,93,94,95,96,97,98,99,101,102,103,104,107,108,109,110,117,118,119,120,121,124,125,126,127,128,129,130,131,132,133,],[5,5,5,-7,-19,-13,-20,37,40,41,-21,37,37,46,5,37,-49,37,-54,-55,5,5,37,37,37,37,37,37,37,70,37,5,-19,-20,-21,5,5,37,37,5,5,-13,-65,-15,-27,-28,-29,-30,-31,-32,-8,-9,-46,-37,-10,-11,5,5,105,5,-36,-39,-40,-56,5,-52,-53,-50,-51,-12,-14,37,37,-57,37,-48,116,-23,5,37,-33,-35,-41,-45,5,-38,5,5,5,5,-24,5,5,-61,-62,-25,5,-47,5,-26,]),'GLOBAL_VAR':([0,2,3,4,5,6,7,8,11,13,14,16,18,19,20,21,22,24,25,26,27,28,29,30,31,32,35,36,37,38,39,40,41,42,43,45,47,48,49,56,61,62,63,64,65,66,67,68,69,72,73,74,75,76,77,78,79,80,81,85,86,88,89,90,91,92,93,94,95,96,97,98,101,102,103,104,107,108,109,110,117,118,119,120,121,124,125,126,127,128,129,130,131,132,133,],[7,7,7,-7,-19,-13,-20,38,-21,38,38,7,38,-49,38,-54,-55,7,7,38,38,38,38,38,38,38,38,7,-19,-20,-21,7,7,38,38,7,7,-13,-65,-15,-27,-28,-29,-30,-31,-32,-8,-9,-46,-37,-10,-11,7,7,38,7,-36,-39,-40,-56,7,-52,-53,-50,-51,-12,-14,38,38,-57,38,-48,-23,7,38,-33,-35,-41,-45,7,-38,7,7,7,7,-24,7,7,-61,-62,-25,7,-47,7,-26,]),'IF':([0,2,3,4,5,6,7,11,16,19,21,22,24,25,36,37,38,39,40,41,45,47,48,49,56,61,62,63,64,65,66,67,68,69,72,73,74,75,76,78,79,80,81,85,86,88,89,90,91,92,93,96,98,101,102,104,107,108,109,110,117,118,119,120,121,124,125,126,127,128,129,130,131,132,133,],[8,8,8,-7,-19,-13,-20,-21,8,-49,-54,-55,8,8,8,-19,-20,-21,8,8,8,8,-13,-65,-15,-27,-28,-29,-30,-31,-32,-8,-9,-46,-37,-10,-11,8,8,8,-36,-39,-40,-56,8,-52,-53,-50,-51,-12,-14,-57,-48,-23,8,-33,-35,-41,-45,8,-38,8,8,8,8,-24,8,8,-61,-62,-25,8,-47,8,-26,]),'DEF':([0,2,3,4,5,6,7,11,16,19,21,22,24,25,36,37,38,39,40,41,45,47,48,49,56,61,62,63,64,65,66,67,68,69,72,73,74,75,76,78,79,80,81,85,86,88,89,90,91,92,93,96,98,101,102,104,107,108,109,110,117,118,119,120,121,124,125,126,127,128,129,130,131,132,133,],[9,9,9,-7,-19,-13,-20,-21,9,-49,-54,-55,9,9,9,-19,-20,-21,9,9,9,9,-13,-65,-15,-27,-28,-29,-30,-31,-32,-8,-9,-46,-37,-10,-11,9,9,9,-36,-39,-40,-56,9,-52,-53,-50,-51,-12,-14,-57,-48,-23,9,-33,-35,-41,-45,9,-38,9,9,9,9,-24,9,9,-61,-62,-25,9,-47,9,-26,]),'CLASS':([0,2,3,4,5,6,7,11,16,19,21,22,24,25,36,37,38,39,40,41,45,47,48,49,56,61,62,63,64,65,66,67,68,69,72,73,74,75,76,78,79,80,81,85,86,88,89,90,91,92,93,96,98,101,102,104,107,108,109,110,117,118,119,120,121,124,125,126,127,128,129,130,131,132,133,],[10,10,10,-7,-19,-13,-20,-21,10,-49,-54,-55,10,10,10,-19,-20,-21,10,10,10,10,-13,-65,-15,-27,-28,-29,-30,-31,-32,-8,-9,-46,-37,-10,-11,10,10,10,-36,-39,-40,-56,10,-52,-53,-50,-51,-12,-14,-57,-48,-23,10,-33,-35,-41,-45,10,-38,10,10,10,10,-24,10,10,-61,-62,-25,10,-47,10,-26,]),'INSTANCE_VAR':([0,2,3,4,5,6,7,8,11,13,14,16,18,19,20,21,22,24,25,26,27,28,29,30,31,32,35,36,37,38,39,40,41,42,43,45,47,48,49,56,61,62,63,64,65,66,67,68,69,72,73,74,75,76,77,78,79,80,81,85,86,88,89,90,91,92,93,94,95,96,97,98,101,102,103,104,107,108,109,110,117,118,119,120,121,124,125,126,127,128,129,130,131,132,133,],[11,11,11,-7,-19,-13,-20,39,-21,39,39,11,39,-49,39,-54,-55,11,11,39,39,39,39,39,39,39,39,11,-19,-20,-21,11,11,39,39,11,11,-13,-65,-15,-27,-28,-29,-30,-31,-32,-8,-9,-46,-37,-10,-11,11,11,39,11,-36,-39,-40,-56,11,-52,-53,-50,-51,-12,-14,39,39,-57,39,-48,-23,11,39,-33,-35,-41,-45,11,-38,11,11,11,11,-24,11,11,-61,-62,-25,11,-47,11,-26,]),'SETNEW':([0,2,3,4,5,6,7,11,16,19,21,22,24,25,36,37,38,39,40,41,45,47,48,49,56,61,62,63,64,65,66,67,68,69,72,73,74,75,76,78,79,80,81,85,86,88,89,90,91,92,93,96,98,101,102,104,107,108,109,110,117,118,119,120,121,124,125,126,127,128,129,130,131,132,133,],[12,12,12,-7,-19,-13,-20,-21,12,-49,-54,-55,12,12,12,-19,-20,-21,12,12,12,12,-13,-65,-15,-27,-28,-29,-30,-31,-32,-8,-9,-46,-37,-10,-11,12,12,12,-36,-39,-40,-56,12,-52,-53,-50,-51,-12,-14,-57,-48,-23,12,-33,-35,-41,-45,12,-38,12,12,12,12,-24,12,12,-61,-62,-25,12,-47,12,-26,]),'WHILE':([0,2,3,4,5,6,7,11,16,19,21,22,24,25,36,37,38,39,40,41,45,47,48,49,56,61,62,63,64,65,66,67,68,69,72,73,74,75,76,78,79,80,81,85,86,88,89,90,91,92,93,96,98,101,102,104,107,108,109,110,117,118,119,120,121,124,125,126,127,128,129,130,131,132,133,],[14,14,14,-7,-19,-13,-20,-21,14,-49,-54,-55,14,14,14,-19,-20,-21,14,14,14,14,-13,-65,-15,-27,-28,-29,-30,-31,-32,-8,-9,-46,-37,-10,-11,14,14,14,-36,-39,-40,-56,14,-52,-53,-50,-51,-12,-14,-57,-48,-23,14,-33,-35,-41,-45,14,-38,14,14,14,14,-24,14,14,-61,-62,-25,14,-47,14,-26,]),'FOR':([0,2,3,4,5,6,7,11,16,19,21,22,24,25,36,37,38,39,40,41,45,47,48,49,56,61,62,63,64,65,66,67,68,69,72,73,74,75,76,78,79,80,81,85,86,88,89,90,91,92,93,96,98,101,102,104,107,108,109,110,117,118,119,120,121,124,125,126,127,128,129,130,131,132,133,],[15,15,15,-7,-19,-13,-20,-21,15,-49,-54,-55,15,15,15,-19,-20,-21,15,15,15,15,-13,-65,-15,-27,-28,-29,-30,-31,-32,-8,-9,-46,-37,-10,-11,15,15,15,-36,-39,-40,-56,15,-52,-53,-50,-51,-12,-14,-57,-48,-23,15,-33,-35,-41,-45,15,-38,15,15,15,15,-24,15,15,-61,-62,-25,15,-47,15,-26,]),'PUTS':([0,2,3,4,5,6,7,11,16,19,21,22,24,25,36,37,38,39,40,41,45,47,48,49,56,61,62,63,64,65,66,67,68,69,72,73,74,75,76,78,79,80,81,85,86,88,89,90,91,92,93,96,98,101,102,104,107,108,109,110,117,118,119,120,121,124,125,126,127,128,129,130,131,132,133,],[16,16,16,-7,-19,-13,-20,-21,16,-49,-54,-55,16,16,16,-19,-20,-21,16,16,16,16,-13,-65,-15,-27,-28,-29,-30,-31,-32,-8,-9,-46,-37,-10,-11,16,16,16,-36,-39,-40,-56,16,-52,-53,-50,-51,-12,-14,-57,-48,-23,16,-33,-35,-41,-45,16,-38,16,16,16,16,-24,16,16,-61,-62,-25,16,-47,16,-26,]),'LBRACE':([0,2,3,4,5,6,7,8,11,13,14,16,18,19,20,21,22,24,25,26,27,28,29,30,31,32,35,36,37,38,39,40,41,42,43,45,47,48,49,56,61,62,63,64,65,66,67,68,69,72,73,74,75,76,77,78,79,80,81,85,86,88,89,90,91,92,93,94,95,96,97,98,101,102,103,104,107,108,109,110,117,118,119,120,121,124,125,126,127,128,129,130,131,132,133,],[18,18,18,-7,-19,-13,-20,18,-21,18,18,18,18,-49,18,-54,-55,18,18,18,18,18,18,18,18,18,18,18,-19,-20,-21,18,18,18,18,18,18,-13,-65,-15,-27,-28,-29,-30,-31,-32,-8,-9,-46,-37,-10,-11,18,18,18,18,-36,-39,-40,-56,18,-52,-53,-50,-51,-12,-14,18,18,-57,18,-48,-23,18,18,-33,-35,-41,-45,18,-38,18,18,18,18,-24,18,18,-61,-62,-25,18,-47,18,-26,]),'LBRACKET':([0,2,3,4,5,6,7,8,11,13,14,16,18,19,20,21,22,24,25,26,27,28,29,30,31,32,35,36,37,38,39,40,41,42,43,45,47,48,49,56,61,62,63,64,65,66,67,68,69,72,73,74,75,76,77,78,79,80,81,85,86,88,89,90,91,92,93,94,95,96,97,98,101,102,103,104,107,108,109,110,117,118,119,120,121,124,125,126,127,128,129,130,131,132,133,],[20,20,20,-7,-19,-13,-20,20,-21,20,20,20,20,-49,20,-54,-55,20,20,20,20,20,20,20,20,20,20,20,-19,-20,-21,20,20,20,20,20,20,-13,-65,-15,-27,-28,-29,-30,-31,-32,-8,-9,-46,-37,-10,-11,20,20,20,20,-36,-39,-40,-56,20,-52,-53,-50,-51,-12,-14,20,20,-57,20,-48,-23,20,20,-33,-35,-41,-45,20,-38,20,20,20,20,-24,20,20,-61,-62,-25,20,-47,20,-26,]),'STRING':([0,2,3,4,5,6,7,8,11,13,14,16,18,19,20,21,22,24,25,26,27,28,29,30,31,32,35,36,37,38,39,40,41,42,43,45,47,48,49,50,51,52,53,54,56,61,62,63,64,65,66,67,68,69,72,73,74,75,76,77,78,79,80,81,85,86,88,89,90,91,92,93,94,95,96,97,98,101,102,103,104,107,108,109,110,117,118,119,120,121,124,125,126,127,128,129,130,131,132,133,],[6,6,6,-7,-19,-13,-20,6,-21,6,6,48,6,-49,6,-54,-55,6,6,6,6,6,6,6,6,67,73,6,-19,-20,-21,6,6,81,6,6,6,-13,-65,6,6,6,6,6,-15,-27,-28,-29,-30,-31,-32,-8,-9,-46,-37,-10,-11,6,6,6,6,-36,-39,-40,-56,6,-52,-53,-50,-51,-12,-14,6,6,-57,6,-48,-23,6,6,-33,-35,-41,-45,6,-38,6,6,6,6,-24,6,6,-61,-62,-25,6,-47,6,-26,]),'INTEGER':([0,2,3,4,5,6,7,8,11,13,14,16,18,19,20,21,22,24,25,26,27,28,29,30,31,32,35,36,37,38,39,40,41,42,43,45,47,48,49,50,51,52,53,54,56,61,62,63,64,65,66,67,68,69,72,73,74,75,76,77,78,79,80,81,85,86,87,88,89,90,91,92,93,94,95,96,97,98,101,102,103,104,107,108,109,110,117,118,119,120,121,122,124,125,126,127,128,129,130,131,132,133,],[21,21,21,-7,-19,-13,-20,21,-21,21,21,21,21,-49,21,-54,-55,21,21,21,21,21,21,21,21,21,21,21,-19,-20,-21,21,21,21,21,21,21,-13,-65,21,21,21,21,21,-15,-27,-28,-29,-30,-31,-32,-8,-9,-46,-37,-10,-11,21,21,21,21,-36,-39,-40,-56,21,111,-52,-53,-50,-51,-12,-14,21,21,-57,21,-48,-23,21,21,-33,-35,-41,-45,21,-38,21,21,21,21,127,-24,21,21,-61,-62,-25,21,-47,21,-26,]),'FLOAT':([0,2,3,4,5,6,7,8,11,13,14,16,18,19,20,21,22,24,25,26,27,28,29,30,31,32,35,36,37,38,39,40,41,42,43,45,47,48,49,50,51,52,53,54,56,61,62,63,64,65,66,67,68,69,72,73,74,75,76,77,78,79,80,81,85,86,87,88,89,90,91,92,93,94,95,96,97,98,101,102,103,104,107,108,109,110,117,118,119,120,121,123,124,125,126,127,128,129,130,131,132,133,],[22,22,22,-7,-19,-13,-20,22,-21,22,22,22,22,-49,22,-54,-55,22,22,22,22,22,22,22,22,22,22,22,-19,-20,-21,22,22,22,22,22,22,-13,-65,22,22,22,22,22,-15,-27,-28,-29,-30,-31,-32,-8,-9,-46,-37,-10,-11,22,22,22,22,-36,-39,-40,-56,22,112,-52,-53,-50,-51,-12,-14,22,22,-57,22,-48,-23,22,22,-33,-35,-41,-45,22,-38,22,22,22,22,128,-24,22,22,-61,-62,-25,22,-47,22,-26,]),'LPAREN':([0,2,3,4,5,6,7,8,11,12,13,14,16,18,19,20,21,22,24,25,26,27,28,29,30,31,32,35,36,37,38,39,40,41,42,43,45,47,48,49,50,51,52,53,54,56,61,62,63,64,65,66,67,68,69,72,73,74,75,76,77,78,79,80,81,85,86,88,89,90,91,92,93,94,95,96,97,98,101,102,103,104,107,108,109,110,117,118,119,120,121,124,125,126,127,128,129,130,131,132,133,],[13,13,13,-7,33,-13,-20,13,-21,43,13,13,13,13,-49,13,-54,-55,13,13,13,13,13,13,13,13,13,13,13,-19,-20,-21,77,13,13,13,13,13,-13,-65,13,13,13,13,13,-15,-27,-28,-29,-30,-31,-32,-8,-9,-46,100,-10,-11,13,13,13,13,-36,-39,-40,-56,13,-52,-53,-50,-51,-12,-14,13,13,-57,13,-48,-23,13,13,-33,-35,-41,-45,13,-38,13,13,13,13,-24,13,13,-61,-62,-25,13,-47,13,-26,]),'$end':([1,2,3,4,5,6,7,11,19,21,22,23,24,25,37,38,39,47,48,49,56,61,62,63,64,65,66,67,68,69,72,73,74,79,80,81,85,88,89,90,91,92,93,96,98,101,104,107,108,109,117,121,124,129,131,133,],[0,-2,-5,-7,-19,-13,-20,-21,-49,-54,-55,-1,-6,-22,-19,-20,-21,-63,-13,-65,-15,-27,-28,-29,-30,-31,-32,-8,-9,-46,-37,-10,-11,-36,-39,-40,-56,-52,-53,-50,-51,-12,-14,-57,-48,-23,-33,-35,-41,-45,-38,-60,-24,-25,-47,-26,]),'END':([2,3,4,5,6,7,11,19,21,22,24,25,37,38,39,41,47,48,49,56,61,62,63,64,65,66,67,68,69,72,73,74,75,76,78,79,80,81,85,86,88,89,90,91,92,93,96,98,101,104,107,108,109,117,118,121,124,125,126,129,131,132,133,],[23,-5,-7,-19,-13,-20,-21,-49,-54,-55,-6,-22,-19,-20,-21,79,-63,-13,-65,-15,-27,-28,-29,-30,-31,-32,-8,-9,-46,-37,-10,-11,101,104,107,-36,-39,-40,-56,109,-52,-53,-50,-51,-12,-14,-57,-48,-23,-33,-35,-41,-45,-38,124,-60,-24,129,131,-25,-47,133,-26,]),'ELSE':([4,5,6,7,11,19,21,22,25,37,38,39,47,48,49,56,61,62,63,64,65,66,67,68,69,72,73,74,75,79,80,81,85,88,89,90,91,92,93,96,98,101,104,107,108,109,117,121,124,125,129,131,133,],[-7,-19,-13,-20,-21,-49,-54,-55,-22,-19,-20,-21,-63,-13,-65,-15,-27,-28,-29,-30,-31,-32,-8,-9,-46,-37,-10,-11,102,-36,-39,-40,-56,-52,-53,-50,-51,-12,-14,-57,-48,-23,-33,-35,-41,-45,-38,-60,-24,130,-25,-47,-26,]),'ELSIF':([4,5,6,7,11,19,21,22,25,37,38,39,47,48,49,56,61,62,63,64,65,66,67,68,69,72,73,74,75,79,80,81,85,88,89,90,91,92,93,96,98,101,104,107,108,109,117,121,124,129,131,133,],[-7,-19,-13,-20,-21,-49,-54,-55,-22,-19,-20,-21,-63,-13,-65,-15,-27,-28,-29,-30,-31,-32,-8,-9,-46,-37,-10,-11,103,-36,-39,-40,-56,-52,-53,-50,-51,-12,-14,-57,-48,-23,-33,-35,-41,-45,-38,-60,-24,-25,-47,-26,]),'GREATER':([4,5,6,7,11,19,21,22,36,37,38,39,44,45,56,58,60,61,62,63,64,65,66,68,72,74,80,85,88,89,90,91,92,93,96,105,114,115,117,119,],[26,-19,-13,-20,-21,-49,-54,-55,26,-19,-20,-21,26,26,-15,26,26,None,None,None,None,None,None,26,-37,26,26,-56,-52,-53,-50,-51,-12,-14,-57,-19,26,26,-38,26,]),'LESS':([4,5,6,7,11,19,21,22,36,37,38,39,44,45,56,58,60,61,62,63,64,65,66,68,72,74,80,85,88,89,90,91,92,93,96,105,114,115,117,119,],[27,-19,-13,-20,-21,-49,-54,-55,27,-19,-20,-21,27,27,-15,27,27,None,None,None,None,None,None,27,-37,27,27,-56,-52,-53,-50,-51,-12,-14,-57,-19,27,27,-38,27,]),'GREATER_EQUAL':([4,5,6,7,11,19,21,22,36,37,38,39,44,45,56,58,60,61,62,63,64,65,66,68,72,74,80,85,88,89,90,91,92,93,96,105,114,115,117,119,],[28,-19,-13,-20,-21,-49,-54,-55,28,-19,-20,-21,28,28,-15,28,28,None,None,None,None,None,None,28,-37,28,28,-56,-52,-53,-50,-51,-12,-14,-57,-19,28,28,-38,28,]),'LESS_EQUAL':([4,5,6,7,11,19,21,22,36,37,38,39,44,45,56,58,60,61,62,63,64,65,66,68,72,74,80,85,88,89,90,91,92,93,96,105,114,115,117,119,],[29,-19,-13,-20,-21,-49,-54,-55,29,-19,-20,-21,29,29,-15,29,29,None,None,None,None,None,None,29,-37,29,29,-56,-52,-53,-50,-51,-12,-14,-57,-19,29,29,-38,29,]),'EQUALS':([4,5,6,7,11,19,21,22,36,37,38,39,44,45,56,58,60,61,62,63,64,65,66,68,72,74,80,85,88,89,90,91,92,93,96,105,114,115,117,119,],[30,-19,-13,-20,-21,-49,-54,-55,30,-19,-20,-21,30,30,-15,30,30,None,None,None,None,None,None,30,-37,30,30,-56,-52,-53,-50,-51,-12,-14,-57,-19,30,30,-38,30,]),'NOT_EQUALS':([4,5,6,7,11,19,21,22,36,37,38,39,44,45,56,58,60,61,62,63,64,65,66,68,72,74,80,85,88,89,90,91,92,93,96,105,114,115,117,119,],[31,-19,-13,-20,-21,-49,-54,-55,31,-19,-20,-21,31,31,-15,31,31,None,None,None,None,None,None,31,-37,31,31,-56,-52,-53,-50,-51,-12,-14,-57,-19,31,31,-38,31,]),'ASSIGN':([5,7,11,],[32,35,42,]),'DOT':([5,37,105,],[34,34,34,]),'PLUS':([6,17,21,22,48,49,67,73,81,85,92,],[-13,50,-54,-55,-13,50,-13,-13,-13,-56,-12,]),'MINUS':([6,17,21,22,48,49,67,73,81,85,92,],[-13,51,-54,-55,-13,51,-13,-13,-13,-56,-12,]),'DIVIDE':([6,17,21,22,48,49,67,73,81,85,92,],[-13,52,-54,-55,-13,52,-13,-13,-13,-56,-12,]),'TIMES':([6,17,21,22,48,49,67,73,81,85,92,],[-13,53,-54,-55,-13,53,-13,-13,-13,-56,-12,]),'POWER':([6,17,21,22,48,49,67,73,81,85,88,89,90,91,92,],[-13,54,-54,-55,-13,54,-13,-13,-13,-56,54,54,54,54,54,]),'RPAREN':([6,19,21,22,37,38,39,43,44,56,60,61,62,63,64,65,66,70,71,72,82,83,84,85,88,89,90,91,92,93,96,100,105,106,115,116,117,],[-13,-49,-54,-55,-19,-20,-21,-44,85,-15,-58,-27,-28,-29,-30,-31,-32,-3,98,-37,108,-42,-43,-56,-52,-53,-50,-51,-12,-14,-57,117,-3,120,-59,-4,-38,]),'HASH_ROCKET':([6,19,21,22,37,38,39,56,58,61,62,63,64,65,66,72,85,88,89,90,91,92,93,96,117,],[-13,-49,-54,-55,-19,-20,-21,-15,95,-27,-28,-29,-30,-31,-32,-37,-56,-52,-53,-50,-51,-12,-14,-57,-38,]),'RBRACKET':([6,19,21,22,37,38,39,56,59,60,61,62,63,64,65,66,72,85,88,89,90,91,92,93,96,115,117,],[-13,-49,-54,-55,-19,-20,-21,-15,96,-58,-27,-28,-29,-30,-31,-32,-37,-56,-52,-53,-50,-51,-12,-14,-57,-59,-38,]),'COMMA':([6,19,21,22,37,38,39,55,56,57,59,60,61,62,63,64,65,66,70,71,72,83,85,88,89,90,91,92,93,96,105,106,113,114,115,116,117,],[-13,-49,-54,-55,-19,-20,-21,94,-15,-16,97,-58,-27,-28,-29,-30,-31,-32,-3,99,-37,97,-56,-52,-53,-50,-51,-12,-14,-57,-3,99,-17,-18,-59,-4,-38,]),'RBRACE':([6,18,19,21,22,37,38,39,55,56,57,61,62,63,64,65,66,72,85,88,89,90,91,92,93,96,113,114,117,],[-13,56,-49,-54,-55,-19,-20,-21,93,-15,-16,-27,-28,-29,-30,-31,-32,-37,-56,-52,-53,-50,-51,-12,-14,-57,-17,-18,-38,]),'GETS':([32,],[69,]),'NEW':([34,],[72,]),'IN':([46,],[87,]),'DOUBLE_DOT':([111,112,],[122,123,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'statements':([0,],[2,]),'statement':([0,2,3,16,24,25,36,40,41,45,47,75,76,78,86,102,110,118,119,120,121,125,126,130,132,],[3,24,25,47,25,25,75,76,78,86,25,25,25,25,25,118,121,25,125,126,25,25,25,132,25,]),'expression':([0,2,3,8,13,14,16,18,20,24,25,26,27,28,29,30,31,32,35,36,40,41,42,43,45,47,75,76,77,78,86,94,95,97,102,103,110,118,119,120,121,125,126,130,132,],[4,4,4,36,44,45,4,58,60,4,4,61,62,63,64,65,66,68,74,4,4,4,80,60,4,4,4,4,44,4,4,58,114,115,4,119,4,4,4,4,4,4,4,4,4,]),'factor':([0,2,3,8,13,14,16,18,20,24,25,26,27,28,29,30,31,32,35,36,40,41,42,43,45,47,50,51,52,53,54,75,76,77,78,86,94,95,97,102,103,110,118,119,120,121,125,126,130,132,],[17,17,17,17,17,17,49,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,88,89,90,91,92,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,]),'term':([0,2,3,8,13,14,16,18,20,24,25,26,27,28,29,30,31,32,35,36,40,41,42,43,45,47,75,76,77,78,86,94,95,97,102,103,110,118,119,120,121,125,126,130,132,],[19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,]),'key_value_pairs':([18,],[55,]),'key_value':([18,94,],[57,113,]),'elements':([20,43,],[59,83,]),'params':([33,77,],[71,106,]),'optional_elements':([43,],[82,]),'empty':([43,],[84,]),'range':([87,],[110,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statements END','program',2,'p_program','AnalizadorSintactico.py',16),
  ('program -> statements','program',1,'p_program','AnalizadorSintactico.py',17),
  ('params -> IDENTIFIER','params',1,'p_params','AnalizadorSintactico.py',22),
  ('params -> params COMMA IDENTIFIER','params',3,'p_params','AnalizadorSintactico.py',23),
  ('statements -> statement','statements',1,'p_statements','AnalizadorSintactico.py',30),
  ('statements -> statements statement','statements',2,'p_statements','AnalizadorSintactico.py',31),
  ('statement -> expression','statement',1,'p_statement','AnalizadorSintactico.py',39),
  ('statement -> IDENTIFIER ASSIGN STRING','statement',3,'p_local_var','AnalizadorSintactico.py',43),
  ('statement -> IDENTIFIER ASSIGN expression','statement',3,'p_local_var','AnalizadorSintactico.py',44),
  ('statement -> GLOBAL_VAR ASSIGN STRING','statement',3,'p_global_var','AnalizadorSintactico.py',49),
  ('statement -> GLOBAL_VAR ASSIGN expression','statement',3,'p_global_var','AnalizadorSintactico.py',50),
  ('factor -> factor POWER factor','factor',3,'p_factor_power','AnalizadorSintactico.py',54),
  ('factor -> STRING','factor',1,'p_factor_string','AnalizadorSintactico.py',58),
  ('expression -> LBRACE key_value_pairs RBRACE','expression',3,'p_hash','AnalizadorSintactico.py',62),
  ('expression -> LBRACE RBRACE','expression',2,'p_empty_hash','AnalizadorSintactico.py',67),
  ('key_value_pairs -> key_value','key_value_pairs',1,'p_key_value_pairs','AnalizadorSintactico.py',72),
  ('key_value_pairs -> key_value_pairs COMMA key_value','key_value_pairs',3,'p_key_value_pairs','AnalizadorSintactico.py',73),
  ('key_value -> expression HASH_ROCKET expression','key_value',3,'p_key_value','AnalizadorSintactico.py',80),
  ('expression -> IDENTIFIER','expression',1,'p_expression_var','AnalizadorSintactico.py',85),
  ('expression -> GLOBAL_VAR','expression',1,'p_expression_var','AnalizadorSintactico.py',86),
  ('expression -> INSTANCE_VAR','expression',1,'p_expression_var','AnalizadorSintactico.py',87),
  ('statement -> statement statement','statement',2,'p_statement_block','AnalizadorSintactico.py',91),
  ('statement -> IF expression statement END','statement',4,'p_if_statement','AnalizadorSintactico.py',95),
  ('statement -> IF expression statement ELSE statement END','statement',6,'p_if_statement','AnalizadorSintactico.py',96),
  ('statement -> IF expression statement ELSIF expression statement END','statement',7,'p_if_statement','AnalizadorSintactico.py',97),
  ('statement -> IF expression statement ELSIF expression statement ELSE statement END','statement',9,'p_if_statement','AnalizadorSintactico.py',98),
  ('expression -> expression GREATER expression','expression',3,'p_expression_comparison','AnalizadorSintactico.py',114),
  ('expression -> expression LESS expression','expression',3,'p_expression_comparison','AnalizadorSintactico.py',115),
  ('expression -> expression GREATER_EQUAL expression','expression',3,'p_expression_comparison','AnalizadorSintactico.py',116),
  ('expression -> expression LESS_EQUAL expression','expression',3,'p_expression_comparison','AnalizadorSintactico.py',117),
  ('expression -> expression EQUALS expression','expression',3,'p_expression_comparison','AnalizadorSintactico.py',118),
  ('expression -> expression NOT_EQUALS expression','expression',3,'p_expression_comparison','AnalizadorSintactico.py',119),
  ('statement -> DEF IDENTIFIER statement END','statement',4,'p_method_without_params_declaration','AnalizadorSintactico.py',133),
  ('statement -> IDENTIFIER','statement',1,'p_method_call_without_params','AnalizadorSintactico.py',139),
  ('statement -> CLASS IDENTIFIER statement END','statement',4,'p_class_declaration','AnalizadorSintactico.py',149),
  ('statement -> CLASS IDENTIFIER END','statement',3,'p_class_declaration','AnalizadorSintactico.py',150),
  ('expression -> IDENTIFIER DOT NEW','expression',3,'p_object_instantiation','AnalizadorSintactico.py',160),
  ('expression -> IDENTIFIER DOT NEW LPAREN RPAREN','expression',5,'p_object_instantiation','AnalizadorSintactico.py',161),
  ('statement -> INSTANCE_VAR ASSIGN expression','statement',3,'p_instance_var','AnalizadorSintactico.py',172),
  ('statement -> INSTANCE_VAR ASSIGN STRING','statement',3,'p_instance_var','AnalizadorSintactico.py',173),
  ('statement -> SETNEW LPAREN optional_elements RPAREN','statement',4,'p_set','AnalizadorSintactico.py',177),
  ('optional_elements -> elements','optional_elements',1,'p_optional_elements','AnalizadorSintactico.py',182),
  ('optional_elements -> empty','optional_elements',1,'p_optional_elements','AnalizadorSintactico.py',183),
  ('empty -> <empty>','empty',0,'p_empty','AnalizadorSintactico.py',187),
  ('statement -> WHILE expression statement END','statement',4,'p_while_statement','AnalizadorSintactico.py',191),
  ('statement -> IDENTIFIER ASSIGN GETS','statement',3,'p_gets_statement','AnalizadorSintactico.py',195),
  ('statement -> DEF IDENTIFIER LPAREN params RPAREN statement END','statement',7,'p_method_with_params_declaration','AnalizadorSintactico.py',199),
  ('statement -> IDENTIFIER LPAREN params RPAREN','statement',4,'p_method_call_with_params','AnalizadorSintactico.py',203),
  ('expression -> term','expression',1,'p_expression_term','AnalizadorSintactico.py',209),
  ('term -> factor DIVIDE factor','term',3,'p_term_div','AnalizadorSintactico.py',213),
  ('term -> factor TIMES factor','term',3,'p_term_times','AnalizadorSintactico.py',217),
  ('expression -> factor PLUS factor','expression',3,'p_expression_plus','AnalizadorSintactico.py',221),
  ('expression -> factor MINUS factor','expression',3,'p_expression_minus','AnalizadorSintactico.py',225),
  ('factor -> INTEGER','factor',1,'p_factor_num','AnalizadorSintactico.py',230),
  ('factor -> FLOAT','factor',1,'p_factor_num','AnalizadorSintactico.py',231),
  ('factor -> LPAREN expression RPAREN','factor',3,'p_factor_expr','AnalizadorSintactico.py',235),
  ('expression -> LBRACKET elements RBRACKET','expression',3,'p_array','AnalizadorSintactico.py',240),
  ('elements -> expression','elements',1,'p_elements','AnalizadorSintactico.py',245),
  ('elements -> elements COMMA expression','elements',3,'p_elements','AnalizadorSintactico.py',246),
  ('statement -> FOR IDENTIFIER IN range statement','statement',5,'p_for_statement','AnalizadorSintactico.py',254),
  ('range -> INTEGER DOUBLE_DOT INTEGER','range',3,'p_range','AnalizadorSintactico.py',259),
  ('range -> FLOAT DOUBLE_DOT FLOAT','range',3,'p_range','AnalizadorSintactico.py',260),
  ('statement -> PUTS statement','statement',2,'p_puts_statement','AnalizadorSintactico.py',265),
  ('statement -> PUTS STRING','statement',2,'p_puts_statement','AnalizadorSintactico.py',266),
  ('statement -> PUTS factor','statement',2,'p_puts_statement','AnalizadorSintactico.py',267),
  ('method -> DEF IDENTIFIER LPAREN params RPAREN return_statement END','method',7,'p_method_with_return','AnalizadorSintactico.py',271),
  ('return_statement -> RETURN statement','return_statement',2,'p_return_statement','AnalizadorSintactico.py',277),
  ('return_statement -> RETURN expression','return_statement',2,'p_return_statement','AnalizadorSintactico.py',278),
]
