
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'nonassocLESSGREATERLESS_EQUALGREATER_EQUALEQUALSNOT_EQUALSleftPLUSMINUSleftTIMESDIVIDErightPOWERrightTHENrightELSEELSIFnonassocHASH_ROCKETnonassocMETHOD_CALLAND ASSIGN BEGIN BITWISE_AND BREAK CASE CLASS CLASS_VAR COMMA COMMENT CONSTANT DEF DIVIDE DIVIDE_ASSIGN DO DOT DOUBLE_DOT ELSE ELSIF END ENSURE EQUALS FALSE FLOAT FLOOR_DIVIDE FOR GETS GLOBAL_VAR GREATER GREATER_EQUAL HASH_ROCKET IDENTIFIER IF IN INSTANCE_VAR INTEGER LAMBDA LBRACE LBRACKET LESS LESS_EQUAL LPAREN MINUS MINUS_ASSIGN MOD MODULE MOD_ASSIGN NEW NEXT NIL NOT NOT_EQUALS OR PIPE PLUS PLUS_ASSIGN POWER POWER_ASSIGN PROC PUTS QUESTION_MARK RAISE RANGE RBRACE RBRACKET REDO REQUIRE RESCUE RETRY RETURN RPAREN SELF SEMICOLON SETNEW SPACESHIP STRING SUPER THEN TIMES TIMES_ASSIGN TRUE UNTIL WHEN WHILE YIELDprogram : statements END\n               | statementsparams : IDENTIFIER\n              | params COMMA IDENTIFIERstatements : statement\n                  | statements statementstatement : expressionstatement : IDENTIFIER ASSIGN STRING\n                | IDENTIFIER ASSIGN expressionexpression : termterm : factorterm : term DIVIDE factorterm : term TIMES factorexpression : expression PLUS termexpression : expression MINUS termfactor : INTEGER\n              | FLOATfactor : LPAREN expression RPARENstatement : GLOBAL_VAR ASSIGN STRING\n                 | GLOBAL_VAR ASSIGN expressionfactor : factor POWER factorfactor : STRINGexpression : LBRACE key_value_pairs RBRACEexpression : LBRACE RBRACEkey_value_pairs : key_value\n                       | key_value_pairs COMMA key_valuekey_value : STRING HASH_ROCKET expression\n                 | STRING HASH_ROCKET STRING\n                 | STRING HASH_ROCKET INTEGER\n                 | STRING HASH_ROCKET FLOATfactor : IDENTIFIER\n              | GLOBAL_VAR\n              | INSTANCE_VAR\n              | CLASS_VARstatement : statement statementstatement : IF expression statement END\n                 | IF expression THEN statement END\n                 | IF expression statement ELSE statement END\n                 | IF expression THEN statement ELSE statement ENDexpression : expression GREATER expression\n                  | expression LESS expression\n                  | expression GREATER_EQUAL expression\n                  | expression LESS_EQUAL expression\n                  | expression EQUALS expression\n                  | expression NOT_EQUALS expressionstatement : DEF IDENTIFIER statement ENDstatement : IDENTIFIER %prec METHOD_CALLstatement : CLASS_VAR ASSIGN expression\n                 | CLASS_VAR ASSIGN STRINGstatement : CONSTANT ASSIGN expression\n                 | CONSTANT ASSIGN STRINGfactor : TRUE\n              | FALSEfactor : NILstatement : INSTANCE_VAR ASSIGN expression\n                | INSTANCE_VAR ASSIGN STRINGstatement : SETNEW LPAREN optional_elements RPARENoptional_elements : elements\n                         | emptyempty :statement : WHILE expression statement ENDstatement : IDENTIFIER ASSIGN GETSstatement : DEF IDENTIFIER LPAREN params RPAREN statement ENDstatement : IDENTIFIER LPAREN params RPARENexpression : LBRACKET elements RBRACKETexpression : LBRACKET RBRACKETelements : expression\n                | elements COMMA expressionstatement : FOR IDENTIFIER IN range statement ENDrange : INTEGER DOUBLE_DOT INTEGER\n             | FLOAT DOUBLE_DOT FLOATstatement : PUTS expression'
    
_lr_action_items = {'IDENTIFIER':([0,2,3,4,5,6,7,8,9,10,12,14,15,16,17,18,20,21,22,23,24,25,26,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,52,54,55,56,58,62,64,65,66,67,68,69,70,71,72,73,74,75,78,79,80,81,82,83,84,85,86,87,88,89,93,94,96,97,98,100,101,102,103,104,105,106,107,108,109,112,113,114,124,125,126,127,128,131,132,133,134,135,136,137,138,],[5,5,5,-7,-31,-22,-32,42,46,-34,-33,42,42,53,42,-10,42,-11,-16,-17,-52,-53,-54,5,5,42,42,42,42,42,42,42,42,42,76,42,5,-31,-32,-33,-34,5,42,42,42,42,5,-72,42,42,-24,-66,42,-14,-15,-40,-41,-42,-43,-44,-45,-8,-9,-62,-19,-20,5,5,5,110,-48,-22,-50,-22,-55,-22,-18,5,-12,-13,-23,42,-65,42,-21,-64,123,-36,5,5,-46,-57,-61,5,5,-37,5,5,5,-38,5,5,-69,-70,-71,-39,-63,]),'GLOBAL_VAR':([0,2,3,4,5,6,7,8,10,12,14,15,17,18,20,21,22,23,24,25,26,28,29,30,31,32,33,34,35,36,37,38,40,41,42,43,44,45,46,47,48,49,50,52,54,55,56,58,62,64,65,66,67,68,69,70,71,72,73,74,75,78,79,80,81,82,83,84,85,86,87,88,89,93,94,96,97,98,100,101,102,103,104,106,107,108,109,112,113,114,124,125,126,127,128,131,132,133,134,135,136,137,138,],[7,7,7,-7,-31,-22,-32,43,-34,-33,43,43,43,-10,43,-11,-16,-17,-52,-53,-54,7,7,43,43,43,43,43,43,43,43,43,43,7,-31,-32,-33,-34,7,43,43,43,43,7,-72,43,43,-24,-66,43,-14,-15,-40,-41,-42,-43,-44,-45,-8,-9,-62,-19,-20,7,7,7,43,-48,-22,-50,-22,-55,-22,-18,7,-12,-13,-23,43,-65,43,-21,-64,-36,7,7,-46,-57,-61,7,7,-37,7,7,7,-38,7,7,-69,-70,-71,-39,-63,]),'IF':([0,2,3,4,5,6,7,10,12,18,21,22,23,24,25,26,28,29,41,42,43,44,45,46,52,54,58,62,65,66,67,68,69,70,71,72,73,74,75,78,79,80,81,82,84,85,86,87,88,89,93,94,96,97,98,101,103,104,106,107,108,109,112,113,114,124,125,126,127,128,131,132,133,134,135,136,137,138,],[8,8,8,-7,-31,-22,-32,-34,-33,-10,-11,-16,-17,-52,-53,-54,8,8,8,-31,-32,-33,-34,8,8,-72,-24,-66,-14,-15,-40,-41,-42,-43,-44,-45,-8,-9,-62,-19,-20,8,8,8,-48,-22,-50,-22,-55,-22,-18,8,-12,-13,-23,-65,-21,-64,-36,8,8,-46,-57,-61,8,8,-37,8,8,8,-38,8,8,-69,-70,-71,-39,-63,]),'DEF':([0,2,3,4,5,6,7,10,12,18,21,22,23,24,25,26,28,29,41,42,43,44,45,46,52,54,58,62,65,66,67,68,69,70,71,72,73,74,75,78,79,80,81,82,84,85,86,87,88,89,93,94,96,97,98,101,103,104,106,107,108,109,112,113,114,124,125,126,127,128,131,132,133,134,135,136,137,138,],[9,9,9,-7,-31,-22,-32,-34,-33,-10,-11,-16,-17,-52,-53,-54,9,9,9,-31,-32,-33,-34,9,9,-72,-24,-66,-14,-15,-40,-41,-42,-43,-44,-45,-8,-9,-62,-19,-20,9,9,9,-48,-22,-50,-22,-55,-22,-18,9,-12,-13,-23,-65,-21,-64,-36,9,9,-46,-57,-61,9,9,-37,9,9,9,-38,9,9,-69,-70,-71,-39,-63,]),'CLASS_VAR':([0,2,3,4,5,6,7,8,10,12,14,15,17,18,20,21,22,23,24,25,26,28,29,30,31,32,33,34,35,36,37,38,40,41,42,43,44,45,46,47,48,49,50,52,54,55,56,58,62,64,65,66,67,68,69,70,71,72,73,74,75,78,79,80,81,82,83,84,85,86,87,88,89,93,94,96,97,98,100,101,102,103,104,106,107,108,109,112,113,114,124,125,126,127,128,131,132,133,134,135,136,137,138,],[10,10,10,-7,-31,-22,-32,45,-34,-33,45,45,45,-10,45,-11,-16,-17,-52,-53,-54,10,10,45,45,45,45,45,45,45,45,45,45,10,-31,-32,-33,-34,10,45,45,45,45,10,-72,45,45,-24,-66,45,-14,-15,-40,-41,-42,-43,-44,-45,-8,-9,-62,-19,-20,10,10,10,45,-48,-22,-50,-22,-55,-22,-18,10,-12,-13,-23,45,-65,45,-21,-64,-36,10,10,-46,-57,-61,10,10,-37,10,10,10,-38,10,10,-69,-70,-71,-39,-63,]),'CONSTANT':([0,2,3,4,5,6,7,10,12,18,21,22,23,24,25,26,28,29,41,42,43,44,45,46,52,54,58,62,65,66,67,68,69,70,71,72,73,74,75,78,79,80,81,82,84,85,86,87,88,89,93,94,96,97,98,101,103,104,106,107,108,109,112,113,114,124,125,126,127,128,131,132,133,134,135,136,137,138,],[11,11,11,-7,-31,-22,-32,-34,-33,-10,-11,-16,-17,-52,-53,-54,11,11,11,-31,-32,-33,-34,11,11,-72,-24,-66,-14,-15,-40,-41,-42,-43,-44,-45,-8,-9,-62,-19,-20,11,11,11,-48,-22,-50,-22,-55,-22,-18,11,-12,-13,-23,-65,-21,-64,-36,11,11,-46,-57,-61,11,11,-37,11,11,11,-38,11,11,-69,-70,-71,-39,-63,]),'INSTANCE_VAR':([0,2,3,4,5,6,7,8,10,12,14,15,17,18,20,21,22,23,24,25,26,28,29,30,31,32,33,34,35,36,37,38,40,41,42,43,44,45,46,47,48,49,50,52,54,55,56,58,62,64,65,66,67,68,69,70,71,72,73,74,75,78,79,80,81,82,83,84,85,86,87,88,89,93,94,96,97,98,100,101,102,103,104,106,107,108,109,112,113,114,124,125,126,127,128,131,132,133,134,135,136,137,138,],[12,12,12,-7,-31,-22,-32,44,-34,-33,44,44,44,-10,44,-11,-16,-17,-52,-53,-54,12,12,44,44,44,44,44,44,44,44,44,44,12,-31,-32,-33,-34,12,44,44,44,44,12,-72,44,44,-24,-66,44,-14,-15,-40,-41,-42,-43,-44,-45,-8,-9,-62,-19,-20,12,12,12,44,-48,-22,-50,-22,-55,-22,-18,12,-12,-13,-23,44,-65,44,-21,-64,-36,12,12,-46,-57,-61,12,12,-37,12,12,12,-38,12,12,-69,-70,-71,-39,-63,]),'SETNEW':([0,2,3,4,5,6,7,10,12,18,21,22,23,24,25,26,28,29,41,42,43,44,45,46,52,54,58,62,65,66,67,68,69,70,71,72,73,74,75,78,79,80,81,82,84,85,86,87,88,89,93,94,96,97,98,101,103,104,106,107,108,109,112,113,114,124,125,126,127,128,131,132,133,134,135,136,137,138,],[13,13,13,-7,-31,-22,-32,-34,-33,-10,-11,-16,-17,-52,-53,-54,13,13,13,-31,-32,-33,-34,13,13,-72,-24,-66,-14,-15,-40,-41,-42,-43,-44,-45,-8,-9,-62,-19,-20,13,13,13,-48,-22,-50,-22,-55,-22,-18,13,-12,-13,-23,-65,-21,-64,-36,13,13,-46,-57,-61,13,13,-37,13,13,13,-38,13,13,-69,-70,-71,-39,-63,]),'WHILE':([0,2,3,4,5,6,7,10,12,18,21,22,23,24,25,26,28,29,41,42,43,44,45,46,52,54,58,62,65,66,67,68,69,70,71,72,73,74,75,78,79,80,81,82,84,85,86,87,88,89,93,94,96,97,98,101,103,104,106,107,108,109,112,113,114,124,125,126,127,128,131,132,133,134,135,136,137,138,],[15,15,15,-7,-31,-22,-32,-34,-33,-10,-11,-16,-17,-52,-53,-54,15,15,15,-31,-32,-33,-34,15,15,-72,-24,-66,-14,-15,-40,-41,-42,-43,-44,-45,-8,-9,-62,-19,-20,15,15,15,-48,-22,-50,-22,-55,-22,-18,15,-12,-13,-23,-65,-21,-64,-36,15,15,-46,-57,-61,15,15,-37,15,15,15,-38,15,15,-69,-70,-71,-39,-63,]),'FOR':([0,2,3,4,5,6,7,10,12,18,21,22,23,24,25,26,28,29,41,42,43,44,45,46,52,54,58,62,65,66,67,68,69,70,71,72,73,74,75,78,79,80,81,82,84,85,86,87,88,89,93,94,96,97,98,101,103,104,106,107,108,109,112,113,114,124,125,126,127,128,131,132,133,134,135,136,137,138,],[16,16,16,-7,-31,-22,-32,-34,-33,-10,-11,-16,-17,-52,-53,-54,16,16,16,-31,-32,-33,-34,16,16,-72,-24,-66,-14,-15,-40,-41,-42,-43,-44,-45,-8,-9,-62,-19,-20,16,16,16,-48,-22,-50,-22,-55,-22,-18,16,-12,-13,-23,-65,-21,-64,-36,16,16,-46,-57,-61,16,16,-37,16,16,16,-38,16,16,-69,-70,-71,-39,-63,]),'PUTS':([0,2,3,4,5,6,7,10,12,18,21,22,23,24,25,26,28,29,41,42,43,44,45,46,52,54,58,62,65,66,67,68,69,70,71,72,73,74,75,78,79,80,81,82,84,85,86,87,88,89,93,94,96,97,98,101,103,104,106,107,108,109,112,113,114,124,125,126,127,128,131,132,133,134,135,136,137,138,],[17,17,17,-7,-31,-22,-32,-34,-33,-10,-11,-16,-17,-52,-53,-54,17,17,17,-31,-32,-33,-34,17,17,-72,-24,-66,-14,-15,-40,-41,-42,-43,-44,-45,-8,-9,-62,-19,-20,17,17,17,-48,-22,-50,-22,-55,-22,-18,17,-12,-13,-23,-65,-21,-64,-36,17,17,-46,-57,-61,17,17,-37,17,17,17,-38,17,17,-69,-70,-71,-39,-63,]),'LBRACE':([0,2,3,4,5,6,7,8,10,12,14,15,17,18,20,21,22,23,24,25,26,28,29,32,33,34,35,36,37,38,40,41,42,43,44,45,46,47,48,49,50,52,54,58,62,65,66,67,68,69,70,71,72,73,74,75,78,79,80,81,82,83,84,85,86,87,88,89,93,94,96,97,98,100,101,102,103,104,106,107,108,109,112,113,114,124,125,126,127,128,131,132,133,134,135,136,137,138,],[19,19,19,-7,-31,-22,-32,19,-34,-33,19,19,19,-10,19,-11,-16,-17,-52,-53,-54,19,19,19,19,19,19,19,19,19,19,19,-31,-32,-33,-34,19,19,19,19,19,19,-72,-24,-66,-14,-15,-40,-41,-42,-43,-44,-45,-8,-9,-62,-19,-20,19,19,19,19,-48,-22,-50,-22,-55,-22,-18,19,-12,-13,-23,19,-65,19,-21,-64,-36,19,19,-46,-57,-61,19,19,-37,19,19,19,-38,19,19,-69,-70,-71,-39,-63,]),'LBRACKET':([0,2,3,4,5,6,7,8,10,12,14,15,17,18,20,21,22,23,24,25,26,28,29,32,33,34,35,36,37,38,40,41,42,43,44,45,46,47,48,49,50,52,54,58,62,65,66,67,68,69,70,71,72,73,74,75,78,79,80,81,82,83,84,85,86,87,88,89,93,94,96,97,98,100,101,102,103,104,106,107,108,109,112,113,114,124,125,126,127,128,131,132,133,134,135,136,137,138,],[20,20,20,-7,-31,-22,-32,20,-34,-33,20,20,20,-10,20,-11,-16,-17,-52,-53,-54,20,20,20,20,20,20,20,20,20,20,20,-31,-32,-33,-34,20,20,20,20,20,20,-72,-24,-66,-14,-15,-40,-41,-42,-43,-44,-45,-8,-9,-62,-19,-20,20,20,20,20,-48,-22,-50,-22,-55,-22,-18,20,-12,-13,-23,20,-65,20,-21,-64,-36,20,20,-46,-57,-61,20,20,-37,20,20,20,-38,20,20,-69,-70,-71,-39,-63,]),'INTEGER':([0,2,3,4,5,6,7,8,10,12,14,15,17,18,20,21,22,23,24,25,26,28,29,30,31,32,33,34,35,36,37,38,40,41,42,43,44,45,46,47,48,49,50,52,54,55,56,58,62,64,65,66,67,68,69,70,71,72,73,74,75,78,79,80,81,82,83,84,85,86,87,88,89,93,94,95,96,97,98,100,101,102,103,104,106,107,108,109,112,113,114,124,125,126,127,128,129,131,132,133,134,135,136,137,138,],[22,22,22,-7,-31,-22,-32,22,-34,-33,22,22,22,-10,22,-11,-16,-17,-52,-53,-54,22,22,22,22,22,22,22,22,22,22,22,22,22,-31,-32,-33,-34,22,22,22,22,22,22,-72,22,22,-24,-66,22,-14,-15,-40,-41,-42,-43,-44,-45,-8,-9,-62,-19,-20,22,22,22,22,-48,-22,-50,-22,-55,-22,-18,22,115,-12,-13,-23,120,-65,22,-21,-64,-36,22,22,-46,-57,-61,22,22,-37,22,22,22,135,-38,22,22,-69,-70,-71,-39,-63,]),'FLOAT':([0,2,3,4,5,6,7,8,10,12,14,15,17,18,20,21,22,23,24,25,26,28,29,30,31,32,33,34,35,36,37,38,40,41,42,43,44,45,46,47,48,49,50,52,54,55,56,58,62,64,65,66,67,68,69,70,71,72,73,74,75,78,79,80,81,82,83,84,85,86,87,88,89,93,94,95,96,97,98,100,101,102,103,104,106,107,108,109,112,113,114,124,125,126,127,128,130,131,132,133,134,135,136,137,138,],[23,23,23,-7,-31,-22,-32,23,-34,-33,23,23,23,-10,23,-11,-16,-17,-52,-53,-54,23,23,23,23,23,23,23,23,23,23,23,23,23,-31,-32,-33,-34,23,23,23,23,23,23,-72,23,23,-24,-66,23,-14,-15,-40,-41,-42,-43,-44,-45,-8,-9,-62,-19,-20,23,23,23,23,-48,-22,-50,-22,-55,-22,-18,23,116,-12,-13,-23,121,-65,23,-21,-64,-36,23,23,-46,-57,-61,23,23,-37,23,23,23,136,-38,23,23,-69,-70,-71,-39,-63,]),'LPAREN':([0,2,3,4,5,6,7,8,10,12,13,14,15,17,18,20,21,22,23,24,25,26,28,29,30,31,32,33,34,35,36,37,38,40,41,42,43,44,45,46,47,48,49,50,52,54,55,56,58,62,64,65,66,67,68,69,70,71,72,73,74,75,78,79,80,81,82,83,84,85,86,87,88,89,93,94,96,97,98,100,101,102,103,104,106,107,108,109,112,113,114,124,125,126,127,128,131,132,133,134,135,136,137,138,],[14,14,14,-7,-31,-22,-32,14,-34,-33,50,14,14,14,-10,14,-11,-16,-17,-52,-53,-54,14,14,14,14,14,14,14,14,14,14,14,14,14,-31,-32,-33,-34,83,14,14,14,14,14,-72,14,14,-24,-66,14,-14,-15,-40,-41,-42,-43,-44,-45,-8,-9,-62,-19,-20,14,14,14,14,-48,-22,-50,-22,-55,-22,-18,14,-12,-13,-23,14,-65,14,-21,-64,-36,14,14,-46,-57,-61,14,14,-37,14,14,14,-38,14,14,-69,-70,-71,-39,-63,]),'STRING':([0,2,3,4,5,6,7,8,10,12,14,15,17,18,19,20,21,22,23,24,25,26,28,29,30,31,32,33,34,35,36,37,38,40,41,42,43,44,45,46,47,48,49,50,52,54,55,56,58,62,64,65,66,67,68,69,70,71,72,73,74,75,78,79,80,81,82,83,84,85,86,87,88,89,93,94,96,97,98,99,100,101,102,103,104,106,107,108,109,112,113,114,124,125,126,127,128,131,132,133,134,135,136,137,138,],[6,6,6,-7,-31,-22,-32,6,-34,-33,6,6,6,-10,60,6,-11,-16,-17,-52,-53,-54,6,6,6,6,6,6,6,6,6,6,73,78,6,-31,-32,-33,-34,6,85,87,89,6,6,-72,6,6,-24,-66,6,-14,-15,-40,-41,-42,-43,-44,-45,-8,-9,-62,-19,-20,6,6,6,6,-48,-22,-50,-22,-55,-22,-18,6,-12,-13,-23,60,118,-65,6,-21,-64,-36,6,6,-46,-57,-61,6,6,-37,6,6,6,-38,6,6,-69,-70,-71,-39,-63,]),'TRUE':([0,2,3,4,5,6,7,8,10,12,14,15,17,18,20,21,22,23,24,25,26,28,29,30,31,32,33,34,35,36,37,38,40,41,42,43,44,45,46,47,48,49,50,52,54,55,56,58,62,64,65,66,67,68,69,70,71,72,73,74,75,78,79,80,81,82,83,84,85,86,87,88,89,93,94,96,97,98,100,101,102,103,104,106,107,108,109,112,113,114,124,125,126,127,128,131,132,133,134,135,136,137,138,],[24,24,24,-7,-31,-22,-32,24,-34,-33,24,24,24,-10,24,-11,-16,-17,-52,-53,-54,24,24,24,24,24,24,24,24,24,24,24,24,24,-31,-32,-33,-34,24,24,24,24,24,24,-72,24,24,-24,-66,24,-14,-15,-40,-41,-42,-43,-44,-45,-8,-9,-62,-19,-20,24,24,24,24,-48,-22,-50,-22,-55,-22,-18,24,-12,-13,-23,24,-65,24,-21,-64,-36,24,24,-46,-57,-61,24,24,-37,24,24,24,-38,24,24,-69,-70,-71,-39,-63,]),'FALSE':([0,2,3,4,5,6,7,8,10,12,14,15,17,18,20,21,22,23,24,25,26,28,29,30,31,32,33,34,35,36,37,38,40,41,42,43,44,45,46,47,48,49,50,52,54,55,56,58,62,64,65,66,67,68,69,70,71,72,73,74,75,78,79,80,81,82,83,84,85,86,87,88,89,93,94,96,97,98,100,101,102,103,104,106,107,108,109,112,113,114,124,125,126,127,128,131,132,133,134,135,136,137,138,],[25,25,25,-7,-31,-22,-32,25,-34,-33,25,25,25,-10,25,-11,-16,-17,-52,-53,-54,25,25,25,25,25,25,25,25,25,25,25,25,25,-31,-32,-33,-34,25,25,25,25,25,25,-72,25,25,-24,-66,25,-14,-15,-40,-41,-42,-43,-44,-45,-8,-9,-62,-19,-20,25,25,25,25,-48,-22,-50,-22,-55,-22,-18,25,-12,-13,-23,25,-65,25,-21,-64,-36,25,25,-46,-57,-61,25,25,-37,25,25,25,-38,25,25,-69,-70,-71,-39,-63,]),'NIL':([0,2,3,4,5,6,7,8,10,12,14,15,17,18,20,21,22,23,24,25,26,28,29,30,31,32,33,34,35,36,37,38,40,41,42,43,44,45,46,47,48,49,50,52,54,55,56,58,62,64,65,66,67,68,69,70,71,72,73,74,75,78,79,80,81,82,83,84,85,86,87,88,89,93,94,96,97,98,100,101,102,103,104,106,107,108,109,112,113,114,124,125,126,127,128,131,132,133,134,135,136,137,138,],[26,26,26,-7,-31,-22,-32,26,-34,-33,26,26,26,-10,26,-11,-16,-17,-52,-53,-54,26,26,26,26,26,26,26,26,26,26,26,26,26,-31,-32,-33,-34,26,26,26,26,26,26,-72,26,26,-24,-66,26,-14,-15,-40,-41,-42,-43,-44,-45,-8,-9,-62,-19,-20,26,26,26,26,-48,-22,-50,-22,-55,-22,-18,26,-12,-13,-23,26,-65,26,-21,-64,-36,26,26,-46,-57,-61,26,26,-37,26,26,26,-38,26,26,-69,-70,-71,-39,-63,]),'$end':([1,2,3,4,5,6,7,10,12,18,21,22,23,24,25,26,27,28,29,42,43,44,45,54,58,62,65,66,67,68,69,70,71,72,73,74,75,78,79,84,85,86,87,88,89,93,96,97,98,101,103,104,106,109,112,113,125,131,134,137,138,],[0,-2,-5,-7,-31,-22,-32,-34,-33,-10,-11,-16,-17,-52,-53,-54,-1,-6,-35,-31,-32,-33,-34,-72,-24,-66,-14,-15,-40,-41,-42,-43,-44,-45,-8,-9,-62,-19,-20,-48,-22,-50,-22,-55,-22,-18,-12,-13,-23,-65,-21,-64,-36,-46,-57,-61,-37,-38,-69,-39,-63,]),'END':([2,3,4,5,6,7,10,12,18,21,22,23,24,25,26,28,29,42,43,44,45,54,58,62,65,66,67,68,69,70,71,72,73,74,75,78,79,80,82,84,85,86,87,88,89,93,94,96,97,98,101,103,104,106,108,109,112,113,124,125,128,131,132,133,134,137,138,],[27,-5,-7,-31,-22,-32,-34,-33,-10,-11,-16,-17,-52,-53,-54,-6,-35,-31,-32,-33,-34,-72,-24,-66,-14,-15,-40,-41,-42,-43,-44,-45,-8,-9,-62,-19,-20,106,109,-48,-22,-50,-22,-55,-22,-18,113,-12,-13,-23,-65,-21,-64,-36,125,-46,-57,-61,131,-37,134,-38,137,138,-69,-39,-63,]),'ELSE':([4,5,6,7,10,12,18,21,22,23,24,25,26,29,42,43,44,45,54,58,62,65,66,67,68,69,70,71,72,73,74,75,78,79,80,84,85,86,87,88,89,93,96,97,98,101,103,104,106,108,109,112,113,125,131,134,137,138,],[-7,-31,-22,-32,-34,-33,-10,-11,-16,-17,-52,-53,-54,-35,-31,-32,-33,-34,-72,-24,-66,-14,-15,-40,-41,-42,-43,-44,-45,-8,-9,-62,-19,-20,107,-48,-22,-50,-22,-55,-22,-18,-12,-13,-23,-65,-21,-64,-36,126,-46,-57,-61,-37,-38,-69,-39,-63,]),'PLUS':([4,5,6,7,10,12,18,21,22,23,24,25,26,41,42,43,44,45,51,52,54,58,62,63,65,66,67,68,69,70,71,72,73,74,78,79,84,85,86,87,88,89,93,96,97,98,101,103,110,118,119,120,121,122,],[30,-31,-22,-32,-34,-33,-10,-11,-16,-17,-52,-53,-54,30,-31,-32,-33,-34,30,30,30,-24,-66,30,-14,-15,30,30,30,30,30,30,-22,30,-22,30,30,-22,30,-22,30,-22,-18,-12,-13,-23,-65,-21,-31,-22,30,-16,-17,30,]),'MINUS':([4,5,6,7,10,12,18,21,22,23,24,25,26,41,42,43,44,45,51,52,54,58,62,63,65,66,67,68,69,70,71,72,73,74,78,79,84,85,86,87,88,89,93,96,97,98,101,103,110,118,119,120,121,122,],[31,-31,-22,-32,-34,-33,-10,-11,-16,-17,-52,-53,-54,31,-31,-32,-33,-34,31,31,31,-24,-66,31,-14,-15,31,31,31,31,31,31,-22,31,-22,31,31,-22,31,-22,31,-22,-18,-12,-13,-23,-65,-21,-31,-22,31,-16,-17,31,]),'GREATER':([4,5,6,7,10,12,18,21,22,23,24,25,26,41,42,43,44,45,51,52,54,58,62,63,65,66,67,68,69,70,71,72,73,74,78,79,84,85,86,87,88,89,93,96,97,98,101,103,110,118,119,120,121,122,],[32,-31,-22,-32,-34,-33,-10,-11,-16,-17,-52,-53,-54,32,-31,-32,-33,-34,32,32,32,-24,-66,32,-14,-15,None,None,None,None,None,None,-22,32,-22,32,32,-22,32,-22,32,-22,-18,-12,-13,-23,-65,-21,-31,-22,32,-16,-17,32,]),'LESS':([4,5,6,7,10,12,18,21,22,23,24,25,26,41,42,43,44,45,51,52,54,58,62,63,65,66,67,68,69,70,71,72,73,74,78,79,84,85,86,87,88,89,93,96,97,98,101,103,110,118,119,120,121,122,],[33,-31,-22,-32,-34,-33,-10,-11,-16,-17,-52,-53,-54,33,-31,-32,-33,-34,33,33,33,-24,-66,33,-14,-15,None,None,None,None,None,None,-22,33,-22,33,33,-22,33,-22,33,-22,-18,-12,-13,-23,-65,-21,-31,-22,33,-16,-17,33,]),'GREATER_EQUAL':([4,5,6,7,10,12,18,21,22,23,24,25,26,41,42,43,44,45,51,52,54,58,62,63,65,66,67,68,69,70,71,72,73,74,78,79,84,85,86,87,88,89,93,96,97,98,101,103,110,118,119,120,121,122,],[34,-31,-22,-32,-34,-33,-10,-11,-16,-17,-52,-53,-54,34,-31,-32,-33,-34,34,34,34,-24,-66,34,-14,-15,None,None,None,None,None,None,-22,34,-22,34,34,-22,34,-22,34,-22,-18,-12,-13,-23,-65,-21,-31,-22,34,-16,-17,34,]),'LESS_EQUAL':([4,5,6,7,10,12,18,21,22,23,24,25,26,41,42,43,44,45,51,52,54,58,62,63,65,66,67,68,69,70,71,72,73,74,78,79,84,85,86,87,88,89,93,96,97,98,101,103,110,118,119,120,121,122,],[35,-31,-22,-32,-34,-33,-10,-11,-16,-17,-52,-53,-54,35,-31,-32,-33,-34,35,35,35,-24,-66,35,-14,-15,None,None,None,None,None,None,-22,35,-22,35,35,-22,35,-22,35,-22,-18,-12,-13,-23,-65,-21,-31,-22,35,-16,-17,35,]),'EQUALS':([4,5,6,7,10,12,18,21,22,23,24,25,26,41,42,43,44,45,51,52,54,58,62,63,65,66,67,68,69,70,71,72,73,74,78,79,84,85,86,87,88,89,93,96,97,98,101,103,110,118,119,120,121,122,],[36,-31,-22,-32,-34,-33,-10,-11,-16,-17,-52,-53,-54,36,-31,-32,-33,-34,36,36,36,-24,-66,36,-14,-15,None,None,None,None,None,None,-22,36,-22,36,36,-22,36,-22,36,-22,-18,-12,-13,-23,-65,-21,-31,-22,36,-16,-17,36,]),'NOT_EQUALS':([4,5,6,7,10,12,18,21,22,23,24,25,26,41,42,43,44,45,51,52,54,58,62,63,65,66,67,68,69,70,71,72,73,74,78,79,84,85,86,87,88,89,93,96,97,98,101,103,110,118,119,120,121,122,],[37,-31,-22,-32,-34,-33,-10,-11,-16,-17,-52,-53,-54,37,-31,-32,-33,-34,37,37,37,-24,-66,37,-14,-15,None,None,None,None,None,None,-22,37,-22,37,37,-22,37,-22,37,-22,-18,-12,-13,-23,-65,-21,-31,-22,37,-16,-17,37,]),'ASSIGN':([5,7,10,11,12,],[38,40,47,48,49,]),'POWER':([5,6,7,10,12,21,22,23,24,25,26,42,43,44,45,73,78,85,87,89,93,96,97,103,110,118,120,121,],[-31,-22,-32,-34,-33,64,-16,-17,-52,-53,-54,-31,-32,-33,-34,-22,-22,-22,-22,-22,-18,64,64,64,-31,-22,-16,-17,]),'DIVIDE':([5,6,7,10,12,18,21,22,23,24,25,26,42,43,44,45,65,66,73,78,85,87,89,93,96,97,103,110,118,120,121,],[-31,-22,-32,-34,-33,55,-11,-16,-17,-52,-53,-54,-31,-32,-33,-34,55,55,-22,-22,-22,-22,-22,-18,-12,-13,-21,-31,-22,-16,-17,]),'TIMES':([5,6,7,10,12,18,21,22,23,24,25,26,42,43,44,45,65,66,73,78,85,87,89,93,96,97,103,110,118,120,121,],[-31,-22,-32,-34,-33,56,-11,-16,-17,-52,-53,-54,-31,-32,-33,-34,56,56,-22,-22,-22,-22,-22,-18,-12,-13,-21,-31,-22,-16,-17,]),'THEN':([6,18,21,22,23,24,25,26,41,42,43,44,45,58,62,65,66,67,68,69,70,71,72,93,96,97,98,101,103,],[-22,-10,-11,-16,-17,-52,-53,-54,81,-31,-32,-33,-34,-24,-66,-14,-15,-40,-41,-42,-43,-44,-45,-18,-12,-13,-23,-65,-21,]),'RPAREN':([6,18,21,22,23,24,25,26,42,43,44,45,50,51,58,62,63,65,66,67,68,69,70,71,72,76,77,90,91,92,93,96,97,98,101,103,110,111,122,123,],[-22,-10,-11,-16,-17,-52,-53,-54,-31,-32,-33,-34,-60,93,-24,-66,-67,-14,-15,-40,-41,-42,-43,-44,-45,-3,104,112,-58,-59,-18,-12,-13,-23,-65,-21,-3,127,-68,-4,]),'RBRACKET':([6,18,20,21,22,23,24,25,26,42,43,44,45,58,61,62,63,65,66,67,68,69,70,71,72,93,96,97,98,101,103,122,],[-22,-10,62,-11,-16,-17,-52,-53,-54,-31,-32,-33,-34,-24,101,-66,-67,-14,-15,-40,-41,-42,-43,-44,-45,-18,-12,-13,-23,-65,-21,-68,]),'COMMA':([6,18,21,22,23,24,25,26,42,43,44,45,57,58,59,61,62,63,65,66,67,68,69,70,71,72,76,77,91,93,96,97,98,101,103,110,111,117,118,119,120,121,122,123,],[-22,-10,-11,-16,-17,-52,-53,-54,-31,-32,-33,-34,99,-24,-25,102,-66,-67,-14,-15,-40,-41,-42,-43,-44,-45,-3,105,102,-18,-12,-13,-23,-65,-21,-3,105,-26,-22,-27,-16,-17,-68,-4,]),'RBRACE':([6,18,19,21,22,23,24,25,26,42,43,44,45,57,58,59,62,65,66,67,68,69,70,71,72,93,96,97,98,101,103,117,118,119,120,121,],[-22,-10,58,-11,-16,-17,-52,-53,-54,-31,-32,-33,-34,98,-24,-25,-66,-14,-15,-40,-41,-42,-43,-44,-45,-18,-12,-13,-23,-65,-21,-26,-22,-27,-16,-17,]),'GETS':([38,],[75,]),'IN':([53,],[95,]),'HASH_ROCKET':([60,],[100,]),'DOUBLE_DOT':([115,116,],[129,130,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'statements':([0,],[2,]),'statement':([0,2,3,28,29,41,46,52,80,81,82,94,107,108,114,124,126,127,128,132,133,],[3,28,29,29,29,80,82,94,29,108,29,29,124,29,128,29,132,133,29,29,29,]),'expression':([0,2,3,8,14,15,17,20,28,29,32,33,34,35,36,37,38,40,41,46,47,48,49,50,52,80,81,82,83,94,100,102,107,108,114,124,126,127,128,132,133,],[4,4,4,41,51,52,54,63,4,4,67,68,69,70,71,72,74,79,4,4,84,86,88,63,4,4,4,4,51,4,119,122,4,4,4,4,4,4,4,4,4,]),'term':([0,2,3,8,14,15,17,20,28,29,30,31,32,33,34,35,36,37,38,40,41,46,47,48,49,50,52,80,81,82,83,94,100,102,107,108,114,124,126,127,128,132,133,],[18,18,18,18,18,18,18,18,18,18,65,66,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,]),'factor':([0,2,3,8,14,15,17,20,28,29,30,31,32,33,34,35,36,37,38,40,41,46,47,48,49,50,52,55,56,64,80,81,82,83,94,100,102,107,108,114,124,126,127,128,132,133,],[21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,96,97,103,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,]),'key_value_pairs':([19,],[57,]),'key_value':([19,99,],[59,117,]),'elements':([20,50,],[61,91,]),'params':([39,83,],[77,111,]),'optional_elements':([50,],[90,]),'empty':([50,],[92,]),'range':([95,],[114,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statements END','program',2,'p_program','AnalizadorSintactico.py',19),
  ('program -> statements','program',1,'p_program','AnalizadorSintactico.py',20),
  ('params -> IDENTIFIER','params',1,'p_params','AnalizadorSintactico.py',25),
  ('params -> params COMMA IDENTIFIER','params',3,'p_params','AnalizadorSintactico.py',26),
  ('statements -> statement','statements',1,'p_statements','AnalizadorSintactico.py',33),
  ('statements -> statements statement','statements',2,'p_statements','AnalizadorSintactico.py',34),
  ('statement -> expression','statement',1,'p_statement','AnalizadorSintactico.py',46),
  ('statement -> IDENTIFIER ASSIGN STRING','statement',3,'p_local_var','AnalizadorSintactico.py',51),
  ('statement -> IDENTIFIER ASSIGN expression','statement',3,'p_local_var','AnalizadorSintactico.py',52),
  ('expression -> term','expression',1,'p_expression_term','AnalizadorSintactico.py',57),
  ('term -> factor','term',1,'p_term_single','AnalizadorSintactico.py',61),
  ('term -> term DIVIDE factor','term',3,'p_term_div','AnalizadorSintactico.py',65),
  ('term -> term TIMES factor','term',3,'p_term_times','AnalizadorSintactico.py',69),
  ('expression -> expression PLUS term','expression',3,'p_expression_plus','AnalizadorSintactico.py',73),
  ('expression -> expression MINUS term','expression',3,'p_expression_minus','AnalizadorSintactico.py',77),
  ('factor -> INTEGER','factor',1,'p_factor_num','AnalizadorSintactico.py',81),
  ('factor -> FLOAT','factor',1,'p_factor_num','AnalizadorSintactico.py',82),
  ('factor -> LPAREN expression RPAREN','factor',3,'p_factor_expr','AnalizadorSintactico.py',86),
  ('statement -> GLOBAL_VAR ASSIGN STRING','statement',3,'p_global_var','AnalizadorSintactico.py',92),
  ('statement -> GLOBAL_VAR ASSIGN expression','statement',3,'p_global_var','AnalizadorSintactico.py',93),
  ('factor -> factor POWER factor','factor',3,'p_factor_power','AnalizadorSintactico.py',98),
  ('factor -> STRING','factor',1,'p_factor_string','AnalizadorSintactico.py',102),
  ('expression -> LBRACE key_value_pairs RBRACE','expression',3,'p_hash','AnalizadorSintactico.py',106),
  ('expression -> LBRACE RBRACE','expression',2,'p_empty_hash','AnalizadorSintactico.py',111),
  ('key_value_pairs -> key_value','key_value_pairs',1,'p_key_value_pairs','AnalizadorSintactico.py',116),
  ('key_value_pairs -> key_value_pairs COMMA key_value','key_value_pairs',3,'p_key_value_pairs','AnalizadorSintactico.py',117),
  ('key_value -> STRING HASH_ROCKET expression','key_value',3,'p_key_value','AnalizadorSintactico.py',124),
  ('key_value -> STRING HASH_ROCKET STRING','key_value',3,'p_key_value','AnalizadorSintactico.py',125),
  ('key_value -> STRING HASH_ROCKET INTEGER','key_value',3,'p_key_value','AnalizadorSintactico.py',126),
  ('key_value -> STRING HASH_ROCKET FLOAT','key_value',3,'p_key_value','AnalizadorSintactico.py',127),
  ('factor -> IDENTIFIER','factor',1,'p_factor_var','AnalizadorSintactico.py',132),
  ('factor -> GLOBAL_VAR','factor',1,'p_factor_var','AnalizadorSintactico.py',133),
  ('factor -> INSTANCE_VAR','factor',1,'p_factor_var','AnalizadorSintactico.py',134),
  ('factor -> CLASS_VAR','factor',1,'p_factor_var','AnalizadorSintactico.py',135),
  ('statement -> statement statement','statement',2,'p_statement_block','AnalizadorSintactico.py',139),
  ('statement -> IF expression statement END','statement',4,'p_if_statement','AnalizadorSintactico.py',146),
  ('statement -> IF expression THEN statement END','statement',5,'p_if_statement','AnalizadorSintactico.py',147),
  ('statement -> IF expression statement ELSE statement END','statement',6,'p_if_statement','AnalizadorSintactico.py',148),
  ('statement -> IF expression THEN statement ELSE statement END','statement',7,'p_if_statement','AnalizadorSintactico.py',149),
  ('expression -> expression GREATER expression','expression',3,'p_expression_comparison','AnalizadorSintactico.py',165),
  ('expression -> expression LESS expression','expression',3,'p_expression_comparison','AnalizadorSintactico.py',166),
  ('expression -> expression GREATER_EQUAL expression','expression',3,'p_expression_comparison','AnalizadorSintactico.py',167),
  ('expression -> expression LESS_EQUAL expression','expression',3,'p_expression_comparison','AnalizadorSintactico.py',168),
  ('expression -> expression EQUALS expression','expression',3,'p_expression_comparison','AnalizadorSintactico.py',169),
  ('expression -> expression NOT_EQUALS expression','expression',3,'p_expression_comparison','AnalizadorSintactico.py',170),
  ('statement -> DEF IDENTIFIER statement END','statement',4,'p_method_without_params_declaration','AnalizadorSintactico.py',184),
  ('statement -> IDENTIFIER','statement',1,'p_method_call_without_params','AnalizadorSintactico.py',189),
  ('statement -> CLASS_VAR ASSIGN expression','statement',3,'p_class_var','AnalizadorSintactico.py',194),
  ('statement -> CLASS_VAR ASSIGN STRING','statement',3,'p_class_var','AnalizadorSintactico.py',195),
  ('statement -> CONSTANT ASSIGN expression','statement',3,'p_constant_var','AnalizadorSintactico.py',200),
  ('statement -> CONSTANT ASSIGN STRING','statement',3,'p_constant_var','AnalizadorSintactico.py',201),
  ('factor -> TRUE','factor',1,'p_factor_boolean','AnalizadorSintactico.py',206),
  ('factor -> FALSE','factor',1,'p_factor_boolean','AnalizadorSintactico.py',207),
  ('factor -> NIL','factor',1,'p_factor_nil','AnalizadorSintactico.py',212),
  ('statement -> INSTANCE_VAR ASSIGN expression','statement',3,'p_instance_var','AnalizadorSintactico.py',219),
  ('statement -> INSTANCE_VAR ASSIGN STRING','statement',3,'p_instance_var','AnalizadorSintactico.py',220),
  ('statement -> SETNEW LPAREN optional_elements RPAREN','statement',4,'p_set','AnalizadorSintactico.py',225),
  ('optional_elements -> elements','optional_elements',1,'p_optional_elements','AnalizadorSintactico.py',230),
  ('optional_elements -> empty','optional_elements',1,'p_optional_elements','AnalizadorSintactico.py',231),
  ('empty -> <empty>','empty',0,'p_empty','AnalizadorSintactico.py',235),
  ('statement -> WHILE expression statement END','statement',4,'p_while_statement','AnalizadorSintactico.py',239),
  ('statement -> IDENTIFIER ASSIGN GETS','statement',3,'p_gets_statement','AnalizadorSintactico.py',244),
  ('statement -> DEF IDENTIFIER LPAREN params RPAREN statement END','statement',7,'p_method_with_params_declaration','AnalizadorSintactico.py',249),
  ('statement -> IDENTIFIER LPAREN params RPAREN','statement',4,'p_method_call_with_params','AnalizadorSintactico.py',254),
  ('expression -> LBRACKET elements RBRACKET','expression',3,'p_array','AnalizadorSintactico.py',262),
  ('expression -> LBRACKET RBRACKET','expression',2,'p_empty_array','AnalizadorSintactico.py',267),
  ('elements -> expression','elements',1,'p_elements','AnalizadorSintactico.py',273),
  ('elements -> elements COMMA expression','elements',3,'p_elements','AnalizadorSintactico.py',274),
  ('statement -> FOR IDENTIFIER IN range statement END','statement',6,'p_for_statement','AnalizadorSintactico.py',282),
  ('range -> INTEGER DOUBLE_DOT INTEGER','range',3,'p_range','AnalizadorSintactico.py',288),
  ('range -> FLOAT DOUBLE_DOT FLOAT','range',3,'p_range','AnalizadorSintactico.py',289),
  ('statement -> PUTS expression','statement',2,'p_puts_statement','AnalizadorSintactico.py',295),
]
