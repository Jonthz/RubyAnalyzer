
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftPLUSMINUSleftTIMESDIVIDErightPOWERAND ASSIGN BEGIN BITWISE_AND BREAK CASE CLASS CLASS_VAR COMMA COMMENT CONSTANT DEF DIVIDE DIVIDE_ASSIGN DO DOT DOUBLE_DOT ELSE ELSIF END ENSURE EQUALS FALSE FLOAT FLOOR_DIVIDE FOR GETS GLOBAL_VAR GREATER GREATER_EQUAL IDENTIFIER IF IN INSTANCE_VAR INTEGER LAMBDA LBRACE LBRACKET LESS LESS_EQUAL LPAREN MINUS MINUS_ASSIGN MOD MODULE MOD_ASSIGN NEXT NIL NOT NOT_EQUALS OR PIPE PLUS PLUS_ASSIGN POWER POWER_ASSIGN PROC PUTS QUESTION_MARK RAISE RANGE RBRACE RBRACKET REDO REQUIRE RESCUE RETRY RETURN RPAREN SELF SEMICOLON SETNEW SPACESHIP STRING SUPER TIMES TIMES_ASSIGN TRUE UNTIL WHEN WHILE YIELDprogram : statements END\n               | statementsparams : IDENTIFIER\n              | params COMMA IDENTIFIERstatements : statement\n                  | statements statementstatement :  local_var\n                 | expressionlocal_var : IDENTIFIER EQUALS INTEGER\n                 | IDENTIFIER EQUALS FLOATstatement : INSTANCE_VAR EQUALS INTEGER\n                 | INSTANCE_VAR EQUALS FLOATexpression : SETNEW LPAREN elements RPARENstatement : WHILE expression statement ENDstatement : IDENTIFIER EQUALS GETSexpression : termterm : term DIVIDE factorterm : term TIMES factorexpression : expression PLUS termexpression : expression MINUS termterm : factorfactor : INTEGER\n              | FLOAT factor : LPAREN expression RPARENexpression : LBRACKET elements RBRACKETelements : expression\n                | elements COMMA expressionstatement : DEF IDENTIFIER LPAREN params RPAREN statement ENDstatement : IDENTIFIER LPAREN params RPARENstatement : FOR IDENTIFIER IN range statementrange : INTEGER DOUBLE_DOT INTEGER\n             | FLOAT DOUBLE_DOT FLOATstatement : PUTS expression'
    
_lr_action_items = {'INSTANCE_VAR':([0,2,3,4,5,7,8,16,18,20,24,30,36,37,38,39,41,42,43,47,50,51,52,54,55,58,61,64,65,69,70,71,],[6,6,-5,-7,-8,-22,-23,-16,-21,-6,6,-33,-19,-20,-11,-12,-15,-9,-10,-24,-17,-18,-25,-14,-29,6,-13,6,-30,-31,-32,-28,]),'WHILE':([0,2,3,4,5,7,8,16,18,20,24,30,36,37,38,39,41,42,43,47,50,51,52,54,55,58,61,64,65,69,70,71,],[9,9,-5,-7,-8,-22,-23,-16,-21,-6,9,-33,-19,-20,-11,-12,-15,-9,-10,-24,-17,-18,-25,-14,-29,9,-13,9,-30,-31,-32,-28,]),'IDENTIFIER':([0,2,3,4,5,7,8,11,13,16,18,20,24,26,30,36,37,38,39,41,42,43,46,47,50,51,52,54,55,56,58,61,64,65,69,70,71,],[10,10,-5,-7,-8,-22,-23,27,29,-16,-21,-6,10,44,-33,-19,-20,-11,-12,-15,-9,-10,44,-24,-17,-18,-25,-14,-29,63,10,-13,10,-30,-31,-32,-28,]),'DEF':([0,2,3,4,5,7,8,16,18,20,24,30,36,37,38,39,41,42,43,47,50,51,52,54,55,58,61,64,65,69,70,71,],[11,11,-5,-7,-8,-22,-23,-16,-21,-6,11,-33,-19,-20,-11,-12,-15,-9,-10,-24,-17,-18,-25,-14,-29,11,-13,11,-30,-31,-32,-28,]),'FOR':([0,2,3,4,5,7,8,16,18,20,24,30,36,37,38,39,41,42,43,47,50,51,52,54,55,58,61,64,65,69,70,71,],[13,13,-5,-7,-8,-22,-23,-16,-21,-6,13,-33,-19,-20,-11,-12,-15,-9,-10,-24,-17,-18,-25,-14,-29,13,-13,13,-30,-31,-32,-28,]),'PUTS':([0,2,3,4,5,7,8,16,18,20,24,30,36,37,38,39,41,42,43,47,50,51,52,54,55,58,61,64,65,69,70,71,],[14,14,-5,-7,-8,-22,-23,-16,-21,-6,14,-33,-19,-20,-11,-12,-15,-9,-10,-24,-17,-18,-25,-14,-29,14,-13,14,-30,-31,-32,-28,]),'SETNEW':([0,2,3,4,5,7,8,9,12,14,16,17,18,20,24,30,31,36,37,38,39,41,42,43,47,50,51,52,53,54,55,58,61,64,65,69,70,71,],[15,15,-5,-7,-8,-22,-23,15,15,15,-16,15,-21,-6,15,-33,15,-19,-20,-11,-12,-15,-9,-10,-24,-17,-18,-25,15,-14,-29,15,-13,15,-30,-31,-32,-28,]),'LBRACKET':([0,2,3,4,5,7,8,9,12,14,16,17,18,20,24,30,31,36,37,38,39,41,42,43,47,50,51,52,53,54,55,58,61,64,65,69,70,71,],[17,17,-5,-7,-8,-22,-23,17,17,17,-16,17,-21,-6,17,-33,17,-19,-20,-11,-12,-15,-9,-10,-24,-17,-18,-25,17,-14,-29,17,-13,17,-30,-31,-32,-28,]),'INTEGER':([0,2,3,4,5,7,8,9,12,14,16,17,18,20,21,22,23,24,25,30,31,32,33,36,37,38,39,41,42,43,47,48,50,51,52,53,54,55,58,61,64,65,66,69,70,71,],[7,7,-5,-7,-8,-22,-23,7,7,7,-16,7,-21,-6,7,7,38,7,42,-33,7,7,7,-19,-20,-11,-12,-15,-9,-10,-24,59,-17,-18,-25,7,-14,-29,7,-13,7,-30,69,-31,-32,-28,]),'FLOAT':([0,2,3,4,5,7,8,9,12,14,16,17,18,20,21,22,23,24,25,30,31,32,33,36,37,38,39,41,42,43,47,48,50,51,52,53,54,55,58,61,64,65,67,69,70,71,],[8,8,-5,-7,-8,-22,-23,8,8,8,-16,8,-21,-6,8,8,39,8,43,-33,8,8,8,-19,-20,-11,-12,-15,-9,-10,-24,60,-17,-18,-25,8,-14,-29,8,-13,8,-30,70,-31,-32,-28,]),'LPAREN':([0,2,3,4,5,7,8,9,10,12,14,15,16,17,18,20,21,22,24,27,30,31,32,33,36,37,38,39,41,42,43,47,50,51,52,53,54,55,58,61,64,65,69,70,71,],[12,12,-5,-7,-8,-22,-23,12,26,12,12,31,-16,12,-21,-6,12,12,12,46,-33,12,12,12,-19,-20,-11,-12,-15,-9,-10,-24,-17,-18,-25,12,-14,-29,12,-13,12,-30,-31,-32,-28,]),'$end':([1,2,3,4,5,7,8,16,18,19,20,30,36,37,38,39,41,42,43,47,50,51,52,54,55,61,65,71,],[0,-2,-5,-7,-8,-22,-23,-16,-21,-1,-6,-33,-19,-20,-11,-12,-15,-9,-10,-24,-17,-18,-25,-14,-29,-13,-30,-28,]),'END':([2,3,4,5,7,8,16,18,20,30,36,37,38,39,40,41,42,43,47,50,51,52,54,55,61,65,68,71,],[19,-5,-7,-8,-22,-23,-16,-21,-6,-33,-19,-20,-11,-12,54,-15,-9,-10,-24,-17,-18,-25,-14,-29,-13,-30,71,-28,]),'PLUS':([5,7,8,16,18,24,28,30,35,36,37,47,50,51,52,61,62,],[21,-22,-23,-16,-21,21,21,21,21,-19,-20,-24,-17,-18,-25,-13,21,]),'MINUS':([5,7,8,16,18,24,28,30,35,36,37,47,50,51,52,61,62,],[22,-22,-23,-16,-21,22,22,22,22,-19,-20,-24,-17,-18,-25,-13,22,]),'EQUALS':([6,10,],[23,25,]),'DIVIDE':([7,8,16,18,36,37,47,50,51,],[-22,-23,32,-21,32,32,-24,-17,-18,]),'TIMES':([7,8,16,18,36,37,47,50,51,],[-22,-23,33,-21,33,33,-24,-17,-18,]),'RPAREN':([7,8,16,18,28,35,36,37,44,45,47,49,50,51,52,57,61,62,63,],[-22,-23,-16,-21,47,-26,-19,-20,-3,55,-24,61,-17,-18,-25,64,-13,-27,-4,]),'RBRACKET':([7,8,16,18,34,35,36,37,47,50,51,52,61,62,],[-22,-23,-16,-21,52,-26,-19,-20,-24,-17,-18,-25,-13,-27,]),'COMMA':([7,8,16,18,34,35,36,37,44,45,47,49,50,51,52,57,61,62,63,],[-22,-23,-16,-21,53,-26,-19,-20,-3,56,-24,53,-17,-18,-25,56,-13,-27,-4,]),'GETS':([25,],[41,]),'IN':([29,],[48,]),'DOUBLE_DOT':([59,60,],[66,67,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'statements':([0,],[2,]),'statement':([0,2,3,24,25,35,39,43,67,68,77,90,98,105,106,107,109,113,114,118,120,],[3,24,25,25,25,67,68,77,25,25,25,105,109,25,113,114,25,25,25,120,25,]),'local_var':([0,2,3,24,25,35,39,43,67,68,77,90,98,105,106,107,109,113,114,118,120,],[4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,]),'expression':([0,2,3,8,14,15,17,18,21,24,25,26,27,28,29,30,31,34,35,39,43,51,67,68,69,77,81,82,87,90,91,98,105,106,107,109,113,114,118,120,],[5,5,5,35,43,44,46,50,55,5,5,57,58,59,60,61,62,66,5,5,5,55,5,5,44,5,50,102,104,5,106,5,5,5,5,5,5,5,5,5,]),'term':([0,2,3,8,14,15,17,18,21,24,25,26,27,28,29,30,31,32,33,34,35,39,43,51,67,68,69,77,81,82,87,90,91,98,105,106,107,109,113,114,118,120,],[20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,63,64,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,]),'factor':([0,2,3,8,14,15,17,18,21,24,25,26,27,28,29,30,31,32,33,34,35,39,43,51,52,53,56,67,68,69,77,81,82,87,90,91,98,105,106,107,109,113,114,118,120,],[22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,84,85,88,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,]),'key_value_pairs':([18,],[47,]),'key_value':([18,81,],[49,101,]),'elements':([21,51,],[54,83,]),'params':([41,69,],[74,94,]),'range':([79,],[98,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statements END','program',2,'p_program','AnalizadorSintactico.py',16),
  ('program -> statements','program',1,'p_program','AnalizadorSintactico.py',17),
  ('params -> IDENTIFIER','params',1,'p_params','AnalizadorSintactico.py',22),
  ('params -> params COMMA IDENTIFIER','params',3,'p_params','AnalizadorSintactico.py',23),
  ('statements -> statement','statements',1,'p_statements','AnalizadorSintactico.py',30),
  ('statements -> statements statement','statements',2,'p_statements','AnalizadorSintactico.py',31),
  ('statement -> local_var','statement',1,'p_statement','AnalizadorSintactico.py',39),
  ('statement -> expression','statement',1,'p_statement','AnalizadorSintactico.py',40),
  ('local_var -> IDENTIFIER EQUALS INTEGER','local_var',3,'p_local_var','AnalizadorSintactico.py',45),
  ('local_var -> IDENTIFIER EQUALS FLOAT','local_var',3,'p_local_var','AnalizadorSintactico.py',46),
  ('statement -> GLOBAL_VAR ASSIGN STRING','statement',3,'p_global_var','AnalizadorSintactico.py',51),
  ('statement -> GLOBAL_VAR ASSIGN expression','statement',3,'p_global_var','AnalizadorSintactico.py',52),
  ('factor -> factor POWER factor','factor',3,'p_factor_power','AnalizadorSintactico.py',56),
  ('factor -> STRING','factor',1,'p_factor_string','AnalizadorSintactico.py',60),
  ('expression -> LBRACE key_value_pairs RBRACE','expression',3,'p_hash','AnalizadorSintactico.py',64),
  ('expression -> LBRACE RBRACE','expression',2,'p_empty_hash','AnalizadorSintactico.py',69),
  ('key_value_pairs -> key_value','key_value_pairs',1,'p_key_value_pairs','AnalizadorSintactico.py',74),
  ('key_value_pairs -> key_value_pairs COMMA key_value','key_value_pairs',3,'p_key_value_pairs','AnalizadorSintactico.py',75),
  ('key_value -> expression HASH_ROCKET expression','key_value',3,'p_key_value','AnalizadorSintactico.py',82),
  ('expression -> IDENTIFIER','expression',1,'p_expression_var','AnalizadorSintactico.py',87),
  ('expression -> GLOBAL_VAR','expression',1,'p_expression_var','AnalizadorSintactico.py',88),
  ('expression -> INSTANCE_VAR','expression',1,'p_expression_var','AnalizadorSintactico.py',89),
  ('statement -> statement statement','statement',2,'p_statement_block','AnalizadorSintactico.py',93),
  ('statement -> IF expression statement END','statement',4,'p_if_statement','AnalizadorSintactico.py',97),
  ('statement -> IF expression statement ELSE statement END','statement',6,'p_if_statement','AnalizadorSintactico.py',98),
  ('statement -> IF expression statement ELSIF expression statement END','statement',7,'p_if_statement','AnalizadorSintactico.py',99),
  ('statement -> IF expression statement ELSIF expression statement ELSE statement END','statement',9,'p_if_statement','AnalizadorSintactico.py',100),
  ('expression -> expression GREATER expression','expression',3,'p_expression_comparison','AnalizadorSintactico.py',116),
  ('expression -> expression LESS expression','expression',3,'p_expression_comparison','AnalizadorSintactico.py',117),
  ('expression -> expression GREATER_EQUAL expression','expression',3,'p_expression_comparison','AnalizadorSintactico.py',118),
  ('expression -> expression LESS_EQUAL expression','expression',3,'p_expression_comparison','AnalizadorSintactico.py',119),
  ('expression -> expression EQUALS expression','expression',3,'p_expression_comparison','AnalizadorSintactico.py',120),
  ('expression -> expression NOT_EQUALS expression','expression',3,'p_expression_comparison','AnalizadorSintactico.py',121),
  ('statement -> DEF IDENTIFIER statement END','statement',4,'p_method_without_params_declaration','AnalizadorSintactico.py',135),
  ('statement -> IDENTIFIER','statement',1,'p_method_call_without_params','AnalizadorSintactico.py',141),
  ('statement -> INSTANCE_VAR EQUALS INTEGER','statement',3,'p_instance_var','AnalizadorSintactico.py',156),
  ('statement -> INSTANCE_VAR EQUALS FLOAT','statement',3,'p_instance_var','AnalizadorSintactico.py',157),
  ('expression -> SETNEW LPAREN elements RPAREN','expression',4,'p_set','AnalizadorSintactico.py',161),
  ('statement -> WHILE expression statement END','statement',4,'p_while_statement','AnalizadorSintactico.py',166),
  ('statement -> IDENTIFIER EQUALS GETS','statement',3,'p_gets_statement','AnalizadorSintactico.py',170),
  ('expression -> term','expression',1,'p_expression_term','AnalizadorSintactico.py',176),
  ('term -> term DIVIDE factor','term',3,'p_term_div','AnalizadorSintactico.py',180),
  ('term -> term TIMES factor','term',3,'p_term_times','AnalizadorSintactico.py',184),
  ('expression -> expression PLUS term','expression',3,'p_expression_plus','AnalizadorSintactico.py',188),
  ('expression -> expression MINUS term','expression',3,'p_expression_minus','AnalizadorSintactico.py',192),
  ('term -> factor','term',1,'p_term_factor','AnalizadorSintactico.py',196),
  ('factor -> INTEGER','factor',1,'p_factor_num','AnalizadorSintactico.py',200),
  ('factor -> FLOAT','factor',1,'p_factor_num','AnalizadorSintactico.py',201),
  ('factor -> LPAREN expression RPAREN','factor',3,'p_factor_expr','AnalizadorSintactico.py',205),
  ('expression -> LBRACKET elements RBRACKET','expression',3,'p_array','AnalizadorSintactico.py',210),
  ('elements -> expression','elements',1,'p_elements','AnalizadorSintactico.py',215),
  ('elements -> elements COMMA expression','elements',3,'p_elements','AnalizadorSintactico.py',216),
  ('statement -> DEF IDENTIFIER LPAREN params RPAREN statement END','statement',7,'p_method_with_return_declaration','AnalizadorSintactico.py',224),
  ('statement -> IDENTIFIER LPAREN params RPAREN','statement',4,'p_method_call_with_return','AnalizadorSintactico.py',229),
  ('statement -> FOR IDENTIFIER IN range statement','statement',5,'p_for_statement','AnalizadorSintactico.py',234),
  ('range -> INTEGER DOUBLE_DOT INTEGER','range',3,'p_range','AnalizadorSintactico.py',239),
  ('range -> FLOAT DOUBLE_DOT FLOAT','range',3,'p_range','AnalizadorSintactico.py',240),
  ('statement -> PUTS expression','statement',2,'p_puts_statement','AnalizadorSintactico.py',245),
]
