
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftPLUSMINUSleftTIMESDIVIDErightPOWERAND ASSIGN BEGIN BITWISE_AND BREAK CASE CLASS CLASS_VAR COMMA COMMENT CONSTANT DEF DIVIDE DIVIDE_ASSIGN DO DOT DOUBLE_DOT ELSE ELSIF END ENSURE EQUALS FALSE FLOAT FLOOR_DIVIDE FOR GLOBAL_VAR GREATER GREATER_EQUAL IDENTIFIER IF IN INSTANCE_VAR INTEGER LAMBDA LBRACE LBRACKET LESS LESS_EQUAL LPAREN MINUS MINUS_ASSIGN MOD MODULE MOD_ASSIGN NEXT NIL NOT NOT_EQUALS OR PIPE PLUS PLUS_ASSIGN POWER POWER_ASSIGN PROC PUTS QUESTION_MARK RAISE RANGE RBRACE RBRACKET REDO REQUIRE RESCUE RETRY RETURN RPAREN SELF SEMICOLON SPACESHIP STRING SUPER TIMES TIMES_ASSIGN TRUE UNTIL WHEN WHILE YIELDprogram : statements END\n               | statementsparams : IDENTIFIER\n              | params COMMA IDENTIFIERstatements : statement\n                  | statements statementstatement :  local_var\n                 | expressionlocal_var : IDENTIFIER EQUALS INTEGER\n                 | IDENTIFIER EQUALS FLOATexpression : expression PLUS termexpression : expression MINUS termexpression : termterm : term TIMES factorterm : term DIVIDE factorterm : factorfactor : INTEGER\n              | FLOAT factor : LPAREN expression RPARENexpression : LBRACKET elements RBRACKETelements : expression\n                | elements COMMA expressionstatement : DEF IDENTIFIER LPAREN params RPAREN statement ENDstatement : IDENTIFIER LPAREN params RPARENstatement : FOR IDENTIFIER IN range statementrange : INTEGER DOUBLE_DOT INTEGER\n             | FLOAT DOUBLE_DOT FLOATstatement : PUTS expression'
    
_lr_action_items = {'DEF':([0,2,3,4,5,11,12,13,15,17,25,30,31,35,36,37,39,40,41,44,46,50,52,56,57,58,],[6,6,-5,-7,-8,-17,-18,-13,-16,-6,-28,-11,-12,-9,-10,-19,-14,-15,-20,-24,6,6,-25,-26,-27,-23,]),'IDENTIFIER':([0,2,3,4,5,6,9,11,12,13,15,17,21,25,30,31,32,35,36,37,39,40,41,44,45,46,50,52,56,57,58,],[7,7,-5,-7,-8,20,24,-17,-18,-13,-16,-6,33,-28,-11,-12,33,-9,-10,-19,-14,-15,-20,-24,51,7,7,-25,-26,-27,-23,]),'FOR':([0,2,3,4,5,11,12,13,15,17,25,30,31,35,36,37,39,40,41,44,46,50,52,56,57,58,],[9,9,-5,-7,-8,-17,-18,-13,-16,-6,-28,-11,-12,-9,-10,-19,-14,-15,-20,-24,9,9,-25,-26,-27,-23,]),'PUTS':([0,2,3,4,5,11,12,13,15,17,25,30,31,35,36,37,39,40,41,44,46,50,52,56,57,58,],[10,10,-5,-7,-8,-17,-18,-13,-16,-6,-28,-11,-12,-9,-10,-19,-14,-15,-20,-24,10,10,-25,-26,-27,-23,]),'LBRACKET':([0,2,3,4,5,8,10,11,12,13,14,15,17,25,30,31,35,36,37,39,40,41,42,44,46,50,52,56,57,58,],[14,14,-5,-7,-8,14,14,-17,-18,-13,14,-16,-6,-28,-11,-12,-9,-10,-19,-14,-15,-20,14,-24,14,14,-25,-26,-27,-23,]),'INTEGER':([0,2,3,4,5,8,10,11,12,13,14,15,17,18,19,22,25,26,27,30,31,35,36,37,38,39,40,41,42,44,46,50,52,53,56,57,58,],[11,11,-5,-7,-8,11,11,-17,-18,-13,11,-16,-6,11,11,35,-28,11,11,-11,-12,-9,-10,-19,47,-14,-15,-20,11,-24,11,11,-25,56,-26,-27,-23,]),'FLOAT':([0,2,3,4,5,8,10,11,12,13,14,15,17,18,19,22,25,26,27,30,31,35,36,37,38,39,40,41,42,44,46,50,52,54,56,57,58,],[12,12,-5,-7,-8,12,12,-17,-18,-13,12,-16,-6,12,12,36,-28,12,12,-11,-12,-9,-10,-19,48,-14,-15,-20,12,-24,12,12,-25,57,-26,-27,-23,]),'LPAREN':([0,2,3,4,5,7,8,10,11,12,13,14,15,17,18,19,20,25,26,27,30,31,35,36,37,39,40,41,42,44,46,50,52,56,57,58,],[8,8,-5,-7,-8,21,8,8,-17,-18,-13,8,-16,-6,8,8,32,-28,8,8,-11,-12,-9,-10,-19,-14,-15,-20,8,-24,8,8,-25,-26,-27,-23,]),'$end':([1,2,3,4,5,11,12,13,15,16,17,25,30,31,35,36,37,39,40,41,44,52,58,],[0,-2,-5,-7,-8,-17,-18,-13,-16,-1,-6,-28,-11,-12,-9,-10,-19,-14,-15,-20,-24,-25,-23,]),'END':([2,3,4,5,11,12,13,15,17,25,30,31,35,36,37,39,40,41,44,52,55,58,],[16,-5,-7,-8,-17,-18,-13,-16,-6,-28,-11,-12,-9,-10,-19,-14,-15,-20,-24,-25,58,-23,]),'PLUS':([5,11,12,13,15,23,25,29,30,31,37,39,40,41,49,],[18,-17,-18,-13,-16,18,18,18,-11,-12,-19,-14,-15,-20,18,]),'MINUS':([5,11,12,13,15,23,25,29,30,31,37,39,40,41,49,],[19,-17,-18,-13,-16,19,19,19,-11,-12,-19,-14,-15,-20,19,]),'EQUALS':([7,],[22,]),'TIMES':([11,12,13,15,30,31,37,39,40,],[-17,-18,26,-16,26,26,-19,-14,-15,]),'DIVIDE':([11,12,13,15,30,31,37,39,40,],[-17,-18,27,-16,27,27,-19,-14,-15,]),'RPAREN':([11,12,13,15,23,30,31,33,34,37,39,40,41,43,51,],[-17,-18,-13,-16,37,-11,-12,-3,44,-19,-14,-15,-20,50,-4,]),'RBRACKET':([11,12,13,15,28,29,30,31,37,39,40,41,49,],[-17,-18,-13,-16,41,-21,-11,-12,-19,-14,-15,-20,-22,]),'COMMA':([11,12,13,15,28,29,30,31,33,34,37,39,40,41,43,49,51,],[-17,-18,-13,-16,42,-21,-11,-12,-3,45,-19,-14,-15,-20,45,-22,-4,]),'IN':([24,],[38,]),'DOUBLE_DOT':([47,48,],[53,54,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'statements':([0,],[2,]),'statement':([0,2,46,50,],[3,17,52,55,]),'local_var':([0,2,46,50,],[4,4,4,4,]),'expression':([0,2,8,10,14,42,46,50,],[5,5,23,25,29,49,5,5,]),'term':([0,2,8,10,14,18,19,42,46,50,],[13,13,13,13,13,30,31,13,13,13,]),'factor':([0,2,8,10,14,18,19,26,27,42,46,50,],[15,15,15,15,15,15,15,39,40,15,15,15,]),'elements':([14,],[28,]),'params':([21,32,],[34,43,]),'range':([38,],[46,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statements END','program',2,'p_program','AnalizadorSintactico.py',14),
  ('program -> statements','program',1,'p_program','AnalizadorSintactico.py',15),
  ('params -> IDENTIFIER','params',1,'p_params','AnalizadorSintactico.py',20),
  ('params -> params COMMA IDENTIFIER','params',3,'p_params','AnalizadorSintactico.py',21),
  ('statements -> statement','statements',1,'p_statements','AnalizadorSintactico.py',28),
  ('statements -> statements statement','statements',2,'p_statements','AnalizadorSintactico.py',29),
  ('statement -> local_var','statement',1,'p_statement','AnalizadorSintactico.py',37),
  ('statement -> expression','statement',1,'p_statement','AnalizadorSintactico.py',38),
  ('local_var -> IDENTIFIER EQUALS INTEGER','local_var',3,'p_local_var','AnalizadorSintactico.py',43),
  ('local_var -> IDENTIFIER EQUALS FLOAT','local_var',3,'p_local_var','AnalizadorSintactico.py',44),
  ('expression -> expression PLUS term','expression',3,'p_expression_plus','AnalizadorSintactico.py',49),
  ('expression -> expression MINUS term','expression',3,'p_expression_minus','AnalizadorSintactico.py',53),
  ('expression -> term','expression',1,'p_expression_term','AnalizadorSintactico.py',57),
  ('term -> term TIMES factor','term',3,'p_term_times','AnalizadorSintactico.py',61),
  ('term -> term DIVIDE factor','term',3,'p_term_div','AnalizadorSintactico.py',65),
  ('term -> factor','term',1,'p_term_factor','AnalizadorSintactico.py',69),
  ('factor -> INTEGER','factor',1,'p_factor_num','AnalizadorSintactico.py',73),
  ('factor -> FLOAT','factor',1,'p_factor_num','AnalizadorSintactico.py',74),
  ('factor -> LPAREN expression RPAREN','factor',3,'p_factor_expr','AnalizadorSintactico.py',78),
  ('expression -> LBRACKET elements RBRACKET','expression',3,'p_array','AnalizadorSintactico.py',83),
  ('elements -> expression','elements',1,'p_elements','AnalizadorSintactico.py',88),
  ('elements -> elements COMMA expression','elements',3,'p_elements','AnalizadorSintactico.py',89),
  ('statement -> DEF IDENTIFIER LPAREN params RPAREN statement END','statement',7,'p_method_with_return_declaration','AnalizadorSintactico.py',97),
  ('statement -> IDENTIFIER LPAREN params RPAREN','statement',4,'p_method_call_with_return','AnalizadorSintactico.py',102),
  ('statement -> FOR IDENTIFIER IN range statement','statement',5,'p_for_statement','AnalizadorSintactico.py',107),
  ('range -> INTEGER DOUBLE_DOT INTEGER','range',3,'p_range','AnalizadorSintactico.py',112),
  ('range -> FLOAT DOUBLE_DOT FLOAT','range',3,'p_range','AnalizadorSintactico.py',113),
  ('statement -> PUTS expression','statement',2,'p_puts_statement','AnalizadorSintactico.py',118),
]
