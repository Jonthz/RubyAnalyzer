Tokens reconocidos:
DEF: def
IDENTIFIER: buscar_mayores
LPAREN: (
IDENTIFIER: arr
COMMA: ,
IDENTIFIER: limite
RPAREN: )
IDENTIFIER: encontrados
ASSIGN: =
LBRACKET: [
RBRACKET: ]
FOR: for
IDENTIFIER: i
IN: in
INTEGER: 0
RANGE: ..
LPAREN: (
IDENTIFIER: arr
DOT: .
IDENTIFIER: length
MINUS: -
INTEGER: 1
RPAREN: )
IF: if
IDENTIFIER: arr
LBRACKET: [
IDENTIFIER: i
RBRACKET: ]
GREATER: >
IDENTIFIER: limite
IDENTIFIER: encontrados
LBRACKET: [
IDENTIFIER: encontrados
DOT: .
IDENTIFIER: length
RBRACKET: ]
ASSIGN: =
IDENTIFIER: arr
LBRACKET: [
IDENTIFIER: i
RBRACKET: ]
END: end
END: end
RETURN: return
IDENTIFIER: encontrados
END: end
DEF: def
IDENTIFIER: buscar_menores
LPAREN: (
IDENTIFIER: arr
COMMA: ,
IDENTIFIER: limite
RPAREN: )
IDENTIFIER: encontrados
ASSIGN: =
LBRACKET: [
RBRACKET: ]
FOR: for
IDENTIFIER: i
IN: in
INTEGER: 0
RANGE: ..
LPAREN: (
IDENTIFIER: arr
DOT: .
IDENTIFIER: length
MINUS: -
INTEGER: 1
RPAREN: )
IF: if
IDENTIFIER: arr
LBRACKET: [
IDENTIFIER: i
RBRACKET: ]
LESS: <
IDENTIFIER: limite
IDENTIFIER: encontrados
LBRACKET: [
IDENTIFIER: encontrados
DOT: .
IDENTIFIER: length
RBRACKET: ]
ASSIGN: =
IDENTIFIER: arr
LBRACKET: [
IDENTIFIER: i
RBRACKET: ]
END: end
END: end
RETURN: return
IDENTIFIER: encontrados
END: end
DEF: def
IDENTIFIER: contar_elementos
LPAREN: (
IDENTIFIER: arr
COMMA: ,
IDENTIFIER: limite
RPAREN: )
IDENTIFIER: mayores
ASSIGN: =
INTEGER: 0
IDENTIFIER: menores
ASSIGN: =
INTEGER: 0
FOR: for
IDENTIFIER: i
IN: in
INTEGER: 0
RANGE: ..
LPAREN: (
IDENTIFIER: arr
DOT: .
IDENTIFIER: length
MINUS: -
INTEGER: 1
RPAREN: )
IF: if
IDENTIFIER: arr
LBRACKET: [
IDENTIFIER: i
RBRACKET: ]
GREATER: >
IDENTIFIER: limite
IDENTIFIER: mayores
ASSIGN: =
IDENTIFIER: mayores
PLUS: +
INTEGER: 1
END: end
IF: if
IDENTIFIER: arr
LBRACKET: [
IDENTIFIER: i
RBRACKET: ]
LESS: <
IDENTIFIER: limite
IDENTIFIER: menores
ASSIGN: =
IDENTIFIER: menores
PLUS: +
INTEGER: 1
END: end
END: end
RETURN: return
IDENTIFIER: mayores
COMMA: ,
IDENTIFIER: menores
END: end
IDENTIFIER: numeros
ASSIGN: =
LBRACKET: [
INTEGER: 3
COMMA: ,
INTEGER: 8
COMMA: ,
INTEGER: 12
COMMA: ,
INTEGER: 5
COMMA: ,
INTEGER: 18
COMMA: ,
INTEGER: 2
COMMA: ,
INTEGER: 15
COMMA: ,
INTEGER: 7
COMMA: ,
INTEGER: 20
COMMA: ,
INTEGER: 1
RBRACKET: ]
IDENTIFIER: limite
ASSIGN: =
INTEGER: 10
IDENTIFIER: resultado1
ASSIGN: =
IDENTIFIER: buscar_mayores
LPAREN: (
IDENTIFIER: numeros
COMMA: ,
IDENTIFIER: limite
RPAREN: )
IDENTIFIER: resultado2
ASSIGN: =
IDENTIFIER: buscar_menores
LPAREN: (
IDENTIFIER: numeros
COMMA: ,
IDENTIFIER: limite
RPAREN: )
PUTS: puts
STRING: Elementos mayores:
PUTS: puts
IDENTIFIER: resultado1
PUTS: puts
STRING: Elementos menores:
PUTS: puts
IDENTIFIER: resultado2
