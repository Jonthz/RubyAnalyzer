Tokens reconocidos:
CLASS: class
CONSTANT: Calculator
DEF: def
INITIALIZE: initialize
LPAREN: (
IDENTIFIER: name
RPAREN: )
INSTANCE_VAR: @name
ASSIGN: =
IDENTIFIER: name
END: end
DEF: def
IDENTIFIER: add_strings
LPAREN: (
IDENTIFIER: str1
COMMA: ,
IDENTIFIER: str2
RPAREN: )
PUTS: puts
STRING: Sumando strings
IDENTIFIER: result
ASSIGN: =
IDENTIFIER: str1
DOT: .
IDENTIFIER: to_i
PLUS: +
IDENTIFIER: str2
DOT: .
IDENTIFIER: to_i
PUTS: puts
IDENTIFIER: result
RETURN: return
IDENTIFIER: result
END: end
DEF: def
IDENTIFIER: convert_test
LPAREN: (
IDENTIFIER: value
RPAREN: )
PUTS: puts
STRING: Valor original:
PUTS: puts
IDENTIFIER: value
IDENTIFIER: converted
ASSIGN: =
IDENTIFIER: value
DOT: .
IDENTIFIER: to_i
PUTS: puts
STRING: Convertido a entero:
PUTS: puts
IDENTIFIER: converted
RETURN: return
IDENTIFIER: converted
END: end
END: end
IDENTIFIER: calc
ASSIGN: =
CONSTANT: Calculator
DOT: .
NEW: new
LPAREN: (
STRING: MiCalculadora
RPAREN: )
IDENTIFIER: number_str
ASSIGN: =
STRING: 123
IDENTIFIER: result1
ASSIGN: =
IDENTIFIER: calc
DOT: .
IDENTIFIER: convert_test
LPAREN: (
IDENTIFIER: number_str
RPAREN: )
IDENTIFIER: sum_result
ASSIGN: =
IDENTIFIER: calc
DOT: .
IDENTIFIER: add_strings
LPAREN: (
STRING: 45
COMMA: ,
STRING: 55
RPAREN: )
IDENTIFIER: x
ASSIGN: =
INTEGER: 10
IDENTIFIER: y
ASSIGN: =
STRING: 20
IDENTIFIER: good_sum
ASSIGN: =
IDENTIFIER: x
PLUS: +
IDENTIFIER: y
DOT: .
IDENTIFIER: to_i
PUTS: puts
STRING: Suma válida con conversión:
PUTS: puts
IDENTIFIER: good_sum
IDENTIFIER: text
ASSIGN: =
STRING: 100
IDENTIFIER: converted_number
ASSIGN: =
IDENTIFIER: text
DOT: .
IDENTIFIER: to_i
DOT: .
IDENTIFIER: to_f
DOT: .
IDENTIFIER: to_s
PUTS: puts
STRING: Cadena de conversiones:
PUTS: puts
IDENTIFIER: converted_number
GLOBAL_VAR: $global_string
ASSIGN: =
STRING: 999
GLOBAL_VAR: $global_number
ASSIGN: =
GLOBAL_VAR: $global_string
DOT: .
IDENTIFIER: to_i
PUTS: puts
STRING: Variable global convertida:
PUTS: puts
GLOBAL_VAR: $global_numbers
