Tokens reconocidos:
CLASS: class
CONSTANT: Calculator
DEF: def
INITIALIZE: initialize
LPAREN: (
IDENTIFIER: name
RPAREN: )
INSTANCE_VAR: @name
ASSIGN: =
IDENTIFIER: name
END: end
DEF: def
IDENTIFIER: add_numbers
LPAREN: (
IDENTIFIER: x
COMMA: ,
IDENTIFIER: y
RPAREN: )
IDENTIFIER: result
ASSIGN: =
IDENTIFIER: x
MOD: %
IDENTIFIER: y
PUTS: puts
STRING: Suma: #{result}
RETURN: return
IDENTIFIER: result
END: end
DEF: def
IDENTIFIER: add_strings
LPAREN: (
IDENTIFIER: str1
COMMA: ,
IDENTIFIER: str2
RPAREN: )
IDENTIFIER: result
ASSIGN: =
IDENTIFIER: str1
DOT: .
IDENTIFIER: to_i
PLUS: +
IDENTIFIER: str2
DOT: .
IDENTIFIER: to_i
PUTS: puts
STRING: Suma de strings: #{result}
RETURN: return
IDENTIFIER: result
END: end
END: end
IDENTIFIER: calc
ASSIGN: =
CONSTANT: Calculator
DOT: .
NEW: new
LPAREN: (
STRING: MiCalculadora
RPAREN: )
IDENTIFIER: sum1
ASSIGN: =
IDENTIFIER: calc
DOT: .
IDENTIFIER: add_numbers
LPAREN: (
INTEGER: 10
COMMA: ,
INTEGER: 20
RPAREN: )
IDENTIFIER: sum2
ASSIGN: =
IDENTIFIER: calc
DOT: .
IDENTIFIER: add_strings
LPAREN: (
STRING: 15
COMMA: ,
STRING: 25
RPAREN: )
PUTS: puts
STRING: Resultados:
PUTS: puts
IDENTIFIER: sum1
PUTS: puts
IDENTIFIER: sum2
