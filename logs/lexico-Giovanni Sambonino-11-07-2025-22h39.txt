Tokens reconocidos:
DEF: def
IDENTIFIER: sum
LPAREN: (
IDENTIFIER: a
COMMA: ,
IDENTIFIER: b
RPAREN: )
IDENTIFIER: resultado
ASSIGN: =
IDENTIFIER: a
PLUS: +
IDENTIFIER: b
RETURN: return
IDENTIFIER: resultado
END: end
DEF: def
IDENTIFIER: verificar_numero
LPAREN: (
IDENTIFIER: num
RPAREN: )
IF: if
IDENTIFIER: num
GREATER: >
INTEGER: 0
RETURN: return
TRUE: true
END: end
RETURN: return
FALSE: false
END: end
DEF: def
IDENTIFIER: procesar_array
LPAREN: (
IDENTIFIER: arr
RPAREN: )
IDENTIFIER: total
ASSIGN: =
INTEGER: 0
FOR: for
IDENTIFIER: i
IN: in
INTEGER: 0
RANGE: ..
LPAREN: (
IDENTIFIER: arr
DOT: .
IDENTIFIER: length
MINUS: -
INTEGER: 1
RPAREN: )
IDENTIFIER: total
ASSIGN: =
IDENTIFIER: total
PLUS: +
IDENTIFIER: arr
LBRACKET: [
IDENTIFIER: i
RBRACKET: ]
END: end
RETURN: return
IDENTIFIER: total
END: end
PUTS: puts
STRING: Hola mundo
PUTS: puts
STRING: Ruby
INSTANCE_VAR: @x
ASSIGN: =
INTEGER: 10
IDENTIFIER: a
ASSIGN: =
INTEGER: 5
IDENTIFIER: b
ASSIGN: =
INTEGER: 10
IDENTIFIER: c
ASSIGN: =
IDENTIFIER: a
PLUS: +
IDENTIFIER: b
IDENTIFIER: x
ASSIGN: =
INTEGER: 10
IDENTIFIER: y
ASSIGN: =
IDENTIFIER: x
PLUS: +
INTEGER: 5
IDENTIFIER: contador
ASSIGN: =
INTEGER: 0
WHILE: while
IDENTIFIER: contador
LESS: <
INTEGER: 3
PUTS: puts
IDENTIFIER: contador
IDENTIFIER: contador
ASSIGN: =
IDENTIFIER: contador
PLUS: +
INTEGER: 1
END: end
IDENTIFIER: suma_resultado
ASSIGN: =
IDENTIFIER: sum
LPAREN: (
INTEGER: 5
COMMA: ,
INTEGER: 10
RPAREN: )
IDENTIFIER: numero_valido
ASSIGN: =
IDENTIFIER: verificar_numero
LPAREN: (
IDENTIFIER: suma_resultado
RPAREN: )
IDENTIFIER: numeros
ASSIGN: =
LBRACKET: [
INTEGER: 64
COMMA: ,
INTEGER: 34
COMMA: ,
INTEGER: 25
COMMA: ,
INTEGER: 12
COMMA: ,
INTEGER: 22
RBRACKET: ]
IDENTIFIER: primer_numero
ASSIGN: =
IDENTIFIER: numeros
LBRACKET: [
INTEGER: 0
RBRACKET: ]
IDENTIFIER: ultimo_numero
ASSIGN: =
IDENTIFIER: numeros
LBRACKET: [
INTEGER: 4
RBRACKET: ]
FOR: for
IDENTIFIER: i
IN: in
INTEGER: 0
RANGE: ..
INTEGER: 4
PUTS: puts
IDENTIFIER: numeros
LBRACKET: [
IDENTIFIER: i
RBRACKET: ]
END: end
IDENTIFIER: total_suma
ASSIGN: =
IDENTIFIER: procesar_array
LPAREN: (
IDENTIFIER: numeros
RPAREN: )
PUTS: puts
STRING: Variable de instancia:
PUTS: puts
INSTANCE_VAR: @x
PUTS: puts
STRING: Suma de 5 + 10:
PUTS: puts
IDENTIFIER: suma_resultado
PUTS: puts
STRING: Primer numero del array:
PUTS: puts
IDENTIFIER: primer_numero
PUTS: puts
STRING: Ultimo numero del array:
PUTS: puts
IDENTIFIER: ultimo_numero
PUTS: puts
STRING: Suma total del array:
PUTS: puts
IDENTIFIER: total_suma
PUTS: puts
STRING: Numero es valido:
PUTS: puts
IDENTIFIER: numero_valido
PUTS: puts
STRING: Variable c vale:
PUTS: puts
IDENTIFIER: c
PUTS: puts
STRING: Variable y vale:
PUTS: puts
IDENTIFIER: y
