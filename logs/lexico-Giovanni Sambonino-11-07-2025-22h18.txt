Tokens reconocidos:
DEF: def
IDENTIFIER: calcular
LPAREN: (
IDENTIFIER: key
RPAREN: )
IDENTIFIER: j
ASSIGN: =
INTEGER: 0
IDENTIFIER: suma
ASSIGN: =
INTEGER: 0
FOR: for
IDENTIFIER: i
IN: in
INTEGER: 1
RANGE: ..
IDENTIFIER: key
IF: if
IDENTIFIER: i
GREATER: >
INTEGER: 5
IDENTIFIER: j
PLUS_ASSIGN: +=
INTEGER: 1
IDENTIFIER: suma
PLUS_ASSIGN: +=
IDENTIFIER: i
ELSIF: elsif
IDENTIFIER: i
EQUALS: ==
INTEGER: 5
IDENTIFIER: suma
PLUS_ASSIGN: +=
IDENTIFIER: i
MINUS: -
INTEGER: 1
END: end
END: end
IDENTIFIER: contador
ASSIGN: =
IDENTIFIER: key
WHILE: while
IDENTIFIER: contador
GREATER: >
INTEGER: 0
IF: if
IDENTIFIER: contador
GREATER: >
INTEGER: 3
IDENTIFIER: suma
PLUS_ASSIGN: +=
INTEGER: 1
END: end
IDENTIFIER: contador
MINUS_ASSIGN: -=
INTEGER: 1
END: end
RETURN: return
STRING: Suma: #{suma}, j: #{j}, key: #{key}
END: end
IDENTIFIER: key
ASSIGN: =
INTEGER: 7
PUTS: puts
IDENTIFIER: calcular
LPAREN: (
IDENTIFIER: key
RPAREN: )
