Tokens reconocidos:
DEF: def
IDENTIFIER: quick_sort
LPAREN: (
IDENTIFIER: arr
COMMA: ,
IDENTIFIER: low
COMMA: ,
IDENTIFIER: high
RPAREN: )
IF: if
IDENTIFIER: low
LESS: <
IDENTIFIER: high
IDENTIFIER: pivot_index
ASSIGN: =
IDENTIFIER: partition
LPAREN: (
IDENTIFIER: arr
COMMA: ,
IDENTIFIER: low
COMMA: ,
IDENTIFIER: high
RPAREN: )
IDENTIFIER: quick_sort
LPAREN: (
IDENTIFIER: arr
COMMA: ,
IDENTIFIER: low
COMMA: ,
IDENTIFIER: pivot_index
MINUS: -
INTEGER: 1
RPAREN: )
IDENTIFIER: quick_sort
LPAREN: (
IDENTIFIER: arr
COMMA: ,
IDENTIFIER: pivot_index
PLUS: +
INTEGER: 1
COMMA: ,
IDENTIFIER: high
RPAREN: )
END: end
END: end
DEF: def
IDENTIFIER: partition
LPAREN: (
IDENTIFIER: arr
COMMA: ,
IDENTIFIER: low
COMMA: ,
IDENTIFIER: high
RPAREN: )
IDENTIFIER: pivot
ASSIGN: =
IDENTIFIER: arr
LBRACKET: [
IDENTIFIER: high
RBRACKET: ]
IDENTIFIER: i
ASSIGN: =
IDENTIFIER: low
MINUS: -
INTEGER: 1
FOR: for
IDENTIFIER: j
IN: in
IDENTIFIER: low
RANGE: ..
IDENTIFIER: high
MINUS: -
INTEGER: 1
IF: if
IDENTIFIER: arr
LBRACKET: [
IDENTIFIER: j
RBRACKET: ]
LESS_EQUAL: <=
IDENTIFIER: pivot
IDENTIFIER: i
PLUS_ASSIGN: +=
INTEGER: 1
IDENTIFIER: arr
LBRACKET: [
IDENTIFIER: i
RBRACKET: ]
COMMA: ,
IDENTIFIER: arr
LBRACKET: [
IDENTIFIER: j
RBRACKET: ]
ASSIGN: =
IDENTIFIER: arr
LBRACKET: [
IDENTIFIER: j
RBRACKET: ]
COMMA: ,
IDENTIFIER: arr
LBRACKET: [
IDENTIFIER: i
RBRACKET: ]
END: end
END: end
IDENTIFIER: arr
LBRACKET: [
IDENTIFIER: i
PLUS: +
INTEGER: 1
RBRACKET: ]
COMMA: ,
IDENTIFIER: arr
LBRACKET: [
IDENTIFIER: high
RBRACKET: ]
ASSIGN: =
IDENTIFIER: arr
LBRACKET: [
IDENTIFIER: high
RBRACKET: ]
COMMA: ,
IDENTIFIER: arr
LBRACKET: [
IDENTIFIER: i
PLUS: +
INTEGER: 1
RBRACKET: ]
RETURN: return
IDENTIFIER: i
PLUS: +
INTEGER: 1
END: end
DEF: def
IDENTIFIER: print_array
LPAREN: (
IDENTIFIER: arr
RPAREN: )
PUTS: puts
IDENTIFIER: arr
DOT: .
IDENTIFIER: join
LPAREN: (
STRING: , 
RPAREN: )
END: end
IDENTIFIER: arr1
ASSIGN: =
LBRACKET: [
INTEGER: 12
COMMA: ,
INTEGER: 11
COMMA: ,
INTEGER: 13
COMMA: ,
INTEGER: 5
COMMA: ,
INTEGER: 6
RBRACKET: ]
IDENTIFIER: quick_sort
LPAREN: (
IDENTIFIER: arr1
COMMA: ,
INTEGER: 0
COMMA: ,
IDENTIFIER: arr1
DOT: .
IDENTIFIER: length
MINUS: -
INTEGER: 1
RPAREN: )
IDENTIFIER: print_array
LPAREN: (
IDENTIFIER: arr1
RPAREN: )
