Tokens reconocidos:
DEF: def
IDENTIFIER: analizar_numero
LPAREN: (
IDENTIFIER: num
COMMA: ,
IDENTIFIER: key
RPAREN: )
IDENTIFIER: j
ASSIGN: =
INTEGER: 0
IDENTIFIER: suma
ASSIGN: =
INTEGER: 0
IDENTIFIER: arr
ASSIGN: =
NIL: nil
WHILE: while
IDENTIFIER: num
GREATER: >
INTEGER: 0
IDENTIFIER: dig
ASSIGN: =
IDENTIFIER: num
MOD: %
MOD: %
INTEGER: 10
IF: if
IDENTIFIER: dig
GREATER: >
IDENTIFIER: key
IDENTIFIER: j
PLUS_ASSIGN: +=
INTEGER: 1
IDENTIFIER: suma
PLUS_ASSIGN: +=
IDENTIFIER: dig
ELSIF: elsif
IDENTIFIER: dig
EQUALS: ==
IDENTIFIER: key
IDENTIFIER: suma
PLUS_ASSIGN: +=
INTEGER: 1
END: end
IDENTIFIER: num
ASSIGN: =
IDENTIFIER: num
DIVIDE: /
INTEGER: 10
END: end
FOR: for
IDENTIFIER: i
IN: in
INTEGER: 1
RANGE: ..
IDENTIFIER: j
IDENTIFIER: suma
PLUS_ASSIGN: +=
IDENTIFIER: i
END: end
RETURN: return
IDENTIFIER: suma
END: end
IDENTIFIER: key
ASSIGN: =
INTEGER: 5
IDENTIFIER: resultado
ASSIGN: =
IDENTIFIER: analizar_numero
LPAREN: (
INTEGER: 9834512
COMMA: ,
IDENTIFIER: key
RPAREN: )
PUTS: puts
STRING: Resultado: #{resultado}
